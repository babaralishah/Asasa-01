{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/forgetpass/forgetpass.component.ts","./src/app/forgetpass/forgetpass.component.html","./src/app/forgetpassverify/forgetpassverify.component.ts","./src/app/forgetpassverify/forgetpassverify.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/map/map.component.ts","./src/app/map/map.component.html","./src/app/newpass/newpass.component.ts","./src/app/newpass/newpass.component.html","./src/app/services/authentication.service.ts","./src/app/services/mapservice.service.ts","./src/app/signup/signup.component.ts","./src/app/signup/signup.component.html","./src/app/signupotp/signupotp.component.ts","./src/app/signupotp/signupotp.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MapComponent } from './map/map.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { ForgetpassComponent } from './forgetpass/forgetpass.component';\nimport { ForgetpassverifyComponent } from './forgetpassverify/forgetpassverify.component';\nimport { NewpassComponent } from './newpass/newpass.component';\nimport { SignupotpComponent } from './signupotp/signupotp.component';\nconst routes: Routes = [\n  { path: 'map', component: MapComponent },\n  { path: 'login-component', component: LoginComponent },\n  { path: 'signup-component', component: SignupComponent },\n  { path: 'forgetpass-component', component: ForgetpassComponent },\n  { path: 'forgetpassverify-component/:email', component: ForgetpassverifyComponent },\n  { path: 'newpass-component/:email', component: NewpassComponent },\n  { path: 'signupotp-component/:email', component: SignupotpComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { MDBBootstrapModule } from 'angular-bootstrap-md';\nimport { Component } from '@angular/core';\nimport { AuthenticationService } from \"./services/authentication.service\";\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  isShown:boolean=false;\n  title = 'asasa';\n  loginForm: FormGroup; // Instance of Form group that will get form data from user end (i.e; login.html)\n  // registerForm: FormGroup;\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n  constructor(\n    public formBuilder: FormBuilder, // Creating an instance of Formbuilder\n    public authService: AuthenticationService, // Instance of Authentication services created in front end\n    public router: Router) {\n  }\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email, Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n  get email() {\n    return this.loginForm.get('email')\n  }\n  loginUser() {\n    this.submitted = true;\n    if (this.loginForm.invalid) {\n      return;\n    }\n    // console.log('user login data: ',this.loginForm.value);\n    this.authService.login(this.loginForm.value).subscribe(data => {\n\n      console.log(data);\n      const status = data.status;\n      const msg:string = data.msg;\n      console.log(\"Status: \" + status);\n      console.log(\"Message: \" + msg);\n      if (status) {\n\n      } else {\n        alert('Invalid email or password!');\n      }\n    });\n  }\n  // getting input labels values from user end (login.html)\n  get f() { return this.loginForm.controls; }\n}\n","<!-- NG-ZORRO -->\n<!-- <a href=\"https://github.com/NG-ZORRO/ng-zorro-antd\" target=\"_blank\" style=\"display: flex;align-items: center;justify-content: center;height: 100%;width: 100%;\">\n  <img height=\"300\" src=\"https://img.alicdn.com/tfs/TB1X.qJJgHqK1RjSZFgXXa7JXXa-89-131.svg\">\n</a> -->\n\n<nav class=\"navbar navbar-dark bg-dark navbar-expand-lg\">\n  <div class=\"container-fluid px-0\">\n    <div class=\"row w-100\">\n      <div class=\"col-5\">\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo03\" aria-controls=\"navbarTogglerDemo03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" (click)=\"isShown = !isShown\" >\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        <ul class=\"navbar-nav mt-2 mt-lg-0\">a\n\n\n          <li class=\"nav-item active pull-left\">\n            <a class=\"nav-link\" href=\"#\" (click)=\"isShown = false\" >Home</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"#\" (click)=\"isShown = false\" >About</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"#\" (click)=\"isShown = false\" >Portfolio</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"#\" (click)=\"isShown = false\" >Book Me</a>\n          </li>\n        </ul>\n      </div>\n<div class=\"col-md-3\">\n</div>\n      <div class=\"col-4 \" >\n        <div class=\"collapse justify-content-end navbar-collapse\" [ngClass]=\"{ 'show': isShown }\" id=\"navbarTogglerDemo03\">\n          <button  class = \"btn btn-info rounded-pill\" routerLink=\"/map\">Mapping</button>\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            <button  class = \"btn btn-info rounded-pill\" data-toggle=\"modal\" data-target=\"#exampleModal\">Login</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</nav>\n\n\n<!-- Modal -->\n<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n    \n       \n      \n      <div class=\"modal-body\">\n        \n        <button type=\"button\" class=\"close pull-right\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n          <div class=\"row\">\n            <div class=\"col-sm-6 col-md-6 left\">\n              <div>\n        \n                <img class=\"left-img\" src=\"assets/icons/asasa.gif\" />\n              </div>\n            </div>\n        \n            <div class=\"col-1 v2\">\n              <div class=\"vl\"></div>\n              Log  in\n              <div class=\"vl\"></div>\n            </div>\n        \n            <div class=\"col-sm-5 col-md-5 right\">\n              <h2>Welcome to my asasa</h2>\n                                    <form class=\"form-register\" [formGroup]=\"loginForm\" (ngSubmit)=\"loginUser()\">\n        \n                                        <div class=\"form-group\" class='input-container'>\n                                            <div class=\"input-group\">\n                                                <i class=\"fa fa-user icon\"></i>\n                                                <input class=\"form-control\" class=\"input-field\"\n                                                    [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" id=\"inputEmail\"\n                                                    type=\"email\" name=\"email\" formControlName=\"email\"\n                                                    placeholder=\"Email address\" required=\"\" autofocus=\"\"\n                                                    class=\"form-control rounded-pill border-0 shadow-sm px-4\">\n                                                <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                                                    <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                                                    <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"form-group\">\n                                            <div class=\"input-group\">\n                                                <i class=\"fa fa-lock icon\"></i>\n                                                <input id=\"password\" type=\"password\" formControlName=\"password\"\n                                                    placeholder=\"Password\" required=\"\"\n                                                    class=\"form-control rounded-pill border-0 shadow-sm px-4 text-primary\"\n                                                    [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\">\n                                                <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                                                    <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                                                    <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6\n                                                        characters\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"form-group\">\n                                            <br>\n                                            <button type=\"submit\" class='btn'\n                                                class=\"btn btn-primary rounded-pill\">Login</button>\n                                        </div>\n                                        <div class=\"custom-control custom-checkbox mb-3\">\n                                            <input id=\"customCheck1\" type=\"checkbox\" checked class=\"custom-control-input\">\n                                            <!-- <label for=\"customCheck1\" class=\"custom-control-label\">Remember password</label> -->\n                                            <a routerLink=\"/forgetpass-component\"> <b>Forget Password</b></a>\n                                            <br>\n                                            Not Registered?\n                                            <a routerLink=\"/register-component\"> <b>Sign up!</b></a>\n                                        </div>\n                                    </form>\n        \n                                </div>\n                            </div>\n                        \n                        \n                       \n                       \n\n\n      </div>\n     \n    </div>\n  </div>\n</div>\n\n<!-- <div> \n<button  class = \"button\" routerLink=\"/map-component\">Mapping</button>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n  <button  class = \"button\" routerLink=\"/login-component\">Login</button>\n  </div> -->\n<!-- The routed views render in the <router-outlet>-->\n  <router-outlet></router-outlet>","// import { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\n// import {MaterialModule} from '@angular/material';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MapComponent } from './map/map.component';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SignupComponent } from './signup/signup.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ForgetpassComponent } from './forgetpass/forgetpass.component';\nimport { ForgetpassverifyComponent } from './forgetpassverify/forgetpassverify.component';\nimport { NewpassComponent } from './newpass/newpass.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignupotpComponent } from './signupotp/signupotp.component';\nimport { NZ_I18N } from 'ng-zorro-antd/i18n';\nimport { en_US } from 'ng-zorro-antd/i18n';\nimport { registerLocaleData } from '@angular/common';\nimport en from '@angular/common/locales/en';\n\nregisterLocaleData(en);\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MapComponent,\n    LoginComponent,\n    SignupComponent,\n    ForgetpassComponent,\n    ForgetpassverifyComponent,\n    NewpassComponent,\n    SignupotpComponent\n  ],\n  imports: [\n    HttpClientModule,\n    MDBBootstrapModule.forRoot(),\n    BrowserModule,\n    AppRoutingModule,\n    FlexLayoutModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    MatToolbarModule,\n    MatButtonModule,\n    FormsModule\n    // MaterialModule\n  ],\n  providers: [{ provide: NZ_I18N, useValue: en_US }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Component({\n  selector: 'app-forgetpass',\n  templateUrl: './forgetpass.component.html',\n  styleUrls: ['./forgetpass.component.css']\n})\nexport class ForgetpassComponent implements OnInit {\n  forgetPassForm: FormGroup;\n  submitted = false;\n  constructor(\n    private authServ: AuthenticationService,\n    public formBuilder: FormBuilder,\n    public router: Router) { }\n\n  ngOnInit(): void {\n    this.forgetPassForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email, Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')]]\n    });\n  }\n  get f() { return this.forgetPassForm.controls; }\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.forgetPassForm.invalid) {\n      return;\n    }\n    console.log(\"Sending this email: \" + this.forgetPassForm.value.email);\n    const body = {\n      email: this.forgetPassForm.value.email\n    }\n    this.authServ.verifyEmail(body).subscribe(data => {\n      console.log(data);\n      const status = data.status;\n      const email = this.forgetPassForm.value.email;\n      if (status) {\n        alert('Check your Email and change your password!!')\n\n        this.router.navigate(['forgetpassverify-component', email]);\n      }\n    });\n\n\n  }\n}\n","<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n<link href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\n<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n\n\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-5 col-md-5 left\">\n            <div>\n\n                <img class=\"left-img\" src=\"assets/icons/asasa.gif\" />\n            </div>\n        </div>\n\n        <div class=\"col-1 v2\">\n            <div class=\"vl\"></div>\n            Forget password\n            <div class=\"vl\"></div>\n        </div>\n\n        <div class=\"col-sm-6 col-md-6 right\">\n            <h2>Welcome to my asasa</h2>\n            <form class=\"form-register\" [formGroup]=\"forgetPassForm\" (ngSubmit)=\"onSubmit()\">\n                <div class=\"form-group\" class='input-container'>\n                    <div class=\"input-group\">\n                        <i class=\"fa fa-user icon\"></i>\n                        <input class=\"form-control\" class=\"input-field\"\n                            [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" id=\"inputEmail\" type=\"text\"\n                            name=\"email\" formControlName=\"email\" placeholder=\"Email address\" required=\"\" autofocus=\"\"\n                            class=\"form-control rounded-pill border-0 shadow-sm px-4\">\n                        <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                            <div *ngIf=\"f.email.errors.email\">Email must be a valid email address\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <!-- <div class=\"custom-control custom-checkbox mb-3\"> -->\n                <input id=\"customCheck1\" type=\"checkbox\" checked class=\"custom-control-input\">\n                <div class=\"form-group\">\n                    <button type=\"submit\" class=\"btn btn-primary rounded-pill\">Get\n                        Code</button>\n                </div>\n                <button class=\"btn btn-primary rounded-pill\" routerLink=\"/login-component\">Back</button>\n                <!-- </div> -->\n\n            </form>\n        </div>\n\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Component({\n  selector: 'app-forgetpassverify',\n  templateUrl: './forgetpassverify.component.html',\n  styleUrls: ['./forgetpassverify.component.css']\n})\nexport class ForgetpassverifyComponent implements OnInit {\n\n  submitted = false;\n  email: string;\n  forgetpassForm: FormGroup;\n  constructor(\n    private authServ: AuthenticationService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(param => {\n      this.email = param.email;\n      // console.log(this.email);\n    });\n    this.initialize();\n  }\n  initialize() {\n    this.forgetpassForm = this.formBuilder.group({\n      code: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(6), Validators.pattern('^[0-9]+$')]]\n    });\n  }\n  get f() { return this.forgetpassForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.forgetpassForm.invalid) {\n      return;\n    }\n    const user = {\n      email: this.email,\n      otpcode: this.forgetpassForm.value.code\n    };\n\n    // this.authServ.verifyOTPEmail(user).subscribe(data => {\n    //   console.log(data);\n    // });\n    this.authServ.verifyOTPCode(user).subscribe(data => {\n      console.log(data);\n      const status = data.status;\n      const msg = data.msg;\n      if (status) {\n\n        alert('\\nMessage: ' + msg + '\\n\\n Status: ' + status)\n        this.router.navigate(['newpass-component',this.email]);\n      } else {\n        alert(msg);\n      }\n    });\n  }\n\n}\n","<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n<link href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\n<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n\n\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-5 col-md-5 left\">\n            <div>\n\n                <img class=\"left-img\" src=\"assets/icons/asasa.gif\" />\n            </div>\n        </div>\n\n        <div class=\"col-1 v2\">\n            <div class=\"vl\"></div>\n            Verification\n            <div class=\"vl\"></div>\n        </div>\n\n        <div class=\"col-sm-6 col-md-6 right\">\n            <h2>Welcome to my asasa</h2>\n\n            <form class=\"form-register\" [formGroup]=\"forgetpassForm\" (ngSubmit)=\"onSubmit()\">\n\t\t\t\t<div class=\"form-group\">\n                <div class=\"input-group\">\n                    <i class=\"fa fa-user icon\"></i>\n                    <input type=\"text\" class=\"form-control inputs\" formControlName=\"code\" name=\"code\" id=\"code\"  \n                        placeholder=\"Enter 6-digit verify code\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.code.errors }\">\n                    <div *ngIf=\"submitted && f.code.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.code.errors.required\">Code is required</div>\n                        <div *ngIf=\"f.code.errors.minlength\">Code must be at least 6 characters</div>\n                        <div *ngIf=\"f.code.errors.maxlength\">Code should not be greater than 6 characters</div>\n                        <div *ngIf=\"f.code.errors.pattern\">Code must be a valid number sequence</div>\n                    </div>\n                </div>\n                </div>\n                <!-- <input id=\"customCheck1\" type=\"checkbox\" checked class=\"custom-control-input\"> -->\n                <div class=\"form-group\">\n\t\t\t\t\t<button type=\"submit\" class='btn'\n\t\t\t\t\t\tclass=\"btn btn-primary rounded-pill\">Verify</button>\n\t\t\t\t</div>\n                <button class=\"btn btn-primary rounded-pill\" routerLink=\"/forgetpass-component\">back</button>\n                <!-- <div class=\"form-group\">\n                    <button class=\"btn btn-primary\" routerLink=\"/newpass-component\">Verify</button>\n                </div>\n                <button class=\"btn1 btn-primary\" routerLink=\"/forgetpass-component\">back</button> -->\n\n                <!-- </div> -->\n            </form>\n        </div>\n    </div>\n\n</div>","\n// import {MatDialog, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from \"../services/authentication.service\";\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup; // Instance of Form group that will get form data from user end (i.e; login.html)\n  // registerForm: FormGroup;\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n  constructor(\n    public formBuilder: FormBuilder, // Creating an instance of Formbuilder\n    public authService: AuthenticationService, // Instance of Authentication services created in front end\n    public router: Router) {\n  }\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email, Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n  // get email() {\n  //   return this.loginForm.get('email')\n  // }\n  loginUser() {\n    this.submitted = true;\n    if (this.loginForm.invalid) {\n      return;\n    }\n    // console.log('user login data: ',this.loginForm.value);\n    this.authService.login(this.loginForm.value).subscribe(data => {\n\n      console.log(data);\n      const status = data.status;\n      const msg: string = data.msg;\n      console.log(\"Status: \" + status);\n      // console.log(\"Message: \" + msg);\n      if (status) {\n\n        alert('SUCCESS!! :-)')\n      } else {\n        alert('Invalid email or password!');\n      }\n    });\n  }\n  // getting input labels values from user end (login.html)\n  get f() { return this.loginForm.controls; }\n}","<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js\"></script>\n\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n<link href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\n<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n\n\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-5 col-md-5 left\">\n            <div>\n\n                <img class=\"left-img\" src=\"assets/icons/asasa.gif\" />\n            </div>\n        </div>\n\n        <div class=\"col-1 v2\">\n            <div class=\"vl\"></div>\n            Log - in\n            <div class=\"vl\"></div>\n        </div>\n\n        <div class=\"col-sm-6 col-md-6 right\">\n            <h2>Welcome to my asasa</h2>\n            <form class=\"form-register\" [formGroup]=\"loginForm\" (ngSubmit)=\"loginUser()\">\n\n                <div class=\"form-group\" class='input-container'>\n                    <div class=\"input-group\">\n                        <i class=\"fa fa-user icon\"></i>\n                        <input class=\"form-control\" class=\"input-field\"\n                            [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" id=\"inputEmail\" type=\"email\"\n                            name=\"email\" formControlName=\"email\" placeholder=\"Email address\" required=\"\" autofocus=\"\"\n                            class=\"form-control rounded-pill border-0 shadow-sm px-4\">\n                        <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                            <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <div class=\"input-group\">\n                        <i class=\"fa fa-lock icon\"></i>\n                        <input class=\"input-field\" id=\"password\" type=\"password\" formControlName=\"password\"\n                            placeholder=\"Password\" required=\"\"\n                            class=\"form-control rounded-pill border-0 shadow-sm px-4 text-primary\"\n                            [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\">\n                        <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                            <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6\n                                characters\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <br>\n                    <button type=\"submit\" class=\"btn btn-info rounded-pill\" >\n                    <!-- [disabled]=\"!loginForm.valid\"> -->\n                    Login</button>\n                </div>\n                <div class=\"custom-control custom-checkbox mb-3\">\n                    <input id=\"customCheck1\" type=\"checkbox\" checked class=\"custom-control-input\">\n                    <!-- <label for=\"customCheck1\" class=\"custom-control-label\">Remember password</label> -->\n                    <a routerLink=\"/forgetpass-component\"> <b>Forget Password</b></a>\n                    <br>\n                    Not Registered?\n                    <a routerLink=\"/signup-component\"> <b>Sign up!</b></a>\n                </div>\n            </form>\n\n        </div>\n    </div>\n\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport * as mapboxgl from 'mapbox-gl';\nimport { MapserviceService } from \"../services/mapservice.service\";\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.css']\n})\nexport class MapComponent implements OnInit {\n  opacity = 1;\n  map: mapboxgl.Map;\n  style = 'mapbox://styles/mapbox/streets-v11';\n  lat = 33.628463;\n  lng = 73.087581;\n geojson = {\n    type: 'FeatureCollection',\n    features: [\n      {\n        type: 'Feature',\n        properties: {\n          message: 'Foo',\n          iconSize: [24, 24],\n        },\n        geometry: {\n          type: 'Point',\n          coordinates: { lat: 62.324462890625, lng: 33.024695711685304 },\n        },\n      },\n      {\n        type: 'Feature',\n        properties: {\n          message: 'Bar',\n          iconSize: [24, 24],\n        },\n        geometry: {\n          type: 'Point',\n          coordinates: { lat: 73.2158203125, lng: 33.97189158092897 },\n        },\n      },\n      {\n        type: 'Feature',\n        properties: {\n          message: 'Baz',\n          iconSize: [24, 24],\n        },\n        geometry: {\n          type: 'Point',\n          coordinates: { lat: 51.29223632812499, lng: 34.28151823530889 },\n        },\n      },\n    ],\n  };\n\n  mapArray = [\n    {\n      lat: 72.99641,\n      lng: 33.645992,\n      tag: 'Islamabad',\n      size: [51, 22],\n    },\n    {\n      lat: 73.0169,\n      lng: 33.5651,\n      tag: 'Rawalpindi',\n      size: [51, 22],\n    },\n    {\n      lat: 71.5249,\n      lng: 34.0151,\n      tag: 'Peshawar',\n      size: [51, 22],\n    },\n    {\n      lat: 67.0011,\n      lng: 24.8607,\n      tag: 'Karachi',\n      size: [51, 22],\n    },\n  ];\n  constructor(private mapservice: MapserviceService) { }\n\n  ngOnInit() {\n    this.initializemapbox();\n\n    ///////////////// This is the data coming from url into our frontend map //////////////////////\n    \n    // this.mapservice.readData()\n    // .subscribe\n    // (data=> {\n    //     data.property.forEach(( data ) => {\n    //       // create a DOM element for the marker\n    //       const el = document.createElement('div');\n    //       el.className = 'data';\n    //       el.style.backgroundImage = 'url(/assets/asasamarker.png)';\n    //       el.innerHTML = data.demand;\n    //       el.style.fontStyle = 'bold';\n    //       el.style.textAlign = 'center';\n    //       el.style.color = 'white';\n    //       el.style.width = '51px';\n    //       el.style.height = '22px';\n    //       el.style.fontSize = '10px';\n    //       el.style.fontWeight = '700';\n    //       el.style.fontFamily = 'Jersey M54';\n    //       // el.style.fontSizeAdjust = '5px';\n    //       new mapboxgl.Marker(el)\n    //         .setLngLat([\n    //           data.location_data.marker_data.mlongitude,\n    //           data.location_data.marker_data.mlatitide\n    //         ])\n    //         //.setPopup(new mapboxgl.Popup().setHTML(data.tag))\n    //         .addTo(this.map);\n    //     });\n    \n    // })\n\n  }\n  initializemapbox() {\n    this.map = new mapboxgl.Map({\n      accessToken:\n        'pk.eyJ1IjoibmFiZWVsc2FsZWVtIiwiYSI6ImNrY3p4MWhrZzBiNWwyd3FtOGx3aTZsbjEifQ.z6RLknl-YnJe2eKqMjPElg',\n      container: 'map',\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [73.024955 , 33.650753], // starting position [lng, lat]\n      zoom: 10, // starting zoom\n    });\n    this.mapArray.forEach((marker) => {\n      // create a DOM element for the marker\n      const el = document.createElement('div');\n      el.className = 'marker';\n      el.style.backgroundImage = 'url(/assets/icons/asasamarker.png)';\n      el.innerHTML = marker.tag;\n      el.style.fontStyle = 'bold';\n      el.style.textAlign = 'center';\n      el.style.color = 'white';\n      el.style.width = marker.size[0] + 'px';\n      el.style.height = marker.size[1] + 'px';\n      el.style.fontSize = '10px';\n      el.style.fontWeight = '700';\n      el.style.fontFamily = 'quartzo';\n      new mapboxgl.Marker(el)\n        .setLngLat([\n          marker.lat,\n          marker.lng,\n        ])\n        .setPopup(new mapboxgl.Popup().setHTML(marker.tag))\n        .addTo(this.map);\n    });\n    // this.map.addSource\n    this.mapboxOverlay();\n    this.map.addControl(new mapboxgl.FullscreenControl());\n    this.map.addControl(new mapboxgl.NavigationControl());\n    this.map.addControl(\n      new mapboxgl.GeolocateControl({\n        positionOptions: {\n          enableHighAccuracy: true,\n        },\n        trackUserLocation: true,\n      })\n    );\n  }\n\n  mapboxOverlay() {\n    const slider = document.getElementById('slider');\n    const sliderValue = document.getElementById('slider-value');\n    this.map.on('load', () => {\n      // tslint:disable-next-line: no-unused-expression\n      this.map.addSource('myImageSource', {\n        type: 'image',\n        url: 'assets/i-10-islamabad.jpg',\n        coordinates: [\n          [73.024955 , 33.650753], // cda kashmir highway\n          [73.041134, 33.659291 ], // rizvi road kashmir highway:\n          [73.051520, 33.645466], // Service Rd West I-10 Islamabad,\n          [73.035384, 33.636927], // I-10/3 I 10/3 I-10, Islamabad, Islamabad\n        ],\n      });\n      this.map.addLayer({\n        id: 'myImageSource',\n        source: 'myImageSource',\n        type: 'raster',\n        paint: {\n          'raster-opacity': this.opacity,\n        },\n      });\n\n      slider.addEventListener('input', (e) => {\n        // Adjust the layers opacity. layer here is arbitrary - this could\n        // be another layer name found in your style or a custom layer\n        // added on the fly using `addSource`.\n        // e.target;\n        const input = (document.getElementById('slider') as HTMLInputElement)\n          .value;\n        this.map.setPaintProperty(\n          'myImageSource',\n          'raster-opacity',\n          parseInt('' + input + '', 10) / 100\n        );\n        // Value indicator\n        sliderValue.textContent = '' + input + '' + '%';\n      });\n    });\n    \n    this.map.on('load', () => {\n      // tslint:disable-next-line: no-unused-expression\n      this.map.addSource('f-7', {\n        type: 'image',\n        url: 'assets/f-7.png',\n        coordinates: [\n          [73.042912, 33.722351 ],\n          [73.061492 , 33.731482],\n          [73.070957, 33.719287], \n          [73.052850, 33.709633], \n        ],\n      });\n      this.map.addLayer({\n        id: 'f-7',\n        source: 'f-7',\n        type: 'raster',\n        paint: {\n          'raster-opacity': this.opacity,\n        },\n      });\n\n      slider.addEventListener('input', (e) => {\n        const input = (document.getElementById('slider') as HTMLInputElement)\n          .value;\n        this.map.setPaintProperty(\n          'f-7',\n          'raster-opacity',\n          parseInt('' + input + '', 10) / 100\n        );\n        // Value indicator\n        sliderValue.textContent = '' + input + '' + '%';\n      });\n    });\n    this.map.on('load', () => {\n      // tslint:disable-next-line: no-unused-expression\n      this.map.addSource('phase-2', {\n        type: 'image',\n        url: 'assets/phase 2.png',\n        coordinates: [\n          [73.114200, 33.565860], // Phase 4 Gulrez Housing Scheme\n          [73.126250, 33.565800], // Police Foundation, Rawalpindi \n          [73.125652, 33.552467], // Bahria Town Phase V Phase 5 \n          [73.112955, 33.552230] // Bahria Town Phase III Phase 3  \n        ],\n      });\n      this.map.addLayer({\n        id: 'phase-2',\n        source: 'phase-2',\n        type: 'raster',\n        paint: {\n          'raster-opacity': this.opacity,\n        },\n      });\n\n      slider.addEventListener('input', (e) => {\n        const input = (document.getElementById('slider') as HTMLInputElement)\n          .value;\n        this.map.setPaintProperty(\n          'phase-2',\n          'raster-opacity',\n          parseInt('' + input + '', 10) / 100\n        );\n        // Value indicator\n        sliderValue.textContent = '' + input + '' + '%';\n      });\n    });\n \n    // this.map.on('load', () => {\n    //   // tslint:disable-next-line: no-unused-expression\n    //   this.map.addSource('phase-3', {\n    //     type: 'image',\n    //     url: 'assets/phase 3.png',\n    //     coordinates: [\n    //       [73.104769, 33.563229], // Phase 2 Gulrez Housing Scheme\n    //       [73.127969, 33.560081], // Phase 2 Bahria Town, Rawalpindi \n    //       [73.121127, 33.544900], // Soan River\n    //       [73.093428, 33.550266] // Golden Jubilee Residential CHS\n    //     ],\n    //   });\n    //   this.map.addLayer({\n    //     id: 'phase-3',\n    //     source: 'phase-3',\n    //     type: 'raster',\n    //     paint: {\n    //       'raster-opacity': this.opacity,\n    //     },\n    //   });\n\n    //   slider.addEventListener('input', (e) => {\n    //     const input = (document.getElementById('slider') as HTMLInputElement)\n    //       .value;\n    //     this.map.setPaintProperty(\n    //       'phase-3',\n    //       'raster-opacity',\n    //       parseInt('' + input + '', 10) / 100\n    //     );\n    //     // Value indicator\n    //     sliderValue.textContent = '' + input + '' + '%';\n    //   });\n    // });\n    this.map.on('load', () => {\n      // tslint:disable-next-line: no-unused-expression\n      this.map.addSource('e-16', {\n        type: 'image',\n        url: 'assets/maps_images/E-16-crop.png',\n        coordinates: [\n          [ 72.877392, 33.652982],\n          [ 72.898120, 33.652946],\n          [ 72.898034, 33.637977],\n          [ 72.877349, 33.638049]\n        ],\n      });\n      this.map.addLayer({\n        id: 'e-16',\n        source: 'e-16',\n        type: 'raster',\n        paint: {\n          'raster-opacity': this.opacity,\n        },\n      });\n\n      slider.addEventListener('input', (e) => {\n        const input = (document.getElementById('slider') as HTMLInputElement)\n          .value;\n        this.map.setPaintProperty(\n          'e-16',\n          'raster-opacity',\n          parseInt('' + input + '', 10) / 100\n        );\n        // Value indicator\n        sliderValue.textContent = '' + input + '' + '%';\n      });\n    });\n    this.map.on('load', () => {\n      // tslint:disable-next-line: no-unused-expression\n      this.map.addSource('e-18', {\n        type: 'image',\n        url: 'assets/maps_images/E-18-crop.png',\n        coordinates: [\n          [72.834467, 33.635597],\n          [72.858070, 33.647030],\n          [72.877725, 33.620232],\n          [72.854551, 33.609438]\n        ],\n      });\n      this.map.addLayer({\n        id: 'e-18',\n        source: 'e-18',\n        type: 'raster',\n        paint: {\n          'raster-opacity': this.opacity,\n        },\n      });\n\n      slider.addEventListener('input', (e) => {\n        const input = (document.getElementById('slider') as HTMLInputElement)\n          .value;\n        this.map.setPaintProperty(\n          'e-18',\n          'raster-opacity',\n          parseInt('' + input + '', 10) / 100\n        );\n        // Value indicator\n        sliderValue.textContent = '' + input + '' + '%';\n      });\n    });\n\n    this.map.on('load', () => {\n      // tslint:disable-next-line: no-unused-expression\n      this.map.addSource('enclave', {\n        type: 'image',\n        url: 'assets/enclave_map-crop.png',\n        coordinates: [\n          [33.701923, 73.200201],\n          [33.703352, 73.264891],\n          [33.674785, 73.264236],\n          [33.674999, 73.196210]\n        ],\n      });\n      this.map.addLayer({\n        id: 'enclave',\n        source: 'enclave',\n        type: 'raster',\n        paint: {\n          'raster-opacity': this.opacity,\n        },\n      });\n\n      slider.addEventListener('input', (e) => {\n        const input = (document.getElementById('slider') as HTMLInputElement)\n          .value;\n        this.map.setPaintProperty(\n          'enclave',\n          'raster-opacity',\n          parseInt('' + input + '', 10) / 100\n        );\n        // Value indicator\n        sliderValue.textContent = '' + input + '' + '%';\n      });\n    });\n \n  }\n}","<div id=\"map\" class=\"match-parent\">\r\n<div class=\"map-overlay top\">\r\n    <div class=\"map-overlay-inner\">\r\n      <label>Layer opacity: <span id=\"slider-value\">100%</span></label>\r\n      <input id=\"slider\" type=\"range\" min=\"0\" max=\"100\" step=\"0\" value=\"100\" />\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Component({\n  selector: 'app-newpass',\n  templateUrl: './newpass.component.html',\n  styleUrls: ['./newpass.component.css']\n})\nexport class NewpassComponent implements OnInit {\n\n  submitted = false;\n  email: string;\n  newpassForm: FormGroup;\n  constructor(\n    private authServ: AuthenticationService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(param => {\n      this.email = param.email;\n      // console.log(this.email);\n    });\n    this.initialize();\n  }\n  initialize() {\n    this.newpassForm = this.formBuilder.group({\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n  get f() { return this.newpassForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.newpassForm.invalid) {\n      return;\n    }\n    const user = {\n      email: this.email,\n      newpassword: this.newpassForm.value.password\n    };\n\n    // this.authServ.verifyOTPEmail(user).subscribe(data => {\n    //   console.log(data);\n    // });\n    this.authServ.newpassword(user).subscribe(data => {\n      console.log(\"server response: \");\n      console.log(data);\n      const status = data.status;\n      const msg = data.msg;\n      // console.log(this.newpassForm.value.password);\n      // const email = this.newpassForm.value.email;\n      // if (status) {\n        // console.log(this.newpassForm.value.password);\n        alert('\\nMessage: ' + msg + '\\n\\n Status: ' + status);\n        // this.router.navigate(['newpass-component',this.email]);\n      // } else {\n        // alert(msg);\n      // }\n    });\n  }\n}\n","<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n<link href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\n<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n\n\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-5 col-md-5 left\">\n            <div>\n\n                <img class=\"left-img\" src=\"assets/icons/asasa.gif\" />\n            </div>\n        </div>\n\n        <div class=\"col-1 v2\">\n            <div class=\"vl\"></div>\n            Password change\n            <div class=\"vl\"></div>\n        </div>\n\n        <div class=\"col-sm-6 col-md-6 right\">\n            <h2>Welcome to my asasa</h2>\n            <form class=\"form-register\" [formGroup]=\"newpassForm\" (ngSubmit)=\"onSubmit()\">\n                <div class=\"form-group\"  class='input-container'>\n                    <div class=\"input-group\">\n                        <i class=\"fa fa-lock icon\"></i>\n                        <input class=\"form-control\" class=\"input-field\" id=\"password\" type=\"password\" \n                        placeholder=\"Enter new password\"  formControlName=\"password\"\n                            required=\"\" autofocus=\"\" class=\"form-control rounded-pill border-0 shadow-sm px-4\"\n                            [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\">\n                        <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                            <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <div class=\"input-group\">\n                        <i class=\"fa fa-lock icon\"></i>\n                        <input class=\"input-field\" id=\"inputPass\" type=\"password\" placeholder=\"Confirm new password\"\n                            required=\"\" autofocus=\"\" class=\"form-control rounded-pill border-0 shadow-sm px-4\">\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <button type=\"submit\" class=\"btn btn-primary rounded-pill\">Change</button>\n                </div>\n                <button class=\"btn btn-primary rounded-pill\" routerLink=\"/login-component\">Login</button>\n\n                <!-- </div> -->\n            </form>\n        </div>\n\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { User } from '../login/User';\nimport { Router } from '@angular/router';\nimport { throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  // API_URL: string = 'http://localhost:4000';\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\n  private readonly url = 'https://shaisecommercestore.herokuapp.com/api'; // environment.url;\n\n\n\n  // currentUser = {};\n\n  constructor(private httpClient: HttpClient, public router: Router) {\n    // this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\n    // this.currentUser = this.currentUserSubject.asObservable();\n  }\n  public getAll(): Observable<any> {\n    return this.httpClient.get<User[]>(`${this.url}/user`);\n  }\n  // Function to Register the new user\n  register(user: User): Observable<any> {\n\n    return this.httpClient.post(`${this.url}/user/signup`, user).pipe(\n      catchError(this.handleError)\n    )\n  }\n  /////////////////////////////////////\n  /* API Call to verify otp code */\n  //Verifying the email address while signing the user up\n  verifyOTPEmail(user: any): Observable<any> {\n\n    return this.httpClient.post(`${this.url}/user/verifyemail`, user).pipe(\n      catchError(this.handleError)\n    )\n  }\n  //Verifying the user using otp code to his gmail to change his/her password\n  verifyOTPCode(user: any): Observable<any> {\n\n    return this.httpClient.post(`${this.url}/user/password/verifyotpcode`, user).pipe(\n      catchError(this.handleError)\n    )\n  }\n  //Adding new password after forgetting the old password\n  newpassword(user: any): Observable<any> {\n\n    return this.httpClient.post(`${this.url}/user/password/newpassword`, user).pipe(\n      catchError(this.handleError)\n    )\n  }\n\n  // Function to Login the already existed user\n  login(user: User): Observable<any> {\n    // console.log('Hello', user.email);\n    return this.httpClient.post(`${this.url}/user/login`, user);\n      // .subscribe((data: any) => {\n      //   localStorage.setItem('access_token', data.token)\n      //   this.getUserProfile(data._id).subscribe((data) => {\n      //     this.currentUser = data;\n      //     this.router.navigate(['users/profile/' + data.msg._id]);\n      //   })\n      // })\n  } \n  \n  verifyEmail (body:any): Observable<any>{\n    return this.httpClient.post(`${this.url}/user/password/verifyemail`, body);\n\n  }\n  \n  \n  getAccessToken() {\n    return localStorage.getItem('access_token');\n  }\n\n  get isLoggedIn(): boolean {\n    let authToken = localStorage.getItem('access_token');\n    return (authToken !== null) ? true : false;\n  }\n  ////////// Logout Function ////////////////\n  logout() {\n    if (localStorage.removeItem('access_token') == null) {\n      this.router.navigate(['users/login']);\n    }\n  }\n  ///////////////////////////////////////////\n\n  ///////// Get Profile Function ////////////\n  getUserProfile(id): Observable<any> {\n    return this.httpClient.get(`${this.url}/user/profile/${id}`, { headers: this.headers }).pipe(\n      map((res: Response) => {\n        return res || {}\n      }),\n      catchError(this.handleError)\n    )\n  }\n  ///////////////////////////////////////////\n\n  ///////// Error Handling /////////////////\n  handleError(error: HttpErrorResponse) {\n    let msg = '';\n    if (error.error instanceof ErrorEvent) {\n      // client-side error\n      msg = error.error.message;\n    } else {\n      // server-side error\n      msg = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    return throwError(msg);\n  }\n}\n","// import { Observable, throwError } from 'rxjs';\n// import { catchError, retry } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,HttpEvent, HttpErrorResponse, HttpEventType  } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n// import { Map } from './map';\n@Injectable({\n  providedIn: 'root'\n})\nexport class MapserviceService {\n  constructor(private http: HttpClient) { \n}\n\nprivate  apiurl = \"https://asasa.com/api/property\";\nreadData(): Observable<any> {\n  return this.http.get(this.apiurl);\n}\n\n}","\nimport { RegisterResponse } from './RegisterResponse';\nimport { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from \"../services/authentication.service\";\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  submitted = false;\n  registerForm: FormGroup;\n\n  constructor(\n    public formBuilder: FormBuilder,\n    public authService: AuthenticationService,\n    public router: Router) {\n  }\n\n  // registerresponse: RegisterResponse;\n  ngOnInit(): void {\n    this.initialize();\n  }\n\n  initialize() {\n    this.registerForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email, Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n  // check() {\n  //   if (document.getElementById('password') ==\n  //     document.getElementById('confirm')) {\n  //     document.getElementById('message').style.color = 'green';\n  //     document.getElementById('message').innerHTML = 'matching';\n  //     console.log('check function 01');\n  //   } else {\n  //     document.getElementById('message').style.color = 'red';\n  //     document.getElementById('message').innerHTML = 'password not matching';\n  //     console.log('check function 02');\n  //   }\n  // }\n  registerUser() {\n    // this.check();\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n      return;\n    }\n\n    alert('SUCCESS!! :-)\\n' + JSON.stringify(this.registerForm.value))\n\n    // this.authService.getAll().subscribe((data) => {\n    //   console.log(data);\n    // })\n    console.log(this.registerForm.value);\n    this.authService.register(this.registerForm.value).subscribe((data) => {\n      console.log(data);\n      // this.registerresponse = data;\n      const email = this.registerForm.value.email;\n      const msg = data.msg;\n      const status = data.status;\n      // console.log('Status: ' + status);\n      if (status) {\n        this.registerForm.reset();\n\n        alert(msg);\n        this.router.navigate(['signupotp-component', email]);\n      }\n      else {\n        alert(msg);\n      }\n    })\n  }\n  // convenience getter for easy access to form fields\n  get f() { return this.registerForm.controls; }\n\n  // onSubmit() {\n  //   this.submitted = true;\n\n  //   // stop here if form is invalid\n  //   if (this.registerForm.invalid) {\n  //     return;\n  //   }\n\n  //   alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(this.registerForm.value))\n  // }\n}\n","<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n<link href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\n<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n\n\n\n\n<div class=\"container\">\n\t<div class=\"row\">\n\t\t<div class=\"col-sm-5 col-md-5 left\">\n\t\t\t<div>\n\n\t\t\t\t<img class=\"left-img\" src=\"assets/icons/asasa.gif\" />\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div class=\"col-1 v2\">\n\t\t\t<div class=\"vl\"></div>\n\t\t\tRegister\n\t\t\t<div class=\"vl\"></div>\n\t\t</div>\n\n\t\t<div class=\"col-sm-6 col-md-6 right\">\n\t\t\t<h2>Welcome to my asasa</h2>\n\t\t\t<form class=\"form-register\" [formGroup]=\"registerForm\" (ngSubmit)=\"registerUser()\">\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<div class=\"input-group\">\n\t\t\t\t\t\t<i class=\"fa fa-user fa\" aria-hidden=\"true\"></i>\n\t\t\t\t\t\t<input type=\"text\" class=\"form-control inputs\" formControlName=\"username\" id=\"username\"\n\t\t\t\t\t\t\tplaceholder=\"Username\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\n\t\t\t\t\t\t<div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n\t\t\t\t\t\t\t<div *ngIf=\"f.username.errors.required\">Name is required</div>\n\t\t\t\t\t\t\t<!-- <div *ngIf=\"f.username.errors.username\">Name must be at least 6 characters</div> -->\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<div class=\"input-group\">\n\t\t\t\t\t\t<i class=\"fa fa-envelope\" aria-hidden=\"true\"></i>\n\t\t\t\t\t\t<input type=\"text\" class=\"form-control emailInput\" formControlName=\"email\" id=\"email\"\n\t\t\t\t\t\t\tplaceholder=\"Enter Email\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\n\t\t\t\t\t\t<div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n\t\t\t\t\t\t\t<div *ngIf=\"f.email.errors.required\">Email is required</div>\n\t\t\t\t\t\t\t<div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<div class=\"input-group\">\n\t\t\t\t\t\t<i class=\"fa fa-lock fa-lg\" aria-hidden=\"true\"></i>\n\t\t\t\t\t\t<input type=\"password\" #password class=\"form-control inputs\" formControlName=\"password\"\n\t\t\t\t\t\t\tname=\"password\" id=\"password\" placeholder=\"Password\"\n\t\t\t\t\t\t\t[ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n\t\t\t\t\t\t<div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n\t\t\t\t\t\t\t<div *ngIf=\"f.password.errors.required\">Password is required</div>\n\t\t\t\t\t\t\t<div *ngIf=\"f.password.errors.minlength\">Password must be at least 6\n\t\t\t\t\t\t\t\tcharacters</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<div class=\"input-group\">\n\t\t\t\t\t\t<i class=\"fa fa-lock fa-lg\" aria-hidden=\"true\"></i>\n\t\t\t\t\t\t<input type=\"password\" #confirm class=\"form-control inputs\" name=\"confirm\" id=\"confirm\"\n\t\t\t\t\t\t\tplaceholder=\"Confirm Password\" />\n\t\t\t\t\t\t<!-- <div *ngIf=\"password.value!=confirm.value\"> Password & Confirm Password does not match.</div> -->\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id='message'></div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<button type=\"submit\" class='btn' class=\"btn btn-primary rounded-pill\">Register</button>\n\t\t\t\t</div>\n\t\t\t\t<br>\n\t\t\t\tAlready Registered!\n\t\t\t\t<a routerLink=\"/login-component\"> <b>Login!</b></a>\n\t\t\t\t<!-- <div class=\"form-group\">\n\t\t\t\t\t<input type=\"password\" [(ngModel)]=\"userdata.password\" name=\"password\" placeholder=\"Password\" class=\"form-control\" required #password=\"ngModel\" pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\" />\n\t\t\t\t\t<div *ngIf=\"password.invalid && (myform.submitted || password.touched)\" class=\"alert alert-danger\">\n\t\t\t\t\t  <div *ngIf=\"password.errors.required\"> Password is required. </div>\n\t\t\t\t\t  <div *ngIf=\"password.errors.pattern\"> Must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters.</div>\n\t\t\t\t\t</div>\n\t\t\t\t   </div>\n\t\t\t\t   \n\t\t\t\t   <div class=\"form-group\">\n\t\t\t\t\t<input type=\"password\" [(ngModel)]=\"userdata.confirmpassword\" name=\"confirmpassword\" placeholder=\"Confirm Password\" class=\"form-control\" required #confirmpassword=\"ngModel\" pattern=\"{{ password.value }}\" />\n\t\t\t\t\t<div *ngIf=\" confirmpassword.invalid && (myform.submitted || confirmpassword.touched)\" class=\"alert alert-danger\">\n\t\t\t\t\t  <div *ngIf=\"confirmpassword.errors.required\"> Confirm password is required. </div>\n\t\t\t\t\t  <div *ngIf=\"confirmpassword.errors.pattern\"> Password & Confirm Password does not match.</div>\n\t\t\t\t\t</div>\n\t\t\t\t   </div> -->\n\t\t\t\t<!-- Form Ended -->\n\t\t\t</form>\n\n\t\t</div>\n\t</div>\n\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Component({\n  selector: 'app-signupotp',\n  templateUrl: './signupotp.component.html',\n  styleUrls: ['./signupotp.component.css']\n})\nexport class SignupotpComponent implements OnInit {\n\n  submitted = false;\n  email: string;\n  signupotpForm: FormGroup;\n  constructor(\n    private authServ: AuthenticationService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(param => {\n      this.email = param.email;\n      // console.log(this.email);\n    });\n    this.initialize();\n  }\n  initialize() {\n    this.signupotpForm = this.formBuilder.group({\n      code: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(6), Validators.pattern('^[0-9]+$')]]\n    });\n  }\n  get f() { return this.signupotpForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.signupotpForm.invalid) {\n      return;\n    }\n    const user = {\n      email: this.email,\n      otpcode: this.signupotpForm.value.code\n    };\n\n    this.authServ.verifyOTPEmail(user).subscribe(data => {\n      console.log(data);\n      const status = data.status;\n      const msg = data.msg;\n      if (status) {\n\n        alert('\\nMessage: ' + msg + '\\n\\n Status: ' + status)\n        this.router.navigate(['']);\n      } else {\n        alert(msg);\n      }\n    });\n\n  }\n}\n","<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n<link href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\n<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n\n\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-5 col-md-5 left\">\n            <div>\n\n                <img class=\"left-img\" src=\"assets/icons/asasa.gif\" />\n            </div>\n        </div>\n\n        <div class=\"col-1 v2\">\n            <div class=\"vl\"></div>\n            Verification\n            <div class=\"vl\"></div>\n        </div>\n\n        <div class=\"col-sm-6 col-md-6 right\">\n            <h2>Welcome to my asasa</h2>\n\n            <form class=\"form-register\" [formGroup]=\"signupotpForm\" (ngSubmit)=\"onSubmit()\">\n\t\t\t\t<div class=\"form-group\">\n                <div class=\"input-group\">\n                    <i class=\"fa fa-user icon\"></i>\n                    <input type=\"text\" class=\"form-control inputs\" formControlName=\"code\" name=\"code\" id=\"code\"  \n                        placeholder=\"Enter 6-digit verify code\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.code.errors }\">\n                    <div *ngIf=\"submitted && f.code.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.code.errors.required\">Code is required</div>\n                        <div *ngIf=\"f.code.errors.minlength\">Code must be at least 6 characters</div>\n                        <div *ngIf=\"f.code.errors.maxlength\">Code should not be greater than 6 characters</div>\n                        <div *ngIf=\"f.code.errors.pattern\">Code must be a valid number sequence</div>\n                    </div>\n                </div>\n                </div>\n                <!-- <input id=\"customCheck1\" type=\"checkbox\" checked class=\"custom-control-input\"> -->\n                <div class=\"form-group\">\n\t\t\t\t\t<button type=\"submit\" class='btn'\n\t\t\t\t\t\tclass=\"btn btn-primary rounded-pill\">Verify</button>\n\t\t\t\t</div>\n                <button class=\"btn btn-primary rounded-pill\" routerLink=\"/register-component\">back</button>\n                <!-- <div class=\"form-group\">\n                    <button class=\"btn btn-primary\" routerLink=\"/newpass-component\">Verify</button>\n                </div>\n                <button class=\"btn1 btn-primary\" routerLink=\"/forgetpass-component\">back</button> -->\n\n                <!-- </div> -->\n            </form>\n        </div>\n    </div>\n\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  mapbox: {\n    accessToken: 'pk.eyJ1IjoiYmFiYXJic2NzMzI2MSIsImEiOiJja2N2dHR2MGUwN21iMnhydXlvcXA2MTlmIn0.gympgF_-zALE5J5MyZH3fQ'\n  },\n  url: 'https://shaisecommercestore.herokuapp.com/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}