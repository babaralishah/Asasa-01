{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/Pipes/table-filter.pipe.ts","./src/app/Pipes/table-filter02.pipe.ts","./src/app/Pipes/table-filter03.pipe.ts","./src/app/Pipes/table-filter04.pipe.ts","./src/app/Pipes/table-filter05.pipe.ts","./src/app/Pipes/table-filter06.pipe.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/dashboard/inactive/inactive.component.ts","./src/app/dashboard/inactive/inactive.component.html","./src/app/dashboard/inventory/add-inventories/add-inventories.component.ts","./src/app/dashboard/inventory/add-inventories/add-inventories.component.html","./src/app/dashboard/inventory/inventory.component.ts","./src/app/dashboard/inventory/inventory.component.html","./src/app/dashboard/leads/add-leads/add-leads.component.ts","./src/app/dashboard/leads/add-leads/add-leads.component.html","./src/app/dashboard/leads/leads.component.ts","./src/app/dashboard/leads/leads.component.html","./src/app/dashboard/options/options.component.ts","./src/app/dashboard/options/options.component.html","./src/app/dashboard/profile/profile.component.ts","./src/app/dashboard/profile/profile.component.html","./src/app/dashboard/users/add-users/add-users.component.ts","./src/app/dashboard/users/add-users/add-users.component.html","./src/app/dashboard/users/users.component.ts","./src/app/dashboard/users/users.component.html","./src/app/forgetpass/forgetpass.component.ts","./src/app/forgetpass/forgetpass.component.html","./src/app/forgetpassverify/forgetpassverify.component.ts","./src/app/forgetpassverify/forgetpassverify.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/map/map.component.ts","./src/app/map/map.component.html","./src/app/newpass/newpass.component.ts","./src/app/newpass/newpass.component.html","./src/app/services/authentication.service.ts","./src/app/services/mapservice.service.ts","./src/app/signup/signup.component.ts","./src/app/signup/signup.component.html","./src/app/signupotp/signupotp.component.ts","./src/app/signupotp/signupotp.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Pipe, PipeTransform } from '@angular/core';\nimport { User } from '../dashboard/inventory/User';\n\n@Pipe({\n    name: 'tableFilter'\n\n})\nexport class TableFilterPipe implements PipeTransform {\n    transform(\n        // user: User[],\n        user: any,\n        search_id: string\n    ): User[] {\n\n        if (!user || !search_id) {\n            return user;\n        }\n        return user.filter(user =>\n            user.userId.toLowerCase().indexOf(search_id.toLowerCase()) !== -1);\n        // if (!user) return [];\n        // if (!search_location) return user;\n        // search_location = search_location.toLocaleLowerCase();\n        // user = [...user.filter(user => user.Location.toLocaleLowerCase().includes(search_location))];\n\n        // if (!search_area) return user;\n        // search_area = search_area.toLocaleLowerCase();\n        // user = [...user.filter(user => user.Area.toLocaleLowerCase().includes(search_area))];\n\n        // return user;\n\n    }\n\n}\n\n\n// import { Pipe, PipeTransform } from '@angular/core';\n// import { InventoryComponent } from '../dashboard/inventory/inventory.component';\n\n// @Pipe({\n//     name: 'tableFilter'\n// })\n// export class TableFilterPipe implements PipeTransform {\n\n//     transform(user: user[], location: string) {\n//         return null;\n//     }\n\n// }\n\n\n\n\n\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { User } from '../dashboard/inventory/User';\n@Pipe({\n  name: 'tableFilter02'\n})\nexport class TableFilter02Pipe implements PipeTransform {\n\n  transform(\n    // user: User[],\n    user: any,\n    search_location: string\n  ): User[] {\n\n    if (!user || !search_location) {\n      return user;\n    }\n    return user.filter(user =>\n      user.location.toLowerCase().indexOf(search_location.toLowerCase()) !== -1);\n\n  }\n\n}","import { Pipe, PipeTransform } from '@angular/core';\nimport { User } from '../dashboard/inventory/User';\n\n@Pipe({\n  name: 'tableFilter03'\n})\nexport class TableFilter03Pipe implements PipeTransform {\n\n  transform(\n    user: User[],\n    search_area: string\n  ): User[] {\n\n    if (!user || !search_area) {\n      return user;\n    }\n    return user.filter(user =>\n      user.Area.toLowerCase().indexOf(search_area.toLowerCase()) !== -1);\n\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { User } from '../dashboard/inventory/User';\n@Pipe({\n  name: 'tableFilter04'\n})\nexport class TableFilter04Pipe implements PipeTransform {\n\n  transform(\n    // user: User[],,\n    user: any,\n    search_type: string\n  ): User[] {\n\n    if (!user || !search_type) {\n      return user;\n    }\n    return user.filter(user =>\n      user.contact.toLowerCase().indexOf(search_type.toLowerCase()) !== -1);\n\n  }\n\n}","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { User } from '../dashboard/inventory/User';\n@Pipe({\n  name: 'tableFilter05'\n})\nexport class TableFilter05Pipe implements PipeTransform {\n\n  transform(\n    user: User[],\n    search_demand: string\n  ): User[] {\n\n    if (!user || !search_demand) {\n      return user;\n    }\n    return user.filter(user =>\n      user.Demand.toLowerCase().indexOf(search_demand.toLowerCase()) !== -1);\n\n  }\n\n}","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { User } from '../dashboard/inventory/User';\n@Pipe({\n  name: 'tableFilter06'\n})\nexport class TableFilter06Pipe implements PipeTransform {\n\n  transform(\n    // user: User[],,\n    user: any,\n    search_client: string\n  ): User[] {\n\n    if (!user || !search_client) {\n      return user;\n    }\n    return user.filter(user =>\n      user.fullname.toLowerCase().indexOf(search_client.toLowerCase()) !== -1);\n\n  }\n\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MapComponent } from './map/map.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { ForgetpassComponent } from './forgetpass/forgetpass.component';\nimport { ForgetpassverifyComponent } from './forgetpassverify/forgetpassverify.component';\nimport { NewpassComponent } from './newpass/newpass.component';\nimport { SignupotpComponent } from './signupotp/signupotp.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ProfileComponent } from './dashboard/profile/profile.component';\nimport { InventoryComponent } from './dashboard/inventory/inventory.component';\nimport { UsersComponent } from './dashboard/users/users.component';\nimport { LeadsComponent } from './dashboard/leads/leads.component';\nimport { InactiveComponent } from './dashboard/inactive/inactive.component';\nimport { OptionsComponent } from './dashboard/options/options.component';\nimport { AddUsersComponent } from './dashboard/users/add-users/add-users.component';\nimport { AddLeadsComponent } from './dashboard/leads/add-leads/add-leads.component';\nimport { AddInventoriesComponent } from './dashboard/inventory/add-inventories/add-inventories.component';\n\nconst routes: Routes = [\n  { path: 'map', component: MapComponent },\n  { path: 'login-component', component: LoginComponent },\n  { path: 'signup-component', component: SignupComponent },\n  { path: 'forgetpass-component', component: ForgetpassComponent },\n  { path: 'forgetpassverify-component/:email', component: ForgetpassverifyComponent },\n  { path: 'newpass-component/:email', component: NewpassComponent },\n  { path: 'signupotp-component/:email', component: SignupotpComponent },\n  { path: 'dashboard', component: DashboardComponent },\n  { path: 'profile/:email', component: ProfileComponent },\n  { path: 'profile', component: ProfileComponent },\n  { path: 'inventory', component: InventoryComponent },\n  { path: 'users', component: UsersComponent },\n  { path: 'leads', component: LeadsComponent },\n  { path: 'inactive', component: InactiveComponent },\n  { path: 'options', component: OptionsComponent },\n  { path: 'add-users', component: AddUsersComponent },\n  { path: 'add-leads', component: AddLeadsComponent },\n  { path: 'add-inventories', component: AddInventoriesComponent }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","// import { MDBBootstrapModule } from 'angular-bootstrap-md';\nimport { Component } from '@angular/core';\nimport { AuthenticationService } from \"./services/authentication.service\";\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  isShown: boolean = false;\n  title = 'My Asasa Real Estate';\n  loginForm: FormGroup; // Instance of Form group that will get form data from user end (i.e; login.html)\n  // registerForm: FormGroup;\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n  constructor(\n    public formBuilder: FormBuilder, // Creating an instance of Formbuilder\n    public authService: AuthenticationService, // Instance of Authentication services created in front end\n    public router: Router) {\n  }\n\n  ngOnInit(): void {\n\n    this.initialize();\n    // this.router.navigate(['profile']);\n\n  }\n\n  initialize() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email, Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n\n  }\n  get email() {\n    return this.loginForm.get('email')\n  }\n  loginUser() {\n    this.submitted = true;\n    if (this.loginForm.invalid) {\n      return;\n    }\n    // console.log('user login data: ',this.loginForm.value);\n    this.authService.login(this.loginForm.value).subscribe(data => {\n\n      console.log(data);\n      const status = data.status;\n      const msg: string = data.msg;\n      console.log(\"Status: \" + status);\n      console.log(\"Message: \" + msg);\n      if (status) {\n\n      } else {\n        alert('Invalid email or password!');\n      }\n    });\n  }\n  // getting input labels values from user end (login.html)\n  get f() { return this.loginForm.controls; }\n}\n","<!-- NG-ZORRO -->\n<!-- <a href=\"https://github.com/NG-ZORRO/ng-zorro-antd\" target=\"_blank\" style=\"display: flex;align-items: center;justify-content: center;height: 100%;width: 100%;\">\n  <img height=\"300\" src=\"https://img.alicdn.com/tfs/TB1X.qJJgHqK1RjSZFgXXa7JXXa-89-131.svg\">\n</a> -->\n<nav class=\"navbar navbar-dark bg-dark navbar-expand-lg\">\n    <div class=\"container-fluid px-0\">\n        <div class=\"row w-100\">\n            <div class=\"col-5\">\n                <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo03\" aria-controls=\"navbarTogglerDemo03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" (click)=\"isShown = !isShown\">\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n                <ul class=\"navbar-nav \">\n                    <li class=\"nav-item\">\n                        <h3 class=\"head\"> Asasa Real Estate</h3>\n                    </li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                    <li class=\"nav-item more-items\">\n                        <a class=\"nav-link\" routerLink=\"/users\" (click)=\"isShown = false\">Users</a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" routerLink=\"/leads\" (click)=\"isShown = false\">Leads</a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" routerLink=\"/inventory\" (click)=\"isShown = false\">Inventory</a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" routerLink=\"/inactive\" (click)=\"isShown = false\">Inactive Leads</a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" routerLink=\"/options\" (click)=\"isShown = false\">Options</a>\n                    </li>\n                </ul>\n            </div>\n            <div class=\"col-md-3\">\n            </div>\n            <div class=\"col-4\">\n                <div class=\"collapse justify-content-end navbar-collapse\" [ngClass]=\"{ 'show': isShown }\" id=\"navbarTogglerDemo03\">\n                    <ul class=\"navbar-nav ml-auto mt-2 mt-lg-0\">\n                        <li class=\"nav-item\">\n                            <a class=\"nav-link\" routerLink=\"/login-component\">Login </a>\n                        </li>\n                        <li class=\"nav-item\">\n                            <a class=\"nav-link\" routerLink=\"/map\">Maps</a>\n                        </li>\n                        <li class=\"nav-item\">\n                            <a class=\"nav-link\" data-toggle=\"modal\" data-target=\"#exampleModal\">Login Modal</a>\n                        </li>\n                        <li class=\"nav-item dropdown\">\n\n                            <a class=\"nav-link dropdown-toggle\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                <i class=\"fa fa-users\"></i>\n                            </a>\n                            <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"navbarDropdown\">\n                                <a class=\"dropdown-item\" routerLink=\"/profile\">Profile</a>\n                                <a class=\"dropdown-item\" routerLink=\"\">Settings</a>\n                                <div class=\"dropdown-divider\"></div>\n                                <a class=\"dropdown-item\" routerLink=\"\">Advanced Settings</a>\n                            </div>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    </div>\n</nav>\n\n<!-- Modal -->\n<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-body\">\n\n                <button type=\"button\" class=\"close pull-right\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n                <div class=\"row\">\n                    <div class=\"col-sm-6 col-md-6 left\">\n                        <div>\n                            <img class=\"left-img\" src=\"assets/icons/asasa.gif\" />\n                        </div>\n                    </div>\n\n                    <div class=\"col-1 v2\">\n                        <div class=\"vl\"></div>\n                        Log - in\n                        <div class=\"vl\"></div>\n                    </div>\n\n                    <div class=\"col-sm-5 col-md-5 right\">\n                        <h2>Welcome to my asasa</h2>\n                        <form class=\"form-register\" [formGroup]=\"loginForm\" (ngSubmit)=\"loginUser()\">\n\n                            <div class=\"form-group\" class='input-container'>\n                                <div class=\"input-group\">\n                                    <i class=\"fa fa-user icon\"></i>\n                                    <input class=\"form-control\" class=\"input-field\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" id=\"inputEmail\" type=\"email\" name=\"email\" formControlName=\"email\" placeholder=\"Email address\" required=\"\" autofocus=\"\" class=\"form-control rounded-pill border-0 shadow-sm px-4\">\n                                    <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                                        <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                                        <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"form-group\">\n                                <div class=\"input-group\">\n                                    <i class=\"fa fa-lock icon\"></i>\n                                    <input id=\"password\" type=\"password\" formControlName=\"password\" placeholder=\"Password\" required=\"\" class=\"form-control rounded-pill border-0 shadow-sm px-4 text-primary\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\">\n                                    <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                                        <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                                        <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"form-group\">\n                                <br>\n                                <button type=\"submit\" class='btn' class=\"btn btn-primary rounded-pill\">Login</button>\n                            </div>\n                            <div class=\"custom-control custom-checkbox mb-3\">\n                                <input id=\"customCheck1\" type=\"checkbox\" checked class=\"custom-control-input\">\n                                <!-- <label for=\"customCheck1\" class=\"custom-control-label\">Remember password</label> -->\n                                <a routerLink=\"forgetpass-component\"> <b>Forget Password</b></a>\n                                <br> Not Registered?\n                                <a routerLink=\"register-component\"> <b>Sign up!</b></a>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<router-outlet></router-outlet>","// import { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\n// import {MaterialModule} from '@angular/material';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\n// import { MDBBootstrapModule } from 'angular-bootstrap-md';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MapComponent } from './map/map.component';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SignupComponent } from './signup/signup.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ForgetpassComponent } from './forgetpass/forgetpass.component';\nimport { ForgetpassverifyComponent } from './forgetpassverify/forgetpassverify.component';\nimport { NewpassComponent } from './newpass/newpass.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignupotpComponent } from './signupotp/signupotp.component';\n// import { NgZorroAntdModule, NZ_I18N } from 'ng-zorro-antd';\n// import { en_US } from 'ng-zorro-antd';\nimport { registerLocaleData } from '@angular/common';\nimport en from '@angular/common/locales/en';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ProfileComponent } from './dashboard/profile/profile.component';\nimport { InventoryComponent } from './dashboard/inventory/inventory.component';\nimport { UsersComponent } from './dashboard/users/users.component';\nimport { LeadsComponent } from './dashboard/leads/leads.component';\nimport { TableFilterPipe } from './Pipes/table-filter.pipe';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { TableFilter02Pipe } from './Pipes/table-filter02.pipe';\nimport { TableFilter03Pipe } from './Pipes/table-filter03.pipe';\nimport { TableFilter04Pipe } from './Pipes/table-filter04.pipe';\nimport { TableFilter05Pipe } from './Pipes/table-filter05.pipe';\nimport { TableFilter06Pipe } from './Pipes/table-filter06.pipe';\nimport { InactiveComponent } from './dashboard/inactive/inactive.component';\nimport { OptionsComponent } from './dashboard/options/options.component';\nimport { AddUsersComponent } from './dashboard/users/add-users/add-users.component';\nimport { ToastrModule } from 'ngx-toastr';\nimport { AddLeadsComponent } from './dashboard/leads/add-leads/add-leads.component';\nimport { AddInventoriesComponent } from './dashboard/inventory/add-inventories/add-inventories.component';\n\n\n// import { HighlightDirective } from './directives/highlight.directive';\n// import { FilterPipe } from './pipes/filter.pipe';\nregisterLocaleData(en);\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MapComponent,\n    LoginComponent,\n    SignupComponent,\n    ForgetpassComponent,\n    ForgetpassverifyComponent,\n    NewpassComponent,\n    SignupotpComponent,\n    DashboardComponent,\n    ProfileComponent,\n    InventoryComponent,\n    UsersComponent,\n    LeadsComponent,\n    // FilterPipe,\n    // HighlightDirective\n    TableFilterPipe,\n    TableFilter02Pipe,\n    TableFilter03Pipe,\n    TableFilter04Pipe,\n    TableFilter05Pipe,\n    TableFilter06Pipe,\n    InactiveComponent,\n    OptionsComponent,\n    AddUsersComponent,\n    AddLeadsComponent,\n    AddInventoriesComponent\n  ],\n  imports: [\n    //  NgZorroAntdModule,\n    HttpClientModule,\n    // MDBBootstrapModule.forRoot(),\n    BrowserModule,\n    AppRoutingModule,\n    FlexLayoutModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(), // ToastrModule added\n    ReactiveFormsModule,\n    MatToolbarModule,\n    MatButtonModule,\n    FormsModule,\n    Ng2SearchPipeModule\n    // MaterialModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\nimport * as $ from 'jquery';\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {             //Toggle Click Function\n    // $(\"#menu-toggle\").click(function(e) {\n    //   e.preventDefault();\n    //   $(\"#wrapper\").toggleClass(\"toggled\");\n    // });\n\n  }\n\n}\n","<div class=\"d-flex\" id=\"wrapper\">\n    <!-- Sidebar -->\n    <nav id=\"sidebar\">\n        <div class=\"p-4 pt-5\">\n            <a routerLink=\"/\" class=\"img logo rounded-circle mb-5\">\n                <img src=\"assets/icons/asasa.gif\" alt=\"\"></a>\n            <ul class=\"list-unstyled components mb-5\">\n                <li class=\"active\">\n                    <a routerLink=\"/dashboard\">Home</a>\n\n                </li>\n                <li>\n                    <a routerLink=\"/profile\">Profile</a>\n                </li>\n                <li>\n                    <a routerLink=\"/users\">Users</a>\n\n                </li>\n                <li>\n                    <a routerLink=\"/inventory\">Inventory</a>\n                </li>\n                <li>\n                    <a routerLink=\"/leads\">Leads</a>\n                </li>\n            </ul>\n\n            <div class=\"footer\">\n\n            </div>\n\n        </div>\n    </nav>\n    <div id=\"content\" class=\"p-4 p-md-5\"></div>\n    <!-- <div>Asasa Dashboard</div> -->\n    <div id=\"page-content-wrapper\">\n\n        <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <div class=\"container-fluid\">\n\n                <button type=\"button\" data-toggle=\"collapse\" href=\"#sidebar\" id=\"sidebarCollapse\"\n                    class=\"btn btn-primary\">\n                    <i class=\"fa fa-bars\"></i>\n                    <span class=\"sr-only\">Toggle Menu</span>\n                </button>\n                <button class=\"btn btn-dark d-inline-block d-lg-none ml-auto\" type=\"button\" data-toggle=\"collapse\"\n                    data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\"\n                    aria-label=\"Toggle navigation\">\n                    <i class=\"fa fa-bars\"></i>\n                </button>\n                <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\"></div>\n            </div>\n        </nav>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-inactive',\n  templateUrl: './inactive.component.html',\n  styleUrls: ['./inactive.component.css']\n})\nexport class InactiveComponent implements OnInit {\n\n  constructor() { }\n  search_id: string;\n  search_client: string;\n  general_search: string;\n  search_location: string;\n  search_type: string;\n  search_demand: string;\n  search_area: string;\n  users: any[] = [\n    { Id: '1', Client: 'Aftab Nabi', Purpose: 'Rent', Prop_type: 'Apartment', Prop_num: '5', Area: '0.5 Kanal', Location: 'E-11/4', Demand: '45,000', Phone_num: '090078601', Comment: 'Want 4 bed apartment', Assigned_to: '', Admin_status: 'Added', Agent_status: 'Assigned', Added_on: 'Aug,15,2020' },\n    { Id: '2', Client: 'Awais', Purpose: 'Rent', Prop_type: 'Apartment', Prop_num: '12', Area: '1 Kanal', Location: 'F-6/4', Demand: '450,000', Phone_num: '090078601', Comment: 'Want 4 bed ', Assigned_to: '', Admin_status: 'Added', Agent_status: 'Assigned', Added_on: 'Aug,15,2020' },\n    { Id: '3', Client: 'Usama Gull', Purpose: 'Buy', Prop_type: 'House', Prop_num: '14', Area: '2 Kanal', Location: 'G-15/2', Demand: '150,000', Phone_num: '090078601', Comment: 'Want 3 bed ', Assigned_to: '', Admin_status: 'Added', Agent_status: 'Assigned', Added_on: 'Aug,15,2020' },\n    { Id: '4', Client: 'Usman', Purpose: 'Rent', Prop_type: 'Residential Plot', Prop_num: '72', Area: '2 Kanal', Location: 'E-11/4', Demand: '45,000', Phone_num: '090078601', Comment: 'Want 1 bed ', Assigned_to: '', Admin_status: 'Added', Agent_status: 'Assigned', Added_on: 'Aug,15,2020' },\n    { Id: '5', Client: 'Zakria', Purpose: 'Buy', Prop_type: 'Apartment', Prop_num: '5', Area: '0.5 Kanal', Location: 'E-11/4', Demand: '45,000', Phone_num: '090078601', Comment: 'Want 5 bed ', Assigned_to: '', Admin_status: 'Added', Agent_status: 'Assigned', Added_on: 'Aug,15,2020' },\n  ];\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"inactive\">\n    <br>\n    <br>\n    <h1><b>&nbsp;&nbsp;&nbsp;&nbsp;Inactive/Deleted Leads</b></h1>\n    <br>\n    <div class=\"pull-right\">\n        <!-- <input type=\"text\" placeholder=\"Search..\" name=\"search\">\n    <button type=\"submit\"><i class=\"fa fa-search\"></i></button> -->\n        <div class=\"card-body row\">\n            <div class=\"col-auto\">\n                <i class=\"fa fa-search icon\"></i>\n            </div>\n            <!--end of col-->\n            <div class=\"col\">\n                <input class=\"form-control\" id=\"myInput\" type=\"text\" [(ngModel)]=\"general_search\"\n                    placeholder=\"Search topic or keyword\">\n            </div>\n\n            <!-- <button class=\"btn btn-primary rounded-pill\" type=\"submit\">Search</button> -->\n\n            <button class=\"btn btn-primary rounded-pill\">Print</button>\n            <button class=\"btn btn-primary rounded-pill\">Excel</button>&nbsp;&nbsp;&nbsp;&nbsp;\n        </div>\n    </div>\n    <br><br><br>\n    <!-- Inventory management table is below -->\n    <table class=\"table table-hover\" class=\"table table-hover table-dark\">\n        <thead>\n            <tr>\n                <th scope=\"col\">ID</th>\n                <th scope=\"col\">Client</th>\n                <th scope=\"col\">Purpose</th>\n                <th scope=\"col\">Prop. Type</th>\n                <th scope=\"col\">Prop. #</th>\n                <th scope=\"col\">Area</th>\n                <th scope=\"col\">Location</th>\n                <th scope=\"col\">Demand</th>\n                <th scope=\"col\">Phone #</th>\n                <th scope=\"col\">Lead Status</th>\n                <th scope=\"col\">Deleted by</th>\n                <th scope=\"col\">Added On</th>\n                <th scope=\"col\">Operations</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr>\n                <td>\n                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"search_id\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"search_client\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"search_area\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"search_location\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"search_demand\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <i class=\"fa fa-search icon\"></i>\n                </td>\n            </tr>\n            <tr\n                *ngFor=\"let user of users | tableFilter06: search_client | tableFilter05: search_demand | tableFilter04: search_type | tableFilter03: search_area | tableFilter02: search_location | tableFilter: search_id | filter: general_search\">\n                <td>{{ user.Id }}</td>\n                <td>{{ user.Client }}</td>\n                <td>{{ user.Purpose }}</td>\n                <td>{{ user.Prop_type }}</td>\n                <td>{{ user.Prop_num }}</td>\n                <td>{{ user.Area}}</td>\n                <td>{{ user.Location }}</td>\n                <td>{{ user.Demand }}</td>\n                <td>{{ user.Phone_num }}</td>\n                <td>{{ user.Comment }}</td>\n                <td>{{ user.Assigned_to}}</td>\n                <td>{{ user.Added_on}}</td>\n                <td>\n                    <button class=\"btn btn-primary rounded-pill\">Delete</button>\n            </tr>\n        </tbody>\n    </table>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl, FormArray, NgForm } from '@angular/forms'\nimport { from } from 'rxjs';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { ToastrService } from \"ngx-toastr\";\nimport * as mapboxgl from 'mapbox-gl';\n// import { MapserviceService } from \"../services/mapservice.service\";\n\n@Component({\n  selector: 'app-add-inventories',\n  templateUrl: './add-inventories.component.html',\n  styleUrls: ['./add-inventories.component.css']\n})\nexport class AddInventoriesComponent implements OnInit {\n\n  // Requirements for Map on the template, below; \n  opacity = 1;\n  map: mapboxgl.Map;\n  style = 'mapbox://styles/mapbox/streets-v11';\n  lat = 33.628463;\n  lng = 73.087581;\n  submitted = false;\n  // user: any;\n  // cartService: any;\n  addinventoryForm: FormGroup;\n  // checked: boolean = true;\n\n  // Variables below;\n  urls = [];\n  optionValue;\n  optionValue1;;\n  fileToUpload: File = null;\n\n  //////////////////////////////////\n\n  constructor(private formBuilder: FormBuilder,\n    private authService: AuthenticationService,\n    private router: Router,\n    private toastr: ToastrService) { }\n\n  // File Upload Functions below\n  handleFileInput(files: FileList) {\n    this.fileToUpload = files.item(0);\n  }\n\n  // uploadFileToActivity() {\n  //   this.fileUploadService.postFile(this.fileToUpload).subscribe(data => {\n  //     // do something, if upload success\n  //     }, error => {\n  //       console.log(error);\n  //     });\n  // }\n\n  // Form Declaration, and Validation Function\n  formDeclare() {\n    this.addinventoryForm = this.formBuilder.group({\n      prop_type: [''],\n      prop_typename: [''],\n      prop_purpose: [''],\n      city: ['', Validators.required],\n      location: ['', Validators.required],\n      sub_location: ['', Validators.required],\n      id: ['', Validators.required],\n      prop_no: ['', Validators.required],\n      street_no: ['', Validators.required],\n      demand: ['', Validators.required],\n      land_area: ['', Validators.required],\n      built_year: ['', Validators.required],\n      view: ['', Validators.required],\n      park_space: ['', Validators.required],\n      other_housefeature: ['', Validators.required],\n      other_businessfeature: ['', Validators.required],\n      bedroom: ['', Validators.required],\n      bathroom: ['', Validators.required],\n      guestroom: ['', Validators.required],\n      tvlounge: ['', Validators.required],\n      diningroom: ['', Validators.required],\n      studyroom: ['', Validators.required],\n      servantroom: ['', Validators.required],\n      kitchen: ['', Validators.required],\n      storeroom: ['', Validators.required],\n      floor_location: ['', Validators.required],\n      otherroom: ['', Validators.required],\n      nearby_school: ['', Validators.required],\n      nearby_hospital: ['', Validators.required],\n      nearby_shoppingmall: ['', Validators.required],\n      nearby_restaurant: ['', Validators.required],\n      distance_airport: ['', Validators.required],\n      nearby_transport: ['', Validators.required],\n      nearby_other: ['', Validators.required],\n      comment: ['', Validators.required],\n      prop_title: ['', Validators.required],\n      video_link: ['', Validators.required],\n      link_360: ['', Validators.required],\n      other_plotfeature: ['', Validators.required],\n      total_plotprice: ['', Validators.required],\n      paid_amount: ['', Validators.required],\n      profit: ['', Validators.required],\n      current_price: ['', Validators.required]\n    });\n  }\n\n  // Get value of prop_type variable in template\n  get Prop_type() {\n    return this.addinventoryForm.get('prop_type')\n  }\n  // Get value of prop_typename variable in template\n  get Prop_typename() {\n    return this.addinventoryForm.get('prop_typename')\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.addinventoryForm.controls; }\n\n  // ngOnInit\n  ngOnInit(): void {\n    this.initializemapbox();\n    this.formDeclare();\n  }\n  //   changeValue(value) {\n  //     this.checked = !value;\n  // }\n\n  // Function to initialize Map; used in template\n  initializemapbox() {\n    this.map = new mapboxgl.Map({\n      accessToken:\n        'pk.eyJ1IjoibmFiZWVsc2FsZWVtIiwiYSI6ImNrY3p4MWhrZzBiNWwyd3FtOGx3aTZsbjEifQ.z6RLknl-YnJe2eKqMjPElg',\n      container: 'map',\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [73.024955, 33.650753], // starting position [lng, lat]\n      zoom: 10, // starting zoom\n    });\n    this.map.addControl(new mapboxgl.FullscreenControl());\n    this.map.addControl(new mapboxgl.NavigationControl());\n    this.map.addControl(\n      new mapboxgl.GeolocateControl({\n        positionOptions: {\n          enableHighAccuracy: true,\n        },\n        trackUserLocation: true,\n      })\n    );\n  }\n\n  ///////////////////////////////\n  // Check whether user pressed 'buy' or 'rent' button \n  getValue(value: string) {\n    this.optionValue1 = value;\n  }\n\n  // Submit form to backend service\n  submitForm() {\n    this.submitted = true;    // stop here if form is invalid\n    // if (this.addinventoryForm.invalid) {\n    //   this.toastr.error('Fields Empty', 'Error', {\n    //     timeOut: 5000\n    //   });\n    //   console.log('Erroneous')\n    //   return;\n    // }\n    // this.addinventoryForm.reset();\n    this.toastr.success('Lead Added', 'Success', {\n      timeOut: 9000\n    });\n    this.authService.createInventory(this.addinventoryForm.value).subscribe((res) => {\n      this.addinventoryForm.reset();\n      this.toastr.success('User Added', 'Success', {\n        timeOut: 9000\n      });\n      console.log('Subscribed data: ', res);\n    });\n  }\n\n  // Form upload function\n  onSelectFile(event) {\n    if (event.target.files && event.target.files[0]) {\n        var filesAmount = event.target.files.length;\n        for (let i = 0; i < filesAmount; i++) {\n                var reader = new FileReader();\n\n                reader.onload = (event:any) => {\n                  // console.log(event.target.result);\n                   this.urls.push(event.target.result); \n                }\n\n                reader.readAsDataURL(event.target.files[i]);\n        }\n    }\n  }\n  removeMultipleSelectedFile(index) {\n    this.urls.splice(index, 1);\n  }\n\n}\n","<div class=\" register\">\n    <div class=\"row\">\n        <div class=\"col-md-2 register-left\">\n            <img src=\"assets/icons/asasa.gif\" alt=\"\" />\n            <h2><b>Asasa Real Estate</b></h2>\n        </div>\n        <div class=\"col-md-10 col-sm-10 register-right\">\n            <form class=\"form-register\" [formGroup]=\"addinventoryForm\">\n\n                <h2 class=\"register-heading\">Add Inventory</h2>\n                <div class=\"row register-form\">\n                    <div class=\"col-md-6 col-sm-6\">\n                        <br>\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                City\n                                <input formControlName=\"city\" class=\"form-control\" type=\"text\" list=\"productName1\" [ngClass]=\"{ 'is-invalid': submitted && f.city.errors }\" />\n                                <div *ngIf=\"submitted && f.city.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.city.errors.required\">City is required</div>\n                                </div>\n                                <datalist id=\"productName1\">\n                                    <option value=\"Islamabad\">Islamabad</option>\n                                    <option value=\"Rawalpindi\">Rawalpindi</option>\n                                    <option value=\"Else\">Else</option>\n                                </datalist>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <br>\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                Location\n                                <input formControlName=\"location\" class=\"form-control\" type=\"text\" list=\"productName2\" [ngClass]=\"{ 'is-invalid': submitted && f.location.errors }\" />\n                                <div *ngIf=\"submitted && f.location.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.location.errors.required\">Location is required</div>\n                                </div>\n                                <datalist id=\"productName2\">\n                                    <option value=\"I-10\">I-10</option>\n                                    <option value=\"G-15\">G-15</option>\n                                    <option value=\"Else\">Else</option>\n                                </datalist>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <!-- Map -->\n                <div class=\"row\">\n                    <div class=\"col-md-10 col-sm-10 offset-1\">\n                        <br><br>\n                        <div id=\"map\" class=\"match-parent\">\n                            <div class=\"map-overlay top\">\n                                <div class=\"map-overlay-inner\">\n                                    <label>Layer opacity: <span id=\"slider-value\">100%</span></label>\n                                    <input id=\"slider\" type=\"range\" min=\"0\" max=\"100\" step=\"0\" value=\"100\" />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <!-- end of map -->\n                <div class=\"row\">\n                    <div class=\"col-md-4 col-sm-4 offset-1\">\n                        <br>\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                Sub Location\n                                <input formControlName=\"sub_location\" class=\"form-control\" type=\"text\" list=\"productName3\" [ngClass]=\"{ 'is-invalid': submitted && f.sub_location.errors }\" />\n                                <div *ngIf=\"submitted && f.sub_location.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.sub_location.errors.required\">Sub Location is required</div>\n                                </div>\n                                <datalist id=\"productName3\">\n                                    <option value=\"I-10\">I-10</option>\n                                    <option value=\"G-15\">G-15</option>\n                                    <option value=\"I-12\">I-12</option>\n                                    <option value=\"G-13\">G-13</option>\n                                    <option value=\"Else\">Else</option>\n                                </datalist>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=row>\n                    <div class=\"col-md-4 col-sm-4 offset-1\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <br> Inventory ID\n                                <input type=\"number\" class=\"form-control\" formControlName=\"id\" required autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.id.errors }\" />\n                                <div *ngIf=\"submitted && f.id.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.id.errors.required\">ID is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col-md-12 col-sm-12 offset-1\">\n                        <!-- <div class=\"form-check form-check-inline\">\n                            <input type=\"radio\" id=\"huey\" name=\"drone\" value=\"huey\" checked>\n                            <label for=\"huey\">Huey</label>\n                        </div>\n\n                        <div class=\"form-check form-check-inline\">\n                            <input type=\"radio\" id=\"dewey\" name=\"drone\" value=\"dewey\">\n                            <label for=\"dewey\">Dewey</label>\n                        </div>\n\n                        <div class=\"form-check form-check-inline\">\n                            <input type=\"radio\" id=\"louie\" name=\"drone\" value=\"louie\">\n                            <label for=\"louie\">Louie</label>\n                        </div> -->\n\n                        <div class=\"form-check form-check-inline\">\n                            <input class=\"form-check-input\" type=\"radio\" formControlName=\"prop_type\" value=\"house\" checked=\"checked\">\n                            <label class=\"form-check-label\" for=\"House\">House</label>\n                        </div>\n                        <div class=\"form-check form-check-inline\">\n                            <input class=\"form-check-input\" type=\"radio\" formControlName=\"prop_type\" value=\"plot\">\n                            <label class=\"form-check-label\" for=\"Plot\">Plot</label>\n                        </div>\n                        <div class=\"form-check form-check-inline\">\n                            <input class=\"form-check-input\" type=\"radio\" formControlName=\"prop_type\" value=\"commercial\">\n                            <label class=\"form-check-label\" for=\"Commercial\">Commercial</label>\n                        </div>\n                    </div>\n                </div>\n\n                <!-- Radio buttons here; Buy and Rent -->\n                <div class=\"row\" *ngIf=\"Prop_type.value =='house' || Prop_type.value =='commercial'\">\n                    <div class=\"col-md-12 col-sm-12  offset-1\"><br>\n\n                        <!-- <div data-toggle=\"buttons\"> -->\n                        <button (click)=\"getValue('buy')\" class=\"btn btn-primary\">Buy</button>\n\n                        <button (click)=\"getValue('rent')\" class=\"btn btn-primary\">Rent</button>\n                        <!-- </div> -->\n                    </div>\n                    <!-- <div class=\"form-check form-check-inline\">\n                            <label class=\"btn btn-secondary\">\n                                <input class=\"form-check-input\" type=\"radio\"  formControlName=\"prop_typename\" value=\"buy\"  > Buy\n                              </label>\n                        </div>\n                        <div class=\"\">\n                            <label class=\"btn btn-secondary\">\n                                <input class=\"form-check-input\" type=\"radio\"  formControlName=\"prop_typename\" value=\"rent\"> Rent\n                                {{Prop_typename.value}}\n                              </label>\n                        </div> -->\n                    <!-- <div class=\"btn-group btn-group-toggle form-check form-check-inline\" data-toggle=\"buttons\">\n                            <label class=\"btn btn-secondary\">\n                              <input class=\"form-check-input\" type=\"radio\"  formControlName=\"prop_typename\" value=\"buy\"  > Buy\n                            </label>\n                            <label class=\"btn btn-secondary\">\n                              <input class=\"form-check-input\" type=\"radio\"  formControlName=\"prop_typename\" value=\"rent\"> Rent\n                              {{Prop_typename.value}}\n                            </label>\n                        </div> -->\n                </div>\n\n                <!-- If Plot radio button is been selected; then R.button here, Residential Plot and Commercial Plot -->\n                <div class=\"row\" *ngIf=\"Prop_type.value =='plot'\">\n                    <div class=\"col-md-12 col-sm-12  offset-1\"><br>\n                        <div class=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n                            <label class=\"btn btn-secondary\">\n                              <input type=\"radio\" id=\"Residential Plot\" formControlName=\"prop_purpose\" autocomplete=\"off\" > Residential Plot\n                            </label>\n                            <label class=\"btn btn-secondary\">\n                              <input type=\"radio\" id=\"Commercial Plot\" formControlName=\"prop_purpose\" autocomplete=\"off\"> Commercial Plot\n                            </label>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"row\" *ngIf=\"optionValue1 =='buy' && Prop_type.value =='house'\">\n                    <!-- Radio buttons here; If 'Buy' Selected then... House, Apartment, Farm House and Pent House -->\n                    <div class=\"col-md-12 col-sm-12  offset-1\"><br>\n                        <div class=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n                            <label class=\"btn btn-secondary\">\n                              <input type=\"radio\" name=\"options\" id=\"House1\" autocomplete=\"off\" > House\n                            </label>\n                            <label class=\"btn btn-secondary\">\n                              <input type=\"radio\" name=\"options\" id=\"Apartment1\" autocomplete=\"off\"> Apartment\n                            </label>\n                            <label class=\"btn btn-secondary\">\n                              <input type=\"radio\" name=\"options\" id=\"Farm House1\" autocomplete=\"off\"> Farm House\n                            </label>\n                            <label class=\"btn btn-secondary\">\n                              <input type=\"radio\" name=\"options\" id=\"Pent House1\" autocomplete=\"off\"> Pent House\n                            </label>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\" *ngIf=\" optionValue1 =='rent'  && Prop_type.value =='house'\">\n                    <!-- Radio buttons here; If 'Rent' Selected then... House, Apartment, Upper Portion, Lower Portion, Farm House and Pent House -->\n                    <div class=\"col-md-12 col-sm-12  offset-1\"><br>\n                        <div class=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n                            <label class=\"btn btn-secondary\">\n                              <input type=\"radio\" name=\"options\" id=\"House2\" autocomplete=\"off\"> House\n                            </label>\n                            <label class=\"btn btn-secondary\">\n                              <input type=\"radio\" name=\"options\" id=\"Apartment\" autocomplete=\"off\"> Apartment\n                            </label>\n                            <label class=\"btn btn-secondary\">\n                              <input type=\"radio\" name=\"options\" id=\"Upper Portion\" autocomplete=\"off\"> Upper Portion\n                            </label>\n                            <label class=\"btn btn-secondary\">\n                              <input type=\"radio\" name=\"options\" id=\"Lower Portion\" autocomplete=\"off\"> Lower Portion\n                            </label>\n                            <label class=\"btn btn-secondary\">\n                              <input type=\"radio\" name=\"options\" id=\"Farm House\" autocomplete=\"off\"> Farm House\n                            </label>\n                            <label class=\"btn btn-secondary\">\n                              <input type=\"radio\" name=\"options\" id=\"Pent House\" autocomplete=\"off\"> Pent House\n                            </label>\n                        </div>\n                    </div>\n                </div>\n\n                <!-- Radio buttons here; If 'Commercial' Selected then... below -->\n                <div class=\"row\" *ngIf=\"Prop_type.value =='commercial'\">\n                    <div class=\"col-md-12 col-sm-12  offset-1\"><br>\n                        <div class=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n                            <label class=\"btn btn-secondary\">\n                              <input type=\"radio\" name=\"options\" id=\"Commercial\" autocomplete=\"off\"> Commercial\n                            </label>\n                            <label class=\"btn btn-secondary\">\n                              <input type=\"radio\" name=\"options\" id=\"Plaza\" autocomplete=\"off\"> Plaza\n                            </label>\n                            <label class=\"btn btn-secondary\">\n                              <input type=\"radio\" name=\"options\" id=\"Shop\" autocomplete=\"off\"> Shop\n\n                            </label>\n                            <label class=\"btn btn-secondary\">\n                              <input type=\"radio\" name=\"options\" id=\"Office\" autocomplete=\"off\"> Office\n                            </label>\n                            <label class=\"btn btn-secondary\">\n                              <input type=\"radio\" name=\"options\" id=\"Floor\" autocomplete=\"off\"> Floor\n                            </label>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col-md-4 col-sm-4 offset-1\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <br> Property Number{{Prop_typename.value}}\n                                <input type=\"text\" class=\"form-control\" formControlName=\"prop_no\" required autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.id.errors }\" />\n                                <div *ngIf=\"submitted && f.prop_no.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.prop_no.errors.required\">Property {{Prop_typename.value}}Type is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-4 col-sm-4\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <br> Street Number\n                                <input type=\"text\" class=\"form-control\" formControlName=\"street_no\" required autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.street_no.errors }\" />\n                                <div *ngIf=\"submitted && f.street_no.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.street_no.errors.required\">Street Number is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-4 col-sm-4 offset-1\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <br> Demand\n                                <input type=\"number\" class=\"form-control\" formControlName=\"demand\" required autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.demand.errors }\" />\n                                <div *ngIf=\"submitted && f.demand.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.demand.errors.required\">Demand is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-4 col-sm-4 offset-1\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <br> Land Area\n                                <input type=\"number\" class=\"form-control\" formControlName=\"land_area\" required autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.land_area.errors }\" />\n                                <div *ngIf=\"submitted && f.land_area.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.land_area.errors.required\">Land Area is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-2 col-sm-2 radio-mid\"><br>\n                        <div class=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n                            <label class=\"btn btn-secondary\">\n                              <input type=\"radio\" name=\"options\" id=\"Sq. Feet\" autocomplete=\"off\" checked> Sq. Feet\n                            </label>\n                            <label class=\"btn btn-secondary\">\n                              <input type=\"radio\" name=\"options\" id=\"Sq. Yard\" autocomplete=\"off\"> Sq. Yard\n                            </label>\n                            <label class=\"btn btn-secondary\">\n                              <input type=\"radio\" name=\"options\" id=\"Marla\" autocomplete=\"off\"> Marla\n                            </label>\n                            <label class=\"btn btn-secondary\">\n                              <input type=\"radio\" name=\"options\" id=\"Kanal\" autocomplete=\"off\"> Kanal\n                            </label>\n                        </div>\n                    </div>\n                </div>\n\n                <!-- if Plot radio btn been selected-->\n                <!-- Plot Features -->\n                <div class=\"row offset-1\" *ngIf=\"Prop_type.value =='plot'\">\n                    <h3><b>Plot Features</b></h3>\n                </div>\n                <div class=\"row offset-1\" *ngIf=\"Prop_type.value =='plot'\">\n                    <div class=\"col-md-12 col-sm-12\">\n                        <div class=\"form-check form-check-inline\">\n                            <input type=\"checkbox\" class=\"form-check-input\" id=\"Possession\">\n                            <label class=\"form-check-label\" for=\"Possession\">Possession</label>\n                        </div>\n                        <div class=\"form-check form-check-inline\">\n                            <input type=\"checkbox\" class=\"form-check-input\" id=\"Corner\">\n                            <label class=\"form-check-label\" for=\"Corner\">Corner</label>\n                        </div>\n                        <div class=\"form-check form-check-inline\">\n                            <input type=\"checkbox\" class=\"form-check-input\" id=\"Boulevard\">\n                            <label class=\"form-check-label\" for=\"Boulevard\">Boulevard</label>\n                        </div>\n                        <div class=\"form-check form-check-inline\">\n                            <input type=\"checkbox\" class=\"form-check-input\" id=\"Service Road\">\n                            <label class=\"form-check-label\" for=\"Service Road\">Service Road</label>\n                        </div>\n                        <div class=\"form-check form-check-inline\">\n                            <input type=\"checkbox\" class=\"form-check-input\" id=\"Park Facing\">\n                            <label class=\"form-check-label\" for=\"Park Facing\">Park Facing</label>\n                        </div>\n                        <div class=\"form-check form-check-inline\">\n                            <input type=\"checkbox\" class=\"form-check-input\" id=\"Disputed\">\n                            <label class=\"form-check-label\" for=\"Disputed\">Disputed</label>\n                        </div>\n                        <div class=\"form-check form-check-inline\">\n                            <input type=\"checkbox\" class=\"form-check-input\" id=\"File\">\n                            <label class=\"form-check-label\" for=\"File\">File</label>\n                        </div>\n                        <div class=\"form-check form-check-inline\">\n                            <input type=\"checkbox\" class=\"form-check-input\" id=\"Balloted\">\n                            <label class=\"form-check-label\" for=\"Balloted\">Balloted</label>\n                        </div>\n                        <div class=\"form-check form-check-inline\">\n                            <input type=\"checkbox\" class=\"form-check-input\" id=\"Sewerage\">\n                            <label class=\"form-check-label\" for=\"Sewerage\">Sewerage</label>\n                        </div>\n                        <div class=\"form-check form-check-inline\">\n                            <input type=\"checkbox\" class=\"form-check-input\" id=\"Electricity\">\n                            <label class=\"form-check-label\" for=\"Electricity\">Electricity</label>\n                        </div>\n                        <div class=\"form-check form-check-inline\">\n                            <input type=\"checkbox\" class=\"form-check-input\" id=\"Water Supply\">\n                            <label class=\"form-check-label\" for=\"Water Supply\">Water Supply</label>\n                        </div>\n                        <div class=\"form-check form-check-inline\">\n                            <input type=\"checkbox\" class=\"form-check-input\" id=\"Sui Gas\">\n                            <label class=\"form-check-label\" for=\"Sui Gas\">Sui Gas</label>\n                        </div>\n                        <div class=\"form-check form-check-inline\">\n                            <input type=\"checkbox\" class=\"form-check-input\" id=\"Boundary Wall\n                            \">\n                            <label class=\"form-check-label\" for=\"Boundary Wall\n                            \">Boundary Wall\n                            </label>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\" *ngIf=\"Prop_type.value =='plot'\">\n                    <div class=\"col-md-4 col-sm-4 offset-1\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <br> Other Plot Features\n                                <input type=\"number\" class=\"form-control\" formControlName=\"other_plotfeature\" required autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.other_plotfeature.errors }\" />\n                                <div *ngIf=\"submitted && f.other_plotfeature.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.other_plotfeature.errors.required\">Other plot feature is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <!-- Plot Price Detail -->\n                <div class=\"row offset-1\" *ngIf=\"Prop_type.value =='plot'\">\n                    <h3><b>Plot Price Detail</b></h3>\n                </div>\n                <div class=\"row\" *ngIf=\"Prop_type.value =='plot'\">\n                    <div class=\"col-md-4 col-sm-4 offset-1\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <br> Total Price\n                                <input type=\"number\" class=\"form-control\" formControlName=\"total_plotprice\" required autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.total_plotprice.errors }\" />\n                                <div *ngIf=\"submitted && f.total_plotprice.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.total_plotprice.errors.required\">Total Price is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-4 col-sm-4 offset-1\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <br> Paid Amount\n                                <input type=\"number\" class=\"form-control\" formControlName=\"paid_amount\" required autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.paid_amount.errors }\" />\n                                <div *ngIf=\"submitted && f.paid_amount.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.paid_amount.errors.required\">Paid Amount is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\" *ngIf=\"Prop_type.value =='plot'\">\n                    <div class=\"col-md-4 col-sm-4 offset-1\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <br> Profit\n                                <input type=\"number\" class=\"form-control\" formControlName=\"profit\" required autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.profit.errors }\" />\n                                <div *ngIf=\"submitted && f.profit.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.profit.errors.required\">Profit is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-4 col-sm-4 offset-1\" *ngIf=\"Prop_type.value =='plot'\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <br> Current Price\n                                <input type=\"number\" class=\"form-control\" formControlName=\"current_price\" required autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.current_price.errors }\" />\n                                <div *ngIf=\"submitted && f.current_price.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.current_price.errors.required\">Current Price is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <!-- If house radio btn selected -->\n                <!-- House Features -->\n                <div class=\"row offset-1\" *ngIf=\"Prop_type.value =='house'\">\n                    <h3><b>House Features</b></h3>\n                </div>\n                <div class=\"row offset-1\" *ngIf=\"Prop_type.value =='house'\">\n                    <div class=\"col-md-12 col-sm-12\">\n                        <div class=\"form-check form-check-inline\">\n                            <input type=\"checkbox\" class=\"form-check-input\" id=\"Doubled Gazed Windows\">\n                            <label class=\"form-check-label\" for=\"Doubled Gazed Windows\">Doubled Gazed Windows</label>\n                        </div>\n                        <div class=\"form-check form-check-inline\">\n                            <input type=\"checkbox\" class=\"form-check-input\" id=\"Central Air Conditioned\">\n                            <label class=\"form-check-label\" for=\"Central Air Conditioned\">Central Air Conditioned</label>\n                        </div>\n                        <div class=\"form-check form-check-inline\">\n                            <input type=\"checkbox\" class=\"form-check-input\" id=\"Central Heating\">\n                            <label class=\"form-check-label\" for=\"Central Heating\">Central Heating</label>\n                        </div>\n                        <div class=\"form-check form-check-inline\">\n                            <input type=\"checkbox\" class=\"form-check-input\" id=\"Waste Disposal\">\n                            <label class=\"form-check-label\" for=\"Waste Disposal\">Waste Disposal</label>\n                        </div>\n                        <div class=\"form-check form-check-inline\">\n                            <input type=\"checkbox\" class=\"form-check-input\" id=\"Furnished\">\n                            <label class=\"form-check-label\" for=\"Furnished\">Furnished</label>\n                        </div>\n                        <div class=\"form-check form-check-inline\">\n                            <input type=\"checkbox\" class=\"form-check-input\" id=\"Lawn or Garden\">\n                            <label class=\"form-check-label\" for=\"Lawn or Garden\">Lawn or Garden</label>\n                        </div>\n                        <div class=\"form-check form-check-inline\">\n                            <input type=\"checkbox\" class=\"form-check-input\" id=\"Swimming Pool\">\n                            <label class=\"form-check-label\" for=\"Swimming Pool\">Swimming Pool</label>\n                        </div>\n                        <div class=\"form-check form-check-inline\">\n                            <input type=\"checkbox\" class=\"form-check-input\" id=\"Sauna\">\n                            <label class=\"form-check-label\" for=\"Sauna\">Sauna</label>\n                        </div>\n                        <div class=\"form-check form-check-inline\">\n                            <input type=\"checkbox\" class=\"form-check-input\" id=\"Jacuzzi\">\n                            <label class=\"form-check-label\" for=\"Jacuzzi\">Jacuzzi</label>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\" *ngIf=\"Prop_type.value =='house'\">\n                    <div class=\"col-md-4 col-sm-4 offset-1\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <br> Built in Year\n                                <input type=\"number\" class=\"form-control\" formControlName=\"built_year\" required autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.built_year.errors }\" />\n                                <div *ngIf=\"submitted && f.built_year.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.built_year.errors.required\">Built Year is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-4 col-sm-4 offset-1\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <br> View\n                                <input type=\"text\" class=\"form-control\" formControlName=\"view\" required autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.view.errors }\" />\n                                <div *ngIf=\"submitted && f.view.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.view.errors.required\">View is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\" *ngIf=\"Prop_type.value =='house'\">\n                    <div class=\"col-md-4 col-sm-4 offset-1\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <br> Parking Spaces\n                                <input type=\"number\" class=\"form-control\" formControlName=\"park_space\" required autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.built_year.errors }\" />\n                                <div *ngIf=\"submitted && f.park_space.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.park_space.errors.required\">Park Space is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-4 col-sm-4 offset-1\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <br> Other House Features\n                                <input type=\"text\" class=\"form-control\" formControlName=\"other_housefeature\" required autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.other_housefeature.errors }\" />\n                                <div *ngIf=\"submitted && f.other_housefeature.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.other_housefeature.errors.required\">Other House Features is required\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <!-- If Commercial radio btn selected -->\n                <!-- Commercial Features -->\n                <div class=\"row offset-1\" *ngIf=\"Prop_type.value =='commercial'\">\n                    <h3><b>Commercial Features</b></h3>\n                </div>\n                <div class=\"row offset-1\" *ngIf=\"Prop_type.value =='commercial'\">\n                    <div class=\"col-md-12 col-sm-12\">\n                        <div class=\"form-check form-check-inline\">\n                            <input type=\"checkbox\" class=\"form-check-input\" id=\"Doubled Gazed Windows2\">\n                            <label class=\"form-check-label\" for=\"Doubled Gazed Windows2\">Doubled Gazed Windows</label>\n                        </div>\n                        <div class=\"form-check form-check-inline\">\n                            <input type=\"checkbox\" class=\"form-check-input\" id=\"Central Air Conditioned2\">\n                            <label class=\"form-check-label\" for=\"Central Air Conditioned2\">Central Air Conditioned</label>\n                        </div>\n                        <div class=\"form-check form-check-inline\">\n                            <input type=\"checkbox\" class=\"form-check-input\" id=\"Central Heating2\">\n                            <label class=\"form-check-label\" for=\"Central Heating2\">Central Heating</label>\n                        </div>\n                        <div class=\"form-check form-check-inline\">\n                            <input type=\"checkbox\" class=\"form-check-input\" id=\"Waste Disposal2\">\n                            <label class=\"form-check-label\" for=\"Waste Disposal2\">Waste Disposal</label>\n                        </div>\n                        <div class=\"form-check form-check-inline\">\n                            <input type=\"checkbox\" class=\"form-check-input\" id=\"Furnished2\">\n                            <label class=\"form-check-label\" for=\"Furnished2\">Furnished</label>\n                        </div>\n                        <div class=\"form-check form-check-inline\">\n                            <input type=\"checkbox\" class=\"form-check-input\" id=\"Lawn or Garden2\">\n                            <label class=\"form-check-label\" for=\"Lawn or Garden2\">Lawn or Garden</label>\n                        </div>\n                        <div class=\"form-check form-check-inline\">\n                            <input type=\"checkbox\" class=\"form-check-input\" id=\"Swimming Pool2\">\n                            <label class=\"form-check-label\" for=\"Swimming Pool2\">Swimming Pool</label>\n                        </div>\n                        <div class=\"form-check form-check-inline\">\n                            <input type=\"checkbox\" class=\"form-check-input\" id=\"Sauna2\">\n                            <label class=\"form-check-label\" for=\"Sauna2\">Sauna</label>\n                        </div>\n                        <div class=\"form-check form-check-inline\">\n                            <input type=\"checkbox\" class=\"form-check-input\" id=\"Jacuzzi2\">\n                            <label class=\"form-check-label\" for=\"Jacuzzi2\">Jacuzzi</label>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\" *ngIf=\"Prop_type.value =='commercial'\">\n                    <div class=\"col-md-4 col-sm-4 offset-1\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <br> Built in Year\n                                <input type=\"number\" class=\"form-control\" formControlName=\"built_year\" required autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.built_year.errors }\" />\n                                <div *ngIf=\"submitted && f.built_year.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.built_year.errors.required\">Built Year is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-4 col-sm-4 offset-1\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <br> View\n                                <input type=\"text\" class=\"form-control\" formControlName=\"view\" required autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.view.errors }\" />\n                                <div *ngIf=\"submitted && f.view.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.view.errors.required\">View is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\" *ngIf=\"Prop_type.value =='commercial'\">\n                    <div class=\"col-md-4 col-sm-4 offset-1\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <br> Parking Spaces\n                                <input type=\"number\" class=\"form-control\" formControlName=\"park_space\" required autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.built_year.errors }\" />\n                                <div *ngIf=\"submitted && f.park_space.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.park_space.errors.required\">Park Space is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-4 col-sm-4 offset-1\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <br> Other House Features\n                                <input type=\"text\" class=\"form-control\" formControlName=\"other_housefeature\" required autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.other_housefeature.errors }\" />\n                                <div *ngIf=\"submitted && f.other_housefeature.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.other_housefeature.errors.required\">Other House Features is required\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <!-- Business and Communication -->\n                <div class=\"row offset-1\" *ngIf=\"Prop_type.value =='house' || Prop_type.value =='commercial'\">\n                    <h3><b>Business & Communication</b></h3>\n                </div>\n                <div class=\"row offset-1\" *ngIf=\"Prop_type.value =='house' || Prop_type.value =='commercial'\">\n                    <div class=\"col-md-12 col-sm-12\">\n                        <div class=\"form-check form-check-inline\">\n                            <input type=\"checkbox\" class=\"form-check-input\" id=\"Broadband Internet Access\">\n                            <label class=\"form-check-label\" for=\"Broadband Internet Access\">Broadband Internet Access</label>\n                        </div>\n                        <div class=\"form-check form-check-inline\">\n                            <input type=\"checkbox\" class=\"form-check-input\" id=\"Sattelite or Cable TV Ready\">\n                            <label class=\"form-check-label\" for=\"Sattelite or Cable TV Ready\">Sattelite or Cable TV Ready</label>\n                        </div>\n                        <div class=\"form-check form-check-inline\">\n                            <input type=\"checkbox\" class=\"form-check-input\" id=\"Intercom\">\n                            <label class=\"form-check-label\" for=\"Intercom\">Intercom</label>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row offset-1\" *ngIf=\"Prop_type.value =='house' || Prop_type.value =='commercial'\">\n                    <div class=\"col-md-4 col-sm-4\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <h4>\n                                    <br>Other Business features</h4>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"other_businessfeature\" required autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.other_businessfeature.errors }\" />\n                                <div *ngIf=\"submitted && f.other_businessfeature.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.other_businessfeature.errors.required\">Other Features is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <!-- Rooms -->\n                <div class=\"row offset-1\" *ngIf=\"Prop_type.value =='house'\">\n                    <h3><b>Rooms</b></h3>\n                </div>\n                <div class=\" row offset-1\" *ngIf=\"Prop_type.value =='house'\">\n                    <div class=\"col-md-12 col-sm-12 \">\n                        <div class=\"form-check form-check-inline \">\n                            <input type=\"checkbox \" class=\"form-check-input \" id=\"Prayer Room \">\n                            <label class=\"form-check-label \" for=\"Prayer Room \">Prayer Room</label>\n                        </div>\n                        <div class=\"form-check form-check-inline \">\n                            <input type=\"checkbox \" class=\"form-check-input \" id=\"Powder Room \">\n                            <label class=\"form-check-label \" for=\"Powder Room \">Powder Room</label>\n                        </div>\n                        <div class=\"form-check form-check-inline \">\n                            <input type=\"checkbox \" class=\"form-check-input \" id=\"Steam Room \">\n                            <label class=\"form-check-label \" for=\"Steam Room \">Steam Room</label>\n                        </div>\n                        <div class=\"form-check form-check-inline \">\n                            <input type=\"checkbox \" class=\"form-check-input \" id=\"Lounge or Sitting Room \">\n                            <label class=\"form-check-label \" for=\"Lounge or Sitting Room \">Lounge or Sitting Room</label>\n                        </div>\n                        <div class=\"form-check form-check-inline \">\n                            <input type=\"checkbox \" class=\"form-check-input \" id=\"Laundary Room \">\n                            <label class=\"form-check-label \" for=\"Laundary Room \">Laundary Room</label>\n                        </div>\n                        <div class=\"form-check form-check-inline \">\n                            <input type=\"checkbox \" class=\"form-check-input \" id=\"Gym \">\n                            <label class=\"form-check-label \" for=\"Gym \">Gym\n                            </label>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\" *ngIf=\"Prop_type.value =='house'\">\n\n                    <div class=\"col-md-4 col-sm-4 offset-1 \">\n                        <div class=\"form-group \">\n                            <div class=\"input-group \">\n                                <br> Bed Rooms\n                                <input type=\"number \" class=\"form-control \" formControlName=\"bedroom \" required autocomplete=\"off \" [ngClass]=\"{ 'is-invalid': submitted && f.bedroom.errors } \" />\n                                <div *ngIf=\"submitted && f.bedroom.errors \" class=\"invalid-feedback \">\n                                    <div *ngIf=\"f.bedroom.errors.required \">Bedroom is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"col-md-4 col-sm-4 offset-1 \">\n                        <div class=\"form-group \">\n                            <div class=\"input-group \">\n                                <br> Bath Rooms\n                                <input type=\"number \" class=\"form-control \" formControlName=\"bathroom \" required autocomplete=\"off \" [ngClass]=\"{ 'is-invalid': submitted && f.bathroom.errors } \" />\n                                <div *ngIf=\"submitted && f.bathroom.errors \" class=\"invalid-feedback \">\n                                    <div *ngIf=\"f.bathroom.errors.required \">Bathroom is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"col-md-4 col-sm-4 offset-1 \">\n                        <div class=\"form-group \">\n                            <div class=\"input-group \">\n                                <br> Guest Rooms\n                                <input type=\"number \" class=\"form-control \" formControlName=\"guestroom \" required autocomplete=\"off \" [ngClass]=\"{ 'is-invalid': submitted && f.guestroom.errors } \" />\n                                <div *ngIf=\"submitted && f.guestroom.errors \" class=\"invalid-feedback \">\n                                    <div *ngIf=\"f.guestroom.errors.required \">Guestroom is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-4 col-sm-4 offset-1 \">\n                        <div class=\"form-group \">\n                            <div class=\"input-group \">\n                                <br> Tv Lounge\n                                <input type=\"number \" class=\"form-control \" formControlName=\"tvlounge \" required autocomplete=\"off \" [ngClass]=\"{ 'is-invalid': submitted && f.tvlounge.errors } \" />\n                                <div *ngIf=\"submitted && f.tvlounge.errors \" class=\"invalid-feedback \">\n                                    <div *ngIf=\"f.tvlounge.errors.required \">Tv Lounge is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"col-md-4 col-sm-4 offset-1 \">\n                        <div class=\"form-group \">\n                            <div class=\"input-group \">\n                                <br> Dinning Rooms\n                                <input type=\"number \" class=\"form-control \" formControlName=\"diningroom \" required autocomplete=\"off \" [ngClass]=\"{ 'is-invalid': submitted && f.diningroom.errors } \" />\n                                <div *ngIf=\"submitted && f.diningroom.errors \" class=\"invalid-feedback \">\n                                    <div *ngIf=\"f.diningroom.errors.required \">Dinning is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"col-md-4 col-sm-4 offset-1 \">\n                        <div class=\"form-group \">\n                            <div class=\"input-group \">\n                                <br> Study Rooms\n                                <input type=\"number \" class=\"form-control \" formControlName=\"studyroom \" required autocomplete=\"off \" [ngClass]=\"{ 'is-invalid': submitted && f.studyroom.errors } \" />\n                                <div *ngIf=\"submitted && f.studyroom.errors \" class=\"invalid-feedback \">\n                                    <div *ngIf=\"f.studyroom.errors.required \">Studyroom is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-4 col-sm-4 offset-1 \">\n                        <div class=\"form-group \">\n                            <div class=\"input-group \">\n                                <br> Servant Quarters\n                                <input type=\"number \" class=\"form-control \" formControlName=\"servantroom \" required autocomplete=\"off \" [ngClass]=\"{ 'is-invalid': submitted && f.servantroom.errors } \" />\n                                <div *ngIf=\"submitted && f.servantroom.errors \" class=\"invalid-feedback \">\n                                    <div *ngIf=\"f.servantroom.errors.required \">Servant Quarters is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"col-md-4 col-sm-4 offset-1 \">\n                        <div class=\"form-group \">\n                            <div class=\"input-group \">\n                                <br> Kitchens\n                                <input type=\"number \" class=\"form-control \" formControlName=\"kitchen \" required autocomplete=\"off \" [ngClass]=\"{ 'is-invalid': submitted && f.kitchen.errors } \" />\n                                <div *ngIf=\"submitted && f.kitchen.errors \" class=\"invalid-feedback \">\n                                    <div *ngIf=\"f.kitchen.errors.required \">Kitchen is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"col-md-4 col-sm-4 offset-1 \">\n                        <div class=\"form-group \">\n                            <div class=\"input-group \">\n                                <br> Store Rooms\n                                <input type=\"number \" class=\"form-control \" formControlName=\"storeroom \" required autocomplete=\"off \" [ngClass]=\"{ 'is-invalid': submitted && f.storeroom.errors } \" />\n                                <div *ngIf=\"submitted && f.storeroom.errors \" class=\"invalid-feedback \">\n                                    <div *ngIf=\"f.storeroom.errors.required \">Storeroom is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-4 col-sm-4 offset-1 \">\n                        <div class=\"form-group \">\n                            <div class=\"input-group \">\n                                <br> Floor Location\n                                <input type=\"number \" class=\"form-control \" formControlName=\"floor_location \" required autocomplete=\"off \" [ngClass]=\"{ 'is-invalid': submitted && f.floor_location.errors } \" />\n                                <div *ngIf=\"submitted && f.floor_location.errors \" class=\"invalid-feedback \">\n                                    <div *ngIf=\"f.floor_location.errors.required \">Floor Location is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-4 col-sm-4 offset-1 \">\n                        <div class=\"form-group \">\n                            <div class=\"input-group \">\n                                <br> Other Rooms\n                                <input type=\"number \" class=\"form-control \" formControlName=\"otherroom\" required autocomplete=\"off \" [ngClass]=\"{ 'is-invalid': submitted && f.otherroom.errors } \" />\n                                <div *ngIf=\"submitted && f.otherroom.errors \" class=\"invalid-feedback \">\n                                    <div *ngIf=\"f.otherroom.errors.required \">Other Rooms is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <!-- Nearby Locations -->\n                <div class=\"row offset-1\">\n                    <h3><b>Nearby Locations</b></h3>\n                </div>\n\n                <div class=\"row\">\n\n                    <div class=\"col-md-4 col-sm-4 offset-1\">\n                        <div class=\"form-group \">\n                            <div class=\"input-group \">\n                                <br> Nearby Schools\n                                <input type=\"text \" class=\"form-control \" formControlName=\"nearby_school\" required autocomplete=\"off \" [ngClass]=\"{ 'is-invalid': submitted && f.nearby_school.errors } \" />\n                                <div *ngIf=\"submitted && f.nearby_school.errors \" class=\"invalid-feedback \">\n                                    <div *ngIf=\"f.nearby_school.errors.required \">Nearby School is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"col-md-4 col-sm-4 offset-1\">\n                        <div class=\"form-group \">\n                            <div class=\"input-group \">\n                                <br> Nearby Hospitals\n                                <input type=\"text \" class=\"form-control \" formControlName=\"nearby_hospital\" required autocomplete=\"off \" [ngClass]=\"{ 'is-invalid': submitted && f.nearby_hospital.errors } \" />\n                                <div *ngIf=\"submitted && f.nearby_hospital.errors \" class=\"invalid-feedback \">\n                                    <div *ngIf=\"f.nearby_hospital.errors.required \">Nearby hospital is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"col-md-4 col-sm-4 offset-1 \">\n                        <div class=\"form-group \">\n                            <div class=\"input-group \">\n                                <br> Nearby Shopping Malls\n                                <input type=\"text \" class=\"form-control \" formControlName=\"nearby_shoppingmall\" required autocomplete=\"off \" [ngClass]=\"{ 'is-invalid': submitted && f.nearby_shoppingmall.errors } \" />\n                                <div *ngIf=\"submitted && f.nearby_shoppingmall.errors \" class=\"invalid-feedback \">\n                                    <div *ngIf=\"f.nearby_shoppingmall.errors.required \">Nearby Shopping Malls is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-4 col-sm-4 offset-1 \">\n                        <div class=\"form-group \">\n                            <div class=\"input-group \">\n                                <br> Nearby Restaurants\n                                <input type=\"text \" class=\"form-control \" formControlName=\"nearby_restaurant\" required autocomplete=\"off \" [ngClass]=\"{ 'is-invalid': submitted && f.nearby_restaurant.errors } \" />\n                                <div *ngIf=\"submitted && f.nearby_restaurant.errors \" class=\"invalid-feedback \">\n                                    <div *ngIf=\"f.nearby_restaurant.errors.required \">Nearby Restaurants is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"col-md-4 col-sm-4 offset-1 \">\n                        <div class=\"form-group \">\n                            <div class=\"input-group \">\n                                <br> Distance from Airport(kms)\n                                <input type=\"number \" class=\"form-control \" formControlName=\"distance_airport\" required autocomplete=\"off \" [ngClass]=\"{ 'is-invalid': submitted && f.distance_airport.errors } \" />\n                                <div *ngIf=\"submitted && f.distance_airport.errors \" class=\"invalid-feedback \">\n                                    <div *ngIf=\"f.distance_airport.errors.required \">Distance from Airport is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"col-md-4 col-sm-4 offset-1 \">\n                        <div class=\"form-group \">\n                            <div class=\"input-group \">\n                                <br> Nearby Public Transport\n                                <input type=\"text \" class=\"form-control \" formControlName=\"nearby_transport\" required autocomplete=\"off \" [ngClass]=\"{ 'is-invalid': submitted && f.nearby_transport.errors } \" />\n                                <div *ngIf=\"submitted && f.nearby_transport.errors \" class=\"invalid-feedback \">\n                                    <div *ngIf=\"f.nearby_transport.errors.required \">Nearby Public Transport is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-4 col-sm-4 offset-1 \">\n                        <div class=\"form-group \">\n                            <div class=\"input-group \">\n                                <br> Other Nearby Places\n                                <input type=\"text \" class=\"form-control \" formControlName=\"nearby_other\" required autocomplete=\"off \" [ngClass]=\"{ 'is-invalid': submitted && f.nearby_other.errors } \" />\n                                <div *ngIf=\"submitted && f.nearby_other.errors \" class=\"invalid-feedback \">\n                                    <div *ngIf=\"f.nearby_other.errors.required \">Other Nearby Places is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row \">\n                    <div class=\"col-md-4 col-sm-4 offset-1 \">\n                        <div class=\"form-group \">\n                            <div class=\"input-group \">\n                                <br> Comment\n                                <input type=\"text \" class=\"form-control \" formControlName=\"comment\" required autocomplete=\"off \" [ngClass]=\"{ 'is-invalid': submitted && f.comment.errors } \" />\n                                <div *ngIf=\"submitted && f.comment.errors \" class=\"invalid-feedback \">\n                                    <div *ngIf=\"f.comment.errors.required \">Comment is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"col-md-4 col-sm-4 offset-1 \">\n                        <div class=\"form-group \">\n                            <div class=\"input-group \">\n                                <br> Property Title\n                                <input type=\"text \" class=\"form-control \" formControlName=\"prop_title\" required autocomplete=\"off \" [ngClass]=\"{ 'is-invalid': submitted && f.prop_title.errors } \" />\n                                <div *ngIf=\"submitted && f.prop_title.errors \" class=\"invalid-feedback \">\n                                    <div *ngIf=\"f.prop_title.errors.required \">Property Title is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-4 col-sm-4 offset-1 \">\n                        <div class=\"form-group \">\n                            <div class=\"input-group \">\n                                <br> Video Link\n                                <input type=\"text \" class=\"form-control \" formControlName=\"video_link\" required autocomplete=\"off \" [ngClass]=\"{ 'is-invalid': submitted && f.video_link.errors } \" />\n                                <div *ngIf=\"submitted && f.video_link.errors \" class=\"invalid-feedback \">\n                                    <div *ngIf=\"f.video_link.errors.required \">Video Link is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-4 col-sm-4 offset-1 \">\n                        <div class=\"form-group \">\n                            <div class=\"input-group \">\n                                <br> 360° Link\n                                <input type=\"text \" class=\"form-control \" formControlName=\"link_360\" required autocomplete=\"off \" [ngClass]=\"{ 'is-invalid': submitted && f.link_360.errors } \" />\n                                <div *ngIf=\"submitted && f.link_360.errors \" class=\"invalid-feedback \">\n                                    <div *ngIf=\"f.link_360.errors.required \">360° Link is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row offset-1\">\n\n                    <h3><b>Post Property Images</b></h3>\n                </div>\n                <!-- <div class=\"row offset-1 \">\n                    <div class=\"form-group \">\n                        <label class=\"btn btn-primary \" for=\"file \">Get Images</label>\n                        <input class=\"btn btn-primary \" style=\"display: none \" type=\"file \" id=\"file \" (change)=\"handleFileInput($event.target.files) \">\n                        <button class=\"btn btn-primary \">Upload</button>\n                    </div>\n                </div> -->\n\n                <!-- Images upload portion -->\n                <div class=\"row offset-1\">\n\n                    <div class=\"form-group col-md-10 col-sm-10\">\n\n                        <img *ngFor='let url of urls' [src]=\"url\" height=\"200\"> <br/>\n                        <div class=\"upload-btn-wrapper\">\n                            <button class=\"btn\">    \n                        <i class=\"fa fa-camera\" aria-hidden=\"true\">&nbsp;</i>\n                        <span class=\"upload\">Upload</span>\n                        </button>\n                            <input type='file' class=\"fileField\" (change)=\"onSelectFile($event)\" multiple><br><br>\n                        </div>\n                    </div>\n\n                </div>\n\n                <!-- Complete form submission button -->\n                <div class=\"row\">\n                    <div class=\"col-md-12 col-sm-12 \">\n                        <br><br>\n                        <div class=\"form-group \" class=\"pull-right \">\n                            <button (click)=\"submitForm() \" class=\"btn btn-primary \">Post Ad</button>\n                            <br><br><br>\n\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { User } from './User';\nimport { FormGroup, FormBuilder, Validators, FormControl, FormArray, NgForm } from '@angular/forms'\nimport { from } from 'rxjs';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\n@Component({\n  selector: 'app-inventory',\n  templateUrl: './inventory.component.html',\n  styleUrls: ['./inventory.component.css']\n})\nexport class InventoryComponent implements OnInit {\n  user: any;\n  // user: User[];\n  constructor(\n    private authService: AuthenticationService) { }\n  search_id: string;\n  search_area: string;\n  general_search: string;\n  search_location: string;\n  search_type: string;\n  search_demand: string;\n\n  // user: any[] = [\n  //   { Id: '1', Location: 'House # 2, st#9', Area: '1.6 Kanal', Type: 'House', Demand: '17000000', Purpose: 'Sell', Beds: '0', Client: 'Sarmad Mursalin', Agent: 'Name:Nabeel Tariq' },\n  //   { Id: '2', Location: 'House # 3, st#9', Area: '2.6 Kanal', Type: 'Residential plot', Demand: '130000', Purpose: 'Sell', Beds: '0', Client: 'Name: Sarmad Mursalin\\nPhone:0900-78601', Agent: 'Name:Nabeel Tariq' },\n  //   { Id: '3', Location: 'House # 4, st#9', Area: '3.6 Kanal', Type: 'House', Demand: '1500000', Purpose: 'Sell', Beds: '0', Client: 'Name: Sarmad Mursalin\\nPhone:0900-78601', Agent: 'Name:Nabeel Tariq' },\n  //   { Id: '4', Location: 'House # 5, st#9', Area: '1.6 Kanal', Type: 'Apartment', Demand: '2000000', Purpose: 'Rent', Beds: '0', Client: 'Name: Sarmad Mursalin\\nPhone:0900-78601', Agent: 'Name:Nabeel Tariq' },\n  // ];\n  ngOnInit(): void {\n    this.getInventoryList();\n  }\n\n  getInventoryList() {\n    this.authService.getInventory().subscribe(\n      (data) => {\n        this.user = data.users;\n        console.log('Server response: ', data);\n      },\n      (err) => {\n        console.error(err);\n      }\n    );\n  }\n  // agentChange(e) {\n  //   // console.log(\"e\", this.dataToFilter);\n  //   this.Name = e;\n  //   // console.log(\"Name\", this.Name);\n  //   if (e) {\n  //     this.filteredData = this.dataToFilter.filter((d) => {\n  //       return d.user_id.user_id == e._id;\n  //     });\n  //     this.data = this.filteredData;\n  //   } else if (!e) {\n  //     this.data = this.dataToFilter;\n  //   }\n  // }\n\n  ////////// \n  myFunction() {\n    console.log('calling the function');\n    var input, filter, table, tr, td, i, txtValue;\n    input = document.getElementById(\"myInput\");\n    filter = input.value.toUpperCase();\n    table = document.getElementById(\"myTable\");\n    tr = table.getElementsByTagName(\"tr\");\n    for (i = 0; i < tr.length; i++) {\n      td = tr[i].getElementsByTagName(\"td\")[0];\n      if (td) {\n        txtValue = td.textContent || td.innerText;\n        if (txtValue.toUpperCase().indexOf(filter) > -1) {\n          tr[i].style.display = \"\";\n        } else {\n          tr[i].style.display = \"none\";\n        }\n      }\n    }\n    console.log('Ending the function');\n  }\n  // \n}\n","<div class=\"inventory\"><br>\n    <h1><b>&nbsp;&nbsp;&nbsp;&nbsp;Inventory Management</b></h1>\n    <br>\n    <div>\n        <button class=\"btn btn-primary rounded-pill\" routerLink=\"/add-inventories\">Add New</button>\n        <button class=\"btn btn-primary rounded-pill\">Filters</button>\n        <div class=\"dropdown\">\n            <button class=\"dropbtn\" class=\"btn btn-primary rounded-pill\">Select Agent</button>\n            <div class=\"dropdown-content\">\n                <a href=\"#\">Agent 1</a>\n                <a href=\"#\">Agent 2</a>\n                <a href=\"#\">Agent 3</a>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"pull-right\">\n        <div class=\"card-body row\">\n            <div class=\"col-auto\">\n                <i class=\"fa fa-search icon\"></i>\n            </div>\n            <!--end of col-->\n            <div class=\"col\">\n                <input class=\"form-control\" id=\"myInput\" type=\"text\" [(ngModel)]=\"general_search\"\n                    placeholder=\"Search topic or keyword\">\n            </div>\n\n            <button class=\"btn btn-primary rounded-pill\">Print</button>\n            <button class=\"btn btn-primary rounded-pill\">Excel</button>&nbsp;&nbsp;&nbsp;&nbsp;\n        </div>\n    </div>\n    <br><br><br>\n    <!-- Inventory management table is below -->\n\n    <table class=\"table table-hover\" class=\"table table-hover table-dark\">\n        <thead>\n            <th scope=\"col\">ID</th>\n            <th scope=\"col\">Location</th>\n            <th scope=\"col\">Area</th>\n            <th scope=\"col\">Type</th>\n            <th scope=\"col\">Demand</th>\n            <th scope=\"col\">Purpose</th>\n            <th scope=\"col\">Beds</th>\n            <th scope=\"col\">Client Details</th>\n            <th scope=\"col\">Agent Assigned</th>\n            <th scope=\"col\">Operations</th>\n        </thead>\n\n        <tbody>\n            <td>\n                <input class=\"form-control\" type=\"text\" [(ngModel)]=\"search_id\" placeholder=\"Search ID\">\n            </td>\n            <td>\n                <input class=\"form-control\" type=\"text\" [(ngModel)]=\"search_location\" placeholder=\"Search\">\n            </td>\n            <td>\n                <input class=\"form-control\" type=\"text\" [(ngModel)]=\"search_area\" placeholder=\"Search\">\n            </td>\n            <td>\n                <input class=\"form-control\" type=\"text\" [(ngModel)]=\"search_type\" placeholder=\"Search\">\n            </td>\n            <td>\n                <input class=\"form-control\" type=\"text\" [(ngModel)]=\"search_demand\" placeholder=\"Search\">\n            </td>\n            <td>\n                <input class=\"form-control\" type=\"text\" placeholder=\"\">\n            </td>\n            <td>\n                <input class=\"form-control\" type=\"text\" placeholder=\"\">\n            </td>\n            <td>\n                <input class=\"form-control\" type=\"text\" placeholder=\"\">\n            </td>\n            <td>\n                <input class=\"form-control\" type=\"text\" placeholder=\"\">\n            </td>\n            <td>\n                <i class=\"fa fa-search icon\"></i>\n            </td>\n            <tr\n                *ngFor=\"let user of user | tableFilter05: search_demand | tableFilter04: search_type | tableFilter03: search_area | tableFilter02: search_location | tableFilter: search_id | filter: general_search\">\n                <td>{{ user.Id }}</td>\n                <td>{{ user.Location }}</td>\n                <td>{{ user.Area }}</td>\n                <td>{{ user.Type }}</td>\n                <td>{{ user.Demand }}</td>\n                <td>{{ user.Purpose }}</td>\n                <td>{{ user.Beds }}</td>\n                <td>{{ user.Client}}</td>\n                <td>{{ user.Agent }}</td>\n                <td><i class=\"fa fa-edit icon\"></i><a role=\"button\">Edit</a>\n                    <a><i class=\"fa fa-trash icon\"></i></a></td>\n            </tr>\n        </tbody>\n\n    </table>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl, FormArray, NgForm } from '@angular/forms'\nimport { from } from 'rxjs';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { ToastrService } from \"ngx-toastr\";\n\n@Component({\n  selector: 'app-add-leads',\n  templateUrl: './add-leads.component.html',\n  styleUrls: ['./add-leads.component.css']\n})\nexport class AddLeadsComponent implements OnInit {\n  submitted = false;\n  user: any;\n  cartService: any;\n  addleadForm: FormGroup;\n\n  constructor(private formBuilder: FormBuilder,\n    private authService: AuthenticationService,\n    private router: Router,\n    private toastr: ToastrService) { }\n  formDeclare() {\n    this.addleadForm = this.formBuilder.group({\n      location: ['', Validators.required],\n      client: ['', Validators.required],\n      id: ['', Validators.required],\n      agent_status: ['', Validators.required],\n      admin_status: ['', Validators.required],\n      phone_no: ['', Validators.required],\n      added_on: ['', Validators.required],\n      area: ['', Validators.required],\n      type: ['', Validators.required],\n      purpose: ['', Validators.required],\n      prop_type: ['', Validators.required],\n      prop_no: ['', Validators.required],\n      demand: ['', Validators.required],\n      comment: ['', Validators.required],\n      assigned_to: ['', Validators.required]\n    });\n  }\n  // convenience getter for easy access to form fields\n  get f() { return this.addleadForm.controls; }\n  ngOnInit(): void {\n    this.formDeclare();\n  }\n  submitForm() {\n    this.submitted = true;    // stop here if form is invalid\n    if (this.addleadForm.invalid) {\n      this.toastr.error('Fields Empty', 'Error', {\n        timeOut: 5000\n      });\n      // console.log('Erroneous')\n      return;\n    }\n    this.addleadForm.reset();\n    this.toastr.success('Lead Added', 'Success', {\n      timeOut: 9000\n    });\n  }\n}\n","<div class=\" register\">\n    <div class=\"row\">\n        <div class=\"col-md-2 register-left\">\n            <img src=\"assets/icons/asasa.gif\" alt=\"\" />\n            <h2><b>Asasa Real Estate</b></h2>\n        </div>\n        <div class=\"col-md-10 col-sm-10 register-right\">\n            <form class=\"form-register\" [formGroup]=\"addleadForm\">\n                <h2 class=\"register-heading\">Add Lead</h2>\n                <div class=\"row register-form\">\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                ID\n                                <input type=\"number\" class=\"form-control\" formControlName=\"id\" required\n                                    autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.id.errors }\" />\n                                <div *ngIf=\"submitted && f.id.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.id.errors.required\">Id is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                Client\n                                <input type=\"text\" class=\"form-control\" formControlName=\"client\" required\n                                    autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.client.errors }\" />\n                                <div *ngIf=\"submitted && f.client.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.client.errors.required\">Client is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <br>\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                Type\n                                <input formControlName=\"type\" class=\"form-control\" type=\"text\" list=\"productName2\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.type.errors }\" />\n                                <div *ngIf=\"submitted && f.type.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.type.errors.required\">Type is required</div>\n                                </div>\n                                <datalist id=\"productName2\">\n                                    <option value=\"Buyer\">Buyer</option>\n                                    <option value=\"Seller\">Seller</option>\n                                    <option value=\"Else\">Else</option>\n                                </datalist>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <br>\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                Purpose\n                                <input formControlName=\"purpose\" class=\"form-control\" type=\"text\" list=\"productName3\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.purpose.errors }\" />\n                                <div *ngIf=\"submitted && f.purpose.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.purpose.errors.required\">Purpose is required</div>\n                                </div>\n                                <datalist id=\"productName3\">\n                                    <option value=\"Buy\">Buy</option>\n                                    <option value=\"Sale\">Sale</option>\n                                    <option value=\"Rent\">Rent</option>\n                                </datalist>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <br><br>\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                Property Type\n                                <input formControlName=\"prop_type\" class=\"form-control\" type=\"text\" list=\"productName4\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.prop_type.errors }\" />\n                                <div *ngIf=\"submitted && f.prop_type.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.prop_type.errors.required\">Property Type is required</div>\n                                </div>\n                                <datalist id=\"productName4\">\n                                    <option value=\"Apartment\">Apartment</option>\n                                    <option value=\"House\">House</option>\n                                    <option value=\"Residential Plot\">Residential Plot</option>\n                                </datalist>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <br><br>\n                                Property Number\n                                <input type=\"number\" class=\"form-control\" formControlName=\"prop_no\" required\n                                    autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.prop_no.errors }\" />\n                                <div *ngIf=\"submitted && f.prop_no.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.prop_no.errors.required\">Property Number is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <br><br>\n                                Area\n                                <input type=\"text\" class=\"form-control\" formControlName=\"area\" required\n                                    autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.area.errors }\" />\n                                <div *ngIf=\"submitted && f.area.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.area.errors.required\">Area is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <br><br>\n                                Location\n                                <input type=\"text\" class=\"form-control\" formControlName=\"location\" required\n                                    autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.location.errors }\" />\n                                <div *ngIf=\"submitted && f.location.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.location.errors.required\">Location is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <br>\n                                Demand\n                                <input type=\"number\" class=\"form-control\" formControlName=\"demand\" required\n                                    autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.demand.errors }\" />\n                                <div *ngIf=\"submitted && f.demand.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.demand.errors.required\">Demand is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <br>\n                                Phone number\n                                <input type=\"number\" class=\"form-control\" formControlName=\"phone_no\" required\n                                    autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.phone_no.errors }\" />\n                                <div *ngIf=\"submitted && f.phone_no.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.phone_no.errors.required\">Phone number is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <br><br>\n                                Comment\n                                <input type=\"text\" class=\"form-control\" formControlName=\"comment\" required\n                                    autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.comment.errors }\" />\n                                <div *ngIf=\"submitted && f.comment.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.comment.errors.required\">Comment is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <br><br>\n                                Assigned To\n                                <input type=\"text\" class=\"form-control\" formControlName=\"assigned_to\" required\n                                    autocomplete=\"off\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.assigned_to.errors }\" />\n                                <div *ngIf=\"submitted && f.assigned_to.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.assigned_to.errors.required\">Assigned To is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <br><br>\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                Admin Status\n                                <input formControlName=\"admin_status\" class=\"form-control\" type=\"text\"\n                                    list=\"productName\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.admin_status.errors }\" />\n                                <div *ngIf=\"submitted && f.admin_status.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.admin_status.errors.required\">Admin status is required</div>\n                                </div>\n                                <datalist id=\"productName\">\n                                    <option value=\"Pen\">Pen</option>\n                                    <option value=\"Pencil\">Pencil</option>\n                                    <option value=\"Paper\">Paper</option>\n                                </datalist>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <br><br>\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                Agent Status\n                                <input formControlName=\"agent_status\" class=\"form-control\" type=\"text\"\n                                    list=\"productName1\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.agent_status.errors }\" />\n                                <div *ngIf=\"submitted && f.agent_status.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.agent_status.errors.required\">Agent Status is required</div>\n                                </div>\n                                <datalist id=\"productName1\">\n                                    <option value=\"Pen\">Pen</option>\n                                    <option value=\"Pencil\">Pencil</option>\n                                    <option value=\"Paper\">Paper</option>\n                                </datalist>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <br><br>\n                                Added On\n                                <input type=\"text\" class=\"form-control\" formControlName=\"added_on\" required\n                                    autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.added_on.errors }\" />\n                                <div *ngIf=\"submitted && f.added_on.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.added_on.errors.required\">Added On is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-12 col-sm-12\">\n                        <br><br>\n                        <div class=\"form-group\" class=\"pull-right\">\n                            <button (click)=\"submitForm()\" class=\"btn btn-primary\">Add</button>\n\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-leads',\n  templateUrl: './leads.component.html',\n  styleUrls: ['./leads.component.css']\n})\nexport class LeadsComponent implements OnInit {\n\n\n  constructor() { }\n  search_id: string;\n  search_client: string;\n  general_search: string;\n  search_location: string;\n  search_type: string;\n  search_demand: string;\n  search_area: string;\n  users: any[] = [\n    { Id: '1', Client: 'Aftab Nabi', Type: 'Buyer', Purpose: 'Rent', Prop_type: 'Apartment', Prop_num: '5', Area: '0.5 Kanal', Location: 'E-11/4', Demand: '45,000', Phone_num: '090078601', Comment: 'Want 4 bed apartment', Assigned_to: 'Azhar adeel', Admin_status: 'Added', Agent_status: 'Assigned', Added_on: 'Aug,15,2020' },\n    { Id: '2', Client: 'Awais', Type: 'Buyer', Purpose: 'Rent', Prop_type: 'Apartment', Prop_num: '12', Area: '1 Kanal', Location: 'F-6/4', Demand: '450,000', Phone_num: '090078601', Comment: 'Want 4 bed ', Assigned_to: 'Afaq', Admin_status: 'Added', Agent_status: 'Assigned', Added_on: 'Aug,15,2020' },\n    { Id: '3', Client: 'Usama Gull', Type: 'Seller', Purpose: 'Buy', Prop_type: 'House', Prop_num: '14', Area: '2 Kanal', Location: 'G-15/2', Demand: '150,000', Phone_num: '090078601', Comment: 'Want 3 bed ', Assigned_to: 'Usama', Admin_status: 'Added', Agent_status: 'Assigned', Added_on: 'Aug,15,2020' },\n    { Id: '4', Client: 'Usman', Type: 'Buyer', Purpose: 'Rent', Prop_type: 'Residential Plot', Prop_num: '72', Area: '2 Kanal', Location: 'E-11/4', Demand: '45,000', Phone_num: '090078601', Comment: 'Want 1 bed ', Assigned_to: 'Nabeel', Admin_status: 'Added', Agent_status: 'Assigned', Added_on: 'Aug,15,2020' },\n    { Id: '5', Client: 'Zakria', Type: 'Seller', Purpose: 'Buy', Prop_type: 'Apartment', Prop_num: '5', Area: '0.5 Kanal', Location: 'E-11/4', Demand: '45,000', Phone_num: '090078601', Comment: 'Want 5 bed ', Assigned_to: 'Shaheer', Admin_status: 'Added', Agent_status: 'Assigned', Added_on: 'Aug,15,2020' },\n  ];\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"leads\">\n    <br>\n    <h1><b>&nbsp;&nbsp;&nbsp;&nbsp;Leads Management</b></h1>\n    <br>\n    <div>\n        <button class=\"btn btn-primary rounded-pill\" routerLink=\"/add-leads\">Add New</button>\n    </div>\n    <div class=\"pull-right\">\n        <!-- <input type=\"text\" placeholder=\"Search..\" name=\"search\">\n    <button type=\"submit\"><i class=\"fa fa-search\"></i></button> -->\n        <div class=\"card-body row\">\n            <div class=\"col-auto\">\n                <i class=\"fa fa-search icon\"></i>\n            </div>\n            <!--end of col-->\n            <div class=\"col\">\n                <input class=\"form-control\" id=\"myInput\" type=\"text\" [(ngModel)]=\"general_search\"\n                    placeholder=\"Search topic or keyword\">\n            </div>\n\n            <!-- <button class=\"btn btn-primary rounded-pill\" type=\"submit\">Search</button> -->\n\n            <button class=\"btn btn-primary rounded-pill\">Print</button>\n            <button class=\"btn btn-primary rounded-pill\">Excel</button>&nbsp;&nbsp;&nbsp;&nbsp;\n        </div>\n    </div>\n    <br><br><br>\n    <!-- Inventory management table is below -->\n    <table class=\"table table-hover\" class=\"table table-hover table-dark\">\n        <thead>\n            <tr>\n                <th scope=\"col\">ID</th>\n                <th scope=\"col\">Client</th>\n                <th scope=\"col\">Type</th>\n                <th scope=\"col\">Purpose</th>\n                <th scope=\"col\">Prop. Type</th>\n                <th scope=\"col\">Prop. #</th>\n                <th scope=\"col\">Area</th>\n                <th scope=\"col\">Location</th>\n                <th scope=\"col\">Demand</th>\n                <th scope=\"col\">Phone #</th>\n                <th scope=\"col\">Comment</th>\n                <th scope=\"col\">Assigned To</th>\n                <th scope=\"col\">Admin Status</th>\n                <th scope=\"col\">Agent Status</th>\n                <th scope=\"col\">Added On</th>\n                <th scope=\"col\">Operations</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr>\n                <td>\n                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"search_id\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"search_client\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"search_type\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"search_area\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"search_location\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"search_demand\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <i class=\"fa fa-search icon\"></i>\n                </td>\n            </tr>\n            <tr\n                *ngFor=\"let user of users | tableFilter06: search_client | tableFilter05: search_demand | tableFilter04: search_type | tableFilter03: search_area | tableFilter02: search_location | tableFilter: search_id | filter: general_search\">\n                <td>{{ user.Id }}</td>\n                <td>{{ user.Client }}</td>\n                <td>{{ user.Type }}</td>\n                <td>{{ user.Purpose }}</td>\n                <td>{{ user.Prop_type }}</td>\n                <td>{{ user.Prop_num }}</td>\n                <td>{{ user.Area}}</td>\n                <td>{{ user.Location }}</td>\n                <td>{{ user.Demand }}</td>\n                <td>{{ user.Phone_num }}</td>\n                <td>{{ user.Comment }}</td>\n                <td>{{ user.Assigned_to}}</td>\n                <td>{{ user.Admin_status }}</td>\n                <td>{{ user.Agent_status }}</td>\n                <td>{{ user.Added_on}}</td>\n                <td><i class=\"fa fa-edit icon\"></i><a role=\"button\">Edit</a>\n                    <a><i class=\"fa fa-trash icon\"></i></a></td>\n            </tr>\n        </tbody>\n    </table>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl, FormArray, NgForm } from '@angular/forms'\nimport { from } from 'rxjs';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { ToastrService } from \"ngx-toastr\";\n\n@Component({\n  selector: 'app-options',\n  templateUrl: './options.component.html',\n  styleUrls: ['./options.component.css']\n})\nexport class OptionsComponent implements OnInit {\n  submitted = false;\n  user: any;\n  cartService: any;\n  addoptionForm: FormGroup;\n\n  constructor(private formBuilder: FormBuilder,\n    private authService: AuthenticationService,\n    private router: Router,\n    private toastr: ToastrService) { }\n  formDeclare() {\n    this.addoptionForm = this.formBuilder.group({\n      add_newcity: ['', Validators.required],\n      added_cities: ['', Validators.required],\n      add_newloc: ['', Validators.required],\n      added_loc: ['', Validators.required],\n      enter_newloc: ['', Validators.required],\n      add_newtype: ['', Validators.required],\n      added_type: ['', Validators.required],\n      add_newstatus: ['', Validators.required],\n      added_status: ['', Validators.required]\n    });\n  }\n  // convenience getter for easy access to form fields\n  get f() { return this.addoptionForm.controls; }\n  ngOnInit(): void {\n    this.formDeclare();\n  }\n  submitForm() {\n    this.submitted = true;    // stop here if form is invalid\n    if (this.addoptionForm.invalid) {\n      this.toastr.error('Fields Empty', 'Error', {\n        timeOut: 5000\n      });\n      console.log('Erroneous')\n      return;\n    }\n    this.addoptionForm.reset();\n    this.toastr.success('Lead Added', 'Success', {\n      timeOut: 9000\n    });\n  }\n}\n","<div class=\" register\">\n    <div class=\"row\">\n        <div class=\"col-md-2 register-left\">\n            <img src=\"assets/icons/asasa.gif\" alt=\"\" />\n            <h2><b>Asasa Real Estate</b></h2>\n        </div>\n        <div class=\"col-md-10 col-sm-10 register-right\">\n            <form class=\"form-register\" [formGroup]=\"addoptionForm\">\n                <h2 class=\"register-heading\">Cities</h2>\n                <div class=\"row register-form\">\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                Add New City\n                                <input type=\"text\" class=\"form-control\" formControlName=\"add_newcity\" required\n                                    autocomplete=\"off\" />\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                Added Cities\n                                <input type=\"text\" class=\"form-control\" formControlName=\"added_cities\"\n                                    list=\"productName\" />\n                                <datalist id=\"productName\">\n                                    <option value=\"Pen\">Pen</option>\n                                    <option value=\"Pencil\">Pencil</option>\n                                    <option value=\"Paper\">Paper</option>\n                                </datalist>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <br><br>\n                        <div class=\"form-group\" class=\"pull-left\">\n                            <button type=\"submit\" class=\"btn btn-primary\">Add City</button>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <br><br>\n                        <div class=\"form-group\" class=\"pull-right\">\n                            <button type=\"submit\" class=\"btn btn-primary\">Edit</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <button type=\"submit\" class=\"btn btn-danger\">Delete</button>\n                        </div>\n                    </div>\n                </div>\n\n                <!-- Locations -->\n\n                <h2 class=\"register-heading\">Locations</h2>\n                <div class=\"row register-form\">\n                    <div class=\"col-md-6 col-sm-6\">\n                        <h3>Add New Location</h3>\n                        <div class=\"form-group\">\n                            <div class=\"input-group\"><br>\n                                Select City\n                                <input type=\"text\" class=\"form-control\" formControlName=\"add_newloc\"\n                                    list=\"productName\" />\n                                <datalist id=\"productName\">\n                                    <option value=\"Pen\">Pen</option>\n                                    <option value=\"Pencil\">Pencil</option>\n                                    <option value=\"Paper\">Paper</option>\n                                </datalist>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <h3>Added Locations</h3>\n                        <div class=\"form-group\">\n                            <div class=\"input-group\"><br>\n                                Select City\n                                <input type=\"text\" class=\"form-control\" formControlName=\"added_loc\"\n                                    list=\"productName\" />\n                                <datalist id=\"productName\">\n                                    <option value=\"Pen\">Pen</option>\n                                    <option value=\"Pencil\">Pencil</option>\n                                    <option value=\"Paper\">Paper</option>\n                                </datalist>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <br>\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                Enter New Location\n                                <input type=\"text\" class=\"form-control\" formControlName=\"enter_newloc\" required\n                                    autocomplete=\"off\" />\n                            </div>\n                        </div>\n                    </div>\n\n                    <!-- Right side column -->\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <br>\n                                Select Location\n                                <input type=\"text\" class=\"form-control\" list=\"productName\" />\n                                <datalist id=\"productName\">\n                                    <option value=\"Pen\">Pen</option>\n                                    <option value=\"Pencil\">Pencil</option>\n                                    <option value=\"Paper\">Paper</option>\n                                </datalist>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- Left side column -->\n                    <div class=\"col-md-6 col-sm-6\">\n                        <br>\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                Select Added Locations\n                                <input type=\"text\" class=\"form-control\" list=\"productName\" />\n                                <datalist id=\"productName\">\n                                    <option value=\"Pen\">Pen</option>\n                                    <option value=\"Pencil\">Pencil</option>\n                                    <option value=\"Paper\">Paper</option>\n                                </datalist>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-12 col-sm-12\">\n                        <br><br>\n                        <div class=\"form-group\" class=\"pull-left\">\n                            <button type=\"submit\" class=\"btn btn-primary\">Add Location</button>\n\n                        </div>\n                        <div class=\"form-group\" class=\"pull-right\">\n                            <button type=\"submit\" class=\"btn btn-primary\">Edit</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <button type=\"submit\" class=\"btn btn-danger\">Delete</button>\n                        </div>\n                    </div>\n                </div>\n\n                <!-- Property Types -->\n\n                <h2 class=\"register-heading\">Property Types</h2>\n                <div class=\"row register-form\">\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                Add New Type\n                                <input type=\"text\" class=\"form-control\" formControlName=\"add_newtype\" required\n                                    autocomplete=\"off\" />\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                Added Types\n                                <input type=\"text\" class=\"form-control\" formControlName=\"added_type\"\n                                    list=\"productName\" />\n                                <datalist id=\"productName\">\n                                    <option value=\"Pen\">Pen</option>\n                                    <option value=\"Pencil\">Pencil</option>\n                                    <option value=\"Paper\">Paper</option>\n                                </datalist>\n                            </div>\n                        </div>\n                        <br><br>\n                    </div>\n                    <div class=\"col-md-12 col-sm-12\">\n                        <div class=\"form-group\" class=\"pull-left\">\n                            <button type=\"submit\" class=\"btn btn-primary\">Add Property Type</button>\n\n                        </div>\n                        <div class=\"form-group\" class=\"pull-right\">\n                            <button type=\"submit\" class=\"btn btn-primary\">Edit</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <button type=\"submit\" class=\"btn btn-danger\">Delete</button>\n\n                        </div>\n                    </div>\n                </div>\n\n                <!-- Status Types -->\n\n                <h2 class=\"register-heading\">Status Types</h2>\n                <div class=\"row register-form\">\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                Add New Status\n                                <input type=\"text\" class=\"form-control\" formControlName=\"add_newstatus\" required\n                                    autocomplete=\"off\" />\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                Added Status\n                                <input type=\"text\" class=\"form-control\" formControlName=\"added_status\"\n                                    list=\"productName\" />\n                                <datalist id=\"productName\">\n                                    <option value=\"Pen\">Pen</option>\n                                    <option value=\"Pencil\">Pencil</option>\n                                    <option value=\"Paper\">Paper</option>\n                                </datalist>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"col-md-12 col-sm-12\"><br><br>\n                        <div class=\"form-group\" class=\"pull-left\">\n                            <button type=\"submit\" class=\"btn btn-primary\">Add Status Type</button>\n\n                        </div>\n                        <div class=\"form-group\" class=\"pull-right\">\n                            <button type=\"submit\" class=\"btn btn-primary\">Edit</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <button type=\"submit\" class=\"btn btn-danger\">Delete</button>\n\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  email: string;\n  url: string | ArrayBuffer;\n  constructor(public router: Router, private route: ActivatedRoute) { }\n  // username:string;\n  username = this.router.url;\n  ngOnInit(): void {\n    this.route.params.subscribe(param => {\n      this.email = param.email;\n      console.log(this.email);\n    });\n  }\n  onSelectFile(event) {\n    if (event.target.files && event.target.files[0]) {\n      var reader = new FileReader();\n\n      reader.readAsDataURL(event.target.files[0]); // read file as data url\n\n      reader.onload = (event) => { // called once readAsDataURL is completed\n        this.url = event.target.result;\n      }\n    }\n  }\n\n}\n","<!-- <link href=\"//netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\n<script src=\"//netdna.bootstrapcdn.com/bootstrap/3.0.0/js/bootstrap.min.js\"></script>\n<script src=\"//code.jquery.com/jquery-1.11.1.min.js\"></script> -->\n<!------ Include the above in your HEAD tag ---------->\n\n<div class=\"profile-page\">\n    <div class=\"page-header\" data-parallax=\"true\">\n    </div>\n    <div class=\"main main-raised\">\n        <div class=\"row offset-1\">\n\n        </div>\n        <div class=\"row\">\n            <div class=\"col-md-6 ml-auto mr-auto\">\n                <div class=\"profile\">\n                    <div class=\"avatar\">\n                        <img [src]=\"url ? url : 'https://www.pngitem.com/pimgs/m/146-1468465_early-signs-of-conception-user-profile-icon-hd.png'\">\n                        <!-- <img src=\"https://www.pngitem.com/pimgs/m/146-1468465_early-signs-of-conception-user-profile-icon-hd.png\"> -->\n                    </div>\n\n                    <img *ngFor='let url of url' [src]=\"url\" height=\"200\">\n                    <div class=\"upload-btn-wrapper\">\n                        <button class=\"btn\">    \n                <i class=\"fa fa-camera\" aria-hidden=\"true\">&nbsp;</i>\n                <span class=\"upload\"><b>Upload</b></span>\n                </button>\n                        <input type='file' class=\"fileField\" (change)=\"onSelectFile($event)\" multiple><br><br>\n                    </div>\n                    <div class=\"name\">\n                        <h3 class=\"title\">{{email}}</h3>\n                        <br><br>\n                        <h3><b>Admin</b></h3>\n                        <p> <i class=\"fa fa-user icon\"></i> mzmarwat@gmail.com</p>\n                        <!-- <br /> -->\n                        <p><i class=\"fa fa-phone icon\"></i><i> +92311-2233656</i></p>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"description text-center\">\n            <p>What do real estate agents do? A real estate agent helps his or her clients purchase, or sell properties. They advise clients about market conditions, conduct walkthroughs, and provide guidance and assistance through the process of buying,\n                selling, or leasing properties. </p>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-md-6 ml-auto mr-auto\">\n\n            </div>\n        </div>\n\n        <div class=\"tab-content tab-space\">\n            <div class=\"tab-pane active text-center gallery\" id=\"studio\">\n                <div class=\"row\">\n                    <div class=\"col-md-3 ml-auto\">\n                        <img src=\"https://images.pexels.com/photos/106399/pexels-photo-106399.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\" class=\"rounded\">\n                        <img src=\"https://media.istockphoto.com/photos/buy-house-real-estate-concept-different-offers-of-property-online-picture-id1061234002?k=6&m=1061234002&s=612x612&w=0&h=5A53ZpXr239aXrdeIFH7J5w3cD2FTBG6T7H4ZVuGspw=\" class=\"rounded\">\n                    </div>\n                    <div class=\"col-md-3 mr-auto\">\n                        <img src=\"https://wallpaperaccess.com/full/1899388.jpg\" class=\"rounded\">\n                        <img src=\"https://www.pngmart.com/files/7/Real-Estate-PNG-HD.png\" class=\"rounded\">\n                    </div>\n                </div>\n            </div>\n\n        </div>\n\n    </div>\n</div>","\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl, FormArray, NgForm } from '@angular/forms'\nimport { from } from 'rxjs';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { ToastrService } from \"ngx-toastr\";\n\n@Component({\n  selector: 'app-add-users',\n  templateUrl: './add-users.component.html',\n  styleUrls: ['./add-users.component.css']\n})\nexport class AddUsersComponent implements OnInit {\n  submitted = false;\n  user: any;\n  cartService: any;\n  adduserForm: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthenticationService,\n    private router: Router,\n    private toastr: ToastrService) {\n  }\n\n  formDeclare() {\n    this.adduserForm = this.formBuilder.group({\n      location: ['', Validators.required],\n      email: ['', Validators.required],\n      userId: ['', Validators.required],\n      status: ['', Validators.required],\n      fullname: ['', Validators.required],\n      contact: ['', Validators.required],\n      access: ['', Validators.required],\n    });\n  }\n  // convenience getter for easy access to form fields\n  get f() { return this.adduserForm.controls; }\n  ngOnInit(): void {\n    this.formDeclare();\n  }\n  createUser() {\n    this.authService.createUsers(this.adduserForm).subscribe((res) => {\n      console.log('Subscribed data: ', res);\n    });\n  }\n  submitForm() {\n    this.submitted = true;    // stop here if form is invalid\n    if (this.adduserForm.invalid) {\n      this.toastr.error('Fields Empty', 'Error', {\n        timeOut: 5000\n      });\n      // console.log('Erroneous')\n      return;\n    }\n    else {\n      console.log('calling the service: ', this.adduserForm.value);\n      this.authService.createUsers(this.adduserForm.value).subscribe((res) => {\n        this.adduserForm.reset();\n        this.toastr.success('User Added', 'Success', {\n          timeOut: 9000\n        });\n        console.log('Subscribed data: ', res);\n      });\n    }\n\n  }\n}","<div class=\" register\">\n    <div class=\"row\">\n        <div class=\"col-md-2 register-left\">\n            <img src=\"assets/icons/asasa.gif\" alt=\"\" />\n            <h2><b>Asasa Real Estate</b></h2>\n        </div>\n        <div class=\"col-md-10 col-sm-10 register-right\">\n            <form class=\"form-register\" [formGroup]=\"adduserForm\">\n                <h2 class=\"register-heading\">Add User</h2>\n                <div class=\"row register-form\">\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <!-- <br><br> -->\n                                User ID\n                                <input type=\"number\" class=\"form-control\" formControlName=\"userId\" id=\"userId\" required\n                                    autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.userId.errors }\" />\n                                <!-- <label for=\"nme\"><span>Enter ID</span></label> -->\n                                <div *ngIf=\"submitted && f.userId.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.userId.errors.required\">Id is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n\n                                Full Name\n                                <input type=\"text\" class=\"form-control\" formControlName=\"fullname\" id=\"fullname\"\n                                    required autocomplete=\"off\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.fullname.errors }\" />\n                                <!-- <label for=\"nme\"><span>Enter Full Name</span></label> -->\n                                <div *ngIf=\"submitted && f.fullname.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.fullname.errors.required\">Name is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <br>\n                                Contact #\n                                <input type=\"number\" class=\"form-control\" formControlName=\"contact\" id=\"contact\"\n                                    required autocomplete=\"off\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.contact.errors }\" />\n                                <div *ngIf=\"submitted && f.contact.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.contact.errors.required\">Contact is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <br>\n                                Location\n                                <input type=\"text\" class=\"form-control\" formControlName=\"location\" required\n                                    autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.location.errors }\" />\n                                <div *ngIf=\"submitted && f.location.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.location.errors.required\">Location is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <br><br>\n                                Email Address\n                                <input type=\"email\" class=\"form-control\" formControlName=\"email\" required\n                                    autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\n                                <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- Right side column -->\n                    <div class=\"col-md-6 col-sm-6\">\n                        <!-- <br> -->\n                        <br><br>\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                Access\n                                <input formControlName=\"access\" class=\"form-control\" type=\"text\" list=\"productName\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.access.errors }\" />\n                                <div *ngIf=\"submitted && f.access.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.access.errors.required\">Access is required</div>\n                                </div>\n                                <datalist id=\"productName\">\n                                    <option value=\"Pen\">Pen</option>\n                                    <option value=\"Pencil\">Pencil</option>\n                                    <option value=\"Paper\">Paper</option>\n                                </datalist>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <br><br>\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                Status\n                                <input formControlName=\"status\" class=\"form-control\" type=\"text\" list=\"productName1\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.status.errors }\" />\n                                <div *ngIf=\"submitted && f.status.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.status.errors.required\">Status is required</div>\n                                </div>\n                                <datalist id=\"productName1\">\n                                    <option value=\"Pen\">Pen</option>\n                                    <option value=\"Pencil\">Pencil</option>\n                                    <option value=\"Paper\">Paper</option>\n                                </datalist>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-12 col-sm-12\">\n                        <br><br>\n                        <div class=\"form-group\" class=\"pull-right\">\n                            <button (click)=\"submitForm()\" class=\"btn btn-primary\">Add</button>\n\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl, FormArray, NgForm } from '@angular/forms'\nimport { from } from 'rxjs';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n\n  general_search: string;\n  data: any;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthenticationService,\n    private router: Router) { }\n  user: any;\n  ngOnInit(): void {\n    this.getUserList();\n  }\n  getUserList() {\n    this.authService.getUsers().subscribe(\n      (data) => {\n        this.data = data.users;\n      },\n      (err) => {\n        console.error(err);\n      }\n    );\n  }\n\n}\n","<div class=\"users\">\n    <br>\n    <h1><b>&nbsp;&nbsp;&nbsp;&nbsp;Users</b></h1>\n    <br>\n    <div>\n        <button class=\"btn btn-primary rounded-pill\" routerLink=\"/add-users\">Add New</button>\n    </div>\n    <div class=\"pull-right\">\n        <div class=\"card-body row\">\n            <div class=\"col-auto\">\n                <i class=\"fa fa-search icon\"></i>\n            </div>\n            <div class=\"col\">\n                <input class=\"form-control\" type=\"search\" [(ngModel)]=\"general_search\" placeholder=\"Search topics or keywords\">\n            </div>\n        </div>\n    </div>\n    <br><br><br>\n    <!-- Inventory management table is below -->\n    <table class=\"table table-hover\" class=\"table table-hover table-dark\">\n        <thead>\n            <tr>\n                <th scope=\"col\">User ID</th>\n                <th scope=\"col\">Full Name</th>\n                <th scope=\"col\">Contact #</th>\n                <th scope=\"col\">Location</th>\n                <th scope=\"col\">Email Address</th>\n                <th scope=\"col\">Access</th>\n                <th scope=\"col\">Status</th>\n                <th scope=\"col\">Operations</th>\n            </tr>\n        </thead>\n\n        <tbody *ngIf=\"data\">\n            <td>\n                <input class=\"form-control\" type=\"text\" [(ngModel)]=\"data.userId\" placeholder=\"Search\">\n            </td>\n            <td>\n                <input class=\"form-control\" type=\"text\" [(ngModel)]=\"data.fullname\" placeholder=\"Search\">\n            </td>\n            <td>\n                <input class=\"form-control\" type=\"text\" [(ngModel)]=\"data.contact\" placeholder=\"Search\">\n            </td>\n            <td>\n                <input class=\"form-control\" type=\"text\" [(ngModel)]=\"data.location\" placeholder=\"Search\">\n            </td>\n            <td>\n                <input class=\"form-control\" type=\"text\" placeholder=\"\">\n            </td>\n            <td>\n                <input class=\"form-control\" type=\"text\" placeholder=\"\">\n            </td>\n            <td>\n                <input class=\"form-control\" type=\"text\" placeholder=\"\">\n            </td>\n            <td>\n                <i class=\"fa fa-search icon\"></i>\n            </td>\n            <tr *ngFor=\"let user of data | tableFilter06: data.fullname | tableFilter04: data.contact | tableFilter02: data.location | tableFilter: data.userId | filter: general_search\">\n                <td>{{ user?.userId }}</td>\n                <td>{{ user.fullname |titlecase}}</td>\n                <td>{{ user.contact }}</td>\n                <td>{{ user.location | titlecase}}</td>\n                <td>{{ user.email }}</td>\n                <td>{{user.access | titlecase}}</td>\n                <td>{{user.status | titlecase}}</td>\n                <td><i class=\"fa fa-edit icon\"></i><a role=\"button\">Edit</a>\n                    <a><i class=\"fa fa-trash icon\"></i></a></td>\n            </tr>\n        </tbody>\n    </table>\n    <!-- end of table -->\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Component({\n  selector: 'app-forgetpass',\n  templateUrl: './forgetpass.component.html',\n  styleUrls: ['./forgetpass.component.css']\n})\nexport class ForgetpassComponent implements OnInit {\n  forgetPassForm: FormGroup;\n  submitted = false;\n  constructor(\n    private authServ: AuthenticationService,\n    public formBuilder: FormBuilder,\n    public router: Router) { }\n\n  ngOnInit(): void {\n    this.forgetPassForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email, Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')]]\n    });\n  }\n  get f() { return this.forgetPassForm.controls; }\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.forgetPassForm.invalid) {\n      return;\n    }\n    console.log(\"Sending this email: \" + this.forgetPassForm.value.email);\n    const body = {\n      email: this.forgetPassForm.value.email\n    }\n    this.authServ.verifyEmail(body).subscribe(data => {\n      console.log(data);\n      const status = data.success;\n      const msg = data.status;\n      const email = this.forgetPassForm.value.email;\n      if (status) {\n        alert(msg)\n\n        this.router.navigate(['forgetpassverify-component', email]);\n      }\n      else\n      {\n        alert(msg);\n      }\n    });\n\n\n  }\n}\n","<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n<link href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\n<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n\n\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-5 col-md-5 left\">\n            <div>\n\n                <img class=\"left-img\" src=\"assets/icons/asasa.gif\" />\n            </div>\n        </div>\n\n        <div class=\"col-1 v2\">\n            <div class=\"vl\"></div>\n            Forget password\n            <div class=\"vl\"></div>\n        </div>\n\n        <div class=\"col-sm-6 col-md-6 right\">\n            <h2>Welcome to my asasa</h2>\n            <form class=\"form-register\" [formGroup]=\"forgetPassForm\" (ngSubmit)=\"onSubmit()\">\n                <div class=\"form-group\" class='input-container'>\n                    <div class=\"input-group\">\n                        <i class=\"fa fa-user icon\"></i>\n                        <input class=\"form-control\" class=\"input-field\"\n                            [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" id=\"inputEmail\" type=\"text\"\n                            name=\"email\" formControlName=\"email\" placeholder=\"Email address\" required=\"\" autofocus=\"\"\n                            class=\"form-control rounded-pill border-0 shadow-sm px-4\">\n                        <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                            <div *ngIf=\"f.email.errors.email\">Email must be a valid email address\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <!-- <div class=\"custom-control custom-checkbox mb-3\"> -->\n                <input id=\"customCheck1\" type=\"checkbox\" checked class=\"custom-control-input\">\n                <div class=\"form-group\">\n                    <button type=\"submit\" class=\"btn btn-info rounded-pill\">Get Code</button>\n                </div>\n                <button class=\"btn btn-info rounded-pill\" routerLink=\"/login-component\">Back</button>\n                <!-- </div> -->\n\n            </form>\n        </div>\n\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Component({\n  selector: 'app-forgetpassverify',\n  templateUrl: './forgetpassverify.component.html',\n  styleUrls: ['./forgetpassverify.component.css']\n})\nexport class ForgetpassverifyComponent implements OnInit {\n\n  submitted = false;\n  email: string;\n  forgetpassForm: FormGroup;\n  constructor(\n    private authServ: AuthenticationService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(param => {\n      this.email = param.email;\n      // console.log(this.email);\n    });\n    this.initialize();\n  }\n  initialize() {\n    this.forgetpassForm = this.formBuilder.group({\n      code: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(6), Validators.pattern('^[0-9]+$')]]\n    });\n  }\n  get f() { return this.forgetpassForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.forgetpassForm.invalid) {\n      return;\n    }\n    const user = {\n      email: this.email,\n      otpcode: this.forgetpassForm.value.code\n    };\n\n    // this.authServ.verifyOTPEmail(user).subscribe(data => {\n    //   console.log(data);\n    // });\n    this.authServ.verifyOTPCode(user).subscribe(data => {\n      console.log(data);\n      const status = data.success;\n      const msg = data.status;\n      if (status) {\n\n        alert(msg)\n        this.router.navigate(['newpass-component', this.email]);\n      } else {\n        alert(msg);\n      }\n    });\n  }\n\n}\n","<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n<link href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\n<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n\n\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-5 col-md-5 left\">\n            <div>\n\n                <img class=\"left-img\" src=\"assets/icons/asasa.gif\" />\n            </div>\n        </div>\n\n        <div class=\"col-1 v2\">\n            <div class=\"vl\"></div>\n            Verification\n            <div class=\"vl\"></div>\n        </div>\n\n        <div class=\"col-sm-6 col-md-6 right\">\n            <h2>Welcome to my asasa</h2>\n\n            <form class=\"form-register\" [formGroup]=\"forgetpassForm\" (ngSubmit)=\"onSubmit()\">\n\t\t\t\t<div class=\"form-group\">\n                <div class=\"input-group\">\n                    <i class=\"fa fa-user icon\"></i>\n                    <input type=\"text\" class=\"form-control inputs\" formControlName=\"code\" name=\"code\" id=\"code\"  \n                        placeholder=\"Enter 6-digit verify code\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.code.errors }\">\n                    <div *ngIf=\"submitted && f.code.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.code.errors.required\">Code is required</div>\n                        <div *ngIf=\"f.code.errors.minlength\">Code must be at least 6 characters</div>\n                        <div *ngIf=\"f.code.errors.maxlength\">Code should not be greater than 6 characters</div>\n                        <div *ngIf=\"f.code.errors.pattern\">Code must be a valid number sequence</div>\n                    </div>\n                </div>\n                </div>\n                <!-- <input id=\"customCheck1\" type=\"checkbox\" checked class=\"custom-control-input\"> -->\n                <div class=\"form-group\">\n\t\t\t\t\t<button type=\"submit\" class='btn'\n\t\t\t\t\t\tclass=\"btn btn-primary rounded-pill\">Verify</button>\n\t\t\t\t</div>\n                <button class=\"btn btn-primary rounded-pill\" routerLink=\"/forgetpass-component\">back</button>\n                <!-- <div class=\"form-group\">\n                    <button class=\"btn btn-primary\" routerLink=\"/newpass-component\">Verify</button>\n                </div>\n                <button class=\"btn1 btn-primary\" routerLink=\"/forgetpass-component\">back</button> -->\n\n                <!-- </div> -->\n            </form>\n        </div>\n    </div>\n\n</div>","\nimport { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from \"../services/authentication.service\";\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup; // Instance of Form group that will get form data from user end (i.e; login.html)\n  // registerForm: FormGroup;\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n  mobileView: boolean;\n  username: string;\n  email: string;\n  constructor(\n    public formBuilder: FormBuilder, // Creating an instance of Formbuilder\n    public authService: AuthenticationService, // Instance of Authentication services created in front end\n    public router: Router,\n    private route: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n    this.initialize();\n  }\n  initialize() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email, Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n\n    this.route.params.subscribe(param => {\n      this.email = param.email;\n      // console.log(this.email);\n    });\n    if (window.innerWidth < 600) {\n      this.mobileView = true;\n\n    } else if (window.innerWidth > 600) {\n      this.mobileView = false;\n    }\n  }\n  // get email() {\n  //   return this.loginForm.get('email')\n  // }\n  loginUser() {\n    this.submitted = true;\n    if (this.loginForm.invalid) {\n      return;\n    }\n    console.log('user login data: ', this.loginForm.value);\n    this.authService.login(this.loginForm.value).subscribe(data => {\n\n      console.log(\"Subscribed Data: \", data);\n      const success = data.success;\n      const status = data.status;\n      // const msg: string = data.msg;\n      console.log(\"Status: \" + status);\n      console.log(\"Success: \" + success);\n      const email = this.loginForm.value.email;\n      // const email = this.email;\n      if (success) {\n\n        console.log(this.email);\n        console.log(email);\n        alert('SUCCESS!! :-)')\n        this.router.navigate(['profile', email]);\n      } else {\n        alert('Invalid email or password!');\n        // this.router.navigate(['profile', email]);\n      }\n    });\n  }\n  // getting input labels values from user end (login.html)\n  get f() { return this.loginForm.controls; }\n}","<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js\"></script>\n\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n<link href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\n<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n -->\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-5 col-md-5 left\">\n            <div>\n                <img class=\"left-img\" src=\"assets/icons/asasa.gif\" />\n            </div>\n        </div>\n        <div class=\"col-1 v2 \" *ngIf=\"mobileView ==false\">\n            <div class=\"vl\"></div>\n            Log - in\n            <div class=\"vl\"></div>\n        </div>\n        <div class=\"col-sm-6 col-md-6 right\">\n            <h2 class=\"text-center\">Welcome to my asasa</h2>\n            <form class=\"form-register\" [formGroup]=\"loginForm\" (ngSubmit)=\"loginUser()\">\n                <div class=\"form-group\" class='input-container'>\n                    <div class=\"input-group\">\n                        <i class=\"fa fa-user icon\"></i>\n                        <input class=\"form-control\" class=\"input-field\"\n                            [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" type=\"email\" name=\"email\"\n                            formControlName=\"email\" placeholder=\"Email address\" required=\"\" autofocus=\"\"\n                            class=\"form-control rounded-pill border-0 shadow-sm px-4\">\n                        <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                            <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <div class=\"input-group\">\n                        <i class=\"fa fa-lock icon\"></i>\n                        <input class=\"input-field\" type=\"password\" formControlName=\"password\" placeholder=\"Password\"\n                            required=\"\" class=\"form-control rounded-pill border-0 shadow-sm px-4 text-primary\"\n                            [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\">\n                        <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                            <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6\n                                characters\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <br>\n                    <button type=\"submit\" class=\"btn btn-info rounded-pill\">\n                        <!-- [disabled]=\"!loginForm.valid\"> -->\n                        Login</button>\n                </div>\n                <div class=\"custom-control custom-checkbox mb-3\">\n                    <!-- <input id=\"customCheck1\" type=\"checkbox\" checked class=\"custom-control-input\"> -->\n                    <!-- <label for=\"customCheck1\" class=\"custom-control-label\">Remember password</label> -->\n                    <a routerLink=\"/forgetpass-component\"> <b>Forget Password</b></a>\n                    <br>\n                    Not Registered?\n                    <a routerLink=\"/signup-component\"> <b>Sign up!</b></a>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport * as mapboxgl from 'mapbox-gl';\nimport { MapserviceService } from \"../services/mapservice.service\";\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.css']\n})\nexport class MapComponent implements OnInit {\n  opacity = 1;\n  map: mapboxgl.Map;\n  style = 'mapbox://styles/mapbox/streets-v11';\n  lat = 33.628463;\n  lng = 73.087581;\n geojson = {\n    type: 'FeatureCollection',\n    features: [\n      {\n        type: 'Feature',\n        properties: {\n          message: 'Foo',\n          iconSize: [24, 24],\n        },\n        geometry: {\n          type: 'Point',\n          coordinates: { lat: 62.324462890625, lng: 33.024695711685304 },\n        },\n      },\n      {\n        type: 'Feature',\n        properties: {\n          message: 'Bar',\n          iconSize: [24, 24],\n        },\n        geometry: {\n          type: 'Point',\n          coordinates: { lat: 73.2158203125, lng: 33.97189158092897 },\n        },\n      },\n      {\n        type: 'Feature',\n        properties: {\n          message: 'Baz',\n          iconSize: [24, 24],\n        },\n        geometry: {\n          type: 'Point',\n          coordinates: { lat: 51.29223632812499, lng: 34.28151823530889 },\n        },\n      },\n    ],\n  };\n\n  mapArray = [\n    {\n      lat: 72.99641,\n      lng: 33.645992,\n      tag: 'Islamabad',\n      size: [51, 22],\n    },\n    {\n      lat: 73.0169,\n      lng: 33.5651,\n      tag: 'Rawalpindi',\n      size: [51, 22],\n    },\n    {\n      lat: 71.5249,\n      lng: 34.0151,\n      tag: 'Peshawar',\n      size: [51, 22],\n    },\n    {\n      lat: 67.0011,\n      lng: 24.8607,\n      tag: 'Karachi',\n      size: [51, 22],\n    },\n  ];\n  constructor(private mapservice: MapserviceService) { }\n\n  ngOnInit() {\n    this.initializemapbox();\n\n    ///////////////// This is the data coming from url into our frontend map //////////////////////\n    \n    // this.mapservice.readData()\n    // .subscribe\n    // (data=> {\n    //     data.property.forEach(( data ) => {\n    //       // create a DOM element for the marker\n    //       const el = document.createElement('div');\n    //       el.className = 'data';\n    //       el.style.backgroundImage = 'url(/assets/asasamarker.png)';\n    //       el.innerHTML = data.demand;\n    //       el.style.fontStyle = 'bold';\n    //       el.style.textAlign = 'center';\n    //       el.style.color = 'white';\n    //       el.style.width = '51px';\n    //       el.style.height = '22px';\n    //       el.style.fontSize = '10px';\n    //       el.style.fontWeight = '700';\n    //       el.style.fontFamily = 'Jersey M54';\n    //       // el.style.fontSizeAdjust = '5px';\n    //       new mapboxgl.Marker(el)\n    //         .setLngLat([\n    //           data.location_data.marker_data.mlongitude,\n    //           data.location_data.marker_data.mlatitide\n    //         ])\n    //         //.setPopup(new mapboxgl.Popup().setHTML(data.tag))\n    //         .addTo(this.map);\n    //     });\n    \n    // })\n\n  }\n  initializemapbox() {\n    this.map = new mapboxgl.Map({\n      accessToken:\n        'pk.eyJ1IjoibmFiZWVsc2FsZWVtIiwiYSI6ImNrY3p4MWhrZzBiNWwyd3FtOGx3aTZsbjEifQ.z6RLknl-YnJe2eKqMjPElg',\n      container: 'map',\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [73.024955 , 33.650753], // starting position [lng, lat]\n      zoom: 10, // starting zoom\n    });\n    this.mapArray.forEach((marker) => {\n      // create a DOM element for the marker\n      const el = document.createElement('div');\n      el.className = 'marker';\n      el.style.backgroundImage = 'url(/assets/icons/asasamarker.png)';\n      el.innerHTML = marker.tag;\n      el.style.fontStyle = 'bold';\n      el.style.textAlign = 'center';\n      el.style.color = 'white';\n      el.style.width = marker.size[0] + 'px';\n      el.style.height = marker.size[1] + 'px';\n      el.style.fontSize = '10px';\n      el.style.fontWeight = '700';\n      el.style.fontFamily = 'quartzo';\n      new mapboxgl.Marker(el)\n        .setLngLat([\n          marker.lat,\n          marker.lng,\n        ])\n        .setPopup(new mapboxgl.Popup().setHTML(marker.tag))\n        .addTo(this.map);\n    });\n    // this.map.addSource\n    this.mapboxOverlay();\n    this.map.addControl(new mapboxgl.FullscreenControl());\n    this.map.addControl(new mapboxgl.NavigationControl());\n    this.map.addControl(\n      new mapboxgl.GeolocateControl({\n        positionOptions: {\n          enableHighAccuracy: true,\n        },\n        trackUserLocation: true,\n      })\n    );\n  }\n\n  mapboxOverlay() {\n    const slider = document.getElementById('slider');\n    const sliderValue = document.getElementById('slider-value');\n    this.map.on('load', () => {\n      // tslint:disable-next-line: no-unused-expression\n      this.map.addSource('myImageSource', {\n        type: 'image',\n        url: 'assets/i-10-islamabad.jpg',\n        coordinates: [\n          [73.024955 , 33.650753], // cda kashmir highway\n          [73.041134, 33.659291 ], // rizvi road kashmir highway:\n          [73.051520, 33.645466], // Service Rd West I-10 Islamabad,\n          [73.035384, 33.636927], // I-10/3 I 10/3 I-10, Islamabad, Islamabad\n        ],\n      });\n      this.map.addLayer({\n        id: 'myImageSource',\n        source: 'myImageSource',\n        type: 'raster',\n        paint: {\n          'raster-opacity': this.opacity,\n        },\n      });\n\n      slider.addEventListener('input', (e) => {\n        // Adjust the layers opacity. layer here is arbitrary - this could\n        // be another layer name found in your style or a custom layer\n        // added on the fly using `addSource`.\n        // e.target;\n        const input = (document.getElementById('slider') as HTMLInputElement)\n          .value;\n        this.map.setPaintProperty(\n          'myImageSource',\n          'raster-opacity',\n          parseInt('' + input + '', 10) / 100\n        );\n        // Value indicator\n        sliderValue.textContent = '' + input + '' + '%';\n      });\n    });\n    \n    this.map.on('load', () => {\n      // tslint:disable-next-line: no-unused-expression\n      this.map.addSource('f-7', {\n        type: 'image',\n        url: 'assets/f-7.png',\n        coordinates: [\n          [73.042912, 33.722351 ],\n          [73.061492 , 33.731482],\n          [73.070957, 33.719287], \n          [73.052850, 33.709633], \n        ],\n      });\n      this.map.addLayer({\n        id: 'f-7',\n        source: 'f-7',\n        type: 'raster',\n        paint: {\n          'raster-opacity': this.opacity,\n        },\n      });\n\n      slider.addEventListener('input', (e) => {\n        const input = (document.getElementById('slider') as HTMLInputElement)\n          .value;\n        this.map.setPaintProperty(\n          'f-7',\n          'raster-opacity',\n          parseInt('' + input + '', 10) / 100\n        );\n        // Value indicator\n        sliderValue.textContent = '' + input + '' + '%';\n      });\n    });\n    this.map.on('load', () => {\n      // tslint:disable-next-line: no-unused-expression\n      this.map.addSource('phase-2', {\n        type: 'image',\n        url: 'assets/phase 2.png',\n        coordinates: [\n          [73.114200, 33.565860], // Phase 4 Gulrez Housing Scheme\n          [73.126250, 33.565800], // Police Foundation, Rawalpindi \n          [73.125652, 33.552467], // Bahria Town Phase V Phase 5 \n          [73.112955, 33.552230] // Bahria Town Phase III Phase 3  \n        ],\n      });\n      this.map.addLayer({\n        id: 'phase-2',\n        source: 'phase-2',\n        type: 'raster',\n        paint: {\n          'raster-opacity': this.opacity,\n        },\n      });\n\n      slider.addEventListener('input', (e) => {\n        const input = (document.getElementById('slider') as HTMLInputElement)\n          .value;\n        this.map.setPaintProperty(\n          'phase-2',\n          'raster-opacity',\n          parseInt('' + input + '', 10) / 100\n        );\n        // Value indicator\n        sliderValue.textContent = '' + input + '' + '%';\n      });\n    });\n \n    // this.map.on('load', () => {\n    //   // tslint:disable-next-line: no-unused-expression\n    //   this.map.addSource('phase-3', {\n    //     type: 'image',\n    //     url: 'assets/phase 3.png',\n    //     coordinates: [\n    //       [73.104769, 33.563229], // Phase 2 Gulrez Housing Scheme\n    //       [73.127969, 33.560081], // Phase 2 Bahria Town, Rawalpindi \n    //       [73.121127, 33.544900], // Soan River\n    //       [73.093428, 33.550266] // Golden Jubilee Residential CHS\n    //     ],\n    //   });\n    //   this.map.addLayer({\n    //     id: 'phase-3',\n    //     source: 'phase-3',\n    //     type: 'raster',\n    //     paint: {\n    //       'raster-opacity': this.opacity,\n    //     },\n    //   });\n\n    //   slider.addEventListener('input', (e) => {\n    //     const input = (document.getElementById('slider') as HTMLInputElement)\n    //       .value;\n    //     this.map.setPaintProperty(\n    //       'phase-3',\n    //       'raster-opacity',\n    //       parseInt('' + input + '', 10) / 100\n    //     );\n    //     // Value indicator\n    //     sliderValue.textContent = '' + input + '' + '%';\n    //   });\n    // });\n    this.map.on('load', () => {\n      // tslint:disable-next-line: no-unused-expression\n      this.map.addSource('e-16', {\n        type: 'image',\n        url: 'assets/maps_images/E-16-crop.png',\n        coordinates: [\n          [ 72.877392, 33.652982],\n          [ 72.898120, 33.652946],\n          [ 72.898034, 33.637977],\n          [ 72.877349, 33.638049]\n        ],\n      });\n      this.map.addLayer({\n        id: 'e-16',\n        source: 'e-16',\n        type: 'raster',\n        paint: {\n          'raster-opacity': this.opacity,\n        },\n      });\n\n      slider.addEventListener('input', (e) => {\n        const input = (document.getElementById('slider') as HTMLInputElement)\n          .value;\n        this.map.setPaintProperty(\n          'e-16',\n          'raster-opacity',\n          parseInt('' + input + '', 10) / 100\n        );\n        // Value indicator\n        sliderValue.textContent = '' + input + '' + '%';\n      });\n    });\n    this.map.on('load', () => {\n      // tslint:disable-next-line: no-unused-expression\n      this.map.addSource('e-18', {\n        type: 'image',\n        url: 'assets/maps_images/E-18-crop.png',\n        coordinates: [\n          [72.834467, 33.635597],\n          [72.858070, 33.647030],\n          [72.877725, 33.620232],\n          [72.854551, 33.609438]\n        ],\n      });\n      this.map.addLayer({\n        id: 'e-18',\n        source: 'e-18',\n        type: 'raster',\n        paint: {\n          'raster-opacity': this.opacity,\n        },\n      });\n\n      slider.addEventListener('input', (e) => {\n        const input = (document.getElementById('slider') as HTMLInputElement)\n          .value;\n        this.map.setPaintProperty(\n          'e-18',\n          'raster-opacity',\n          parseInt('' + input + '', 10) / 100\n        );\n        // Value indicator\n        sliderValue.textContent = '' + input + '' + '%';\n      });\n    });\n\n    this.map.on('load', () => {\n      // tslint:disable-next-line: no-unused-expression\n      this.map.addSource('enclave', {\n        type: 'image',\n        url: 'assets/enclave_map-crop.png',\n        coordinates: [\n          [33.701923, 73.200201],\n          [33.703352, 73.264891],\n          [33.674785, 73.264236],\n          [33.674999, 73.196210]\n        ],\n      });\n      this.map.addLayer({\n        id: 'enclave',\n        source: 'enclave',\n        type: 'raster',\n        paint: {\n          'raster-opacity': this.opacity,\n        },\n      });\n\n      slider.addEventListener('input', (e) => {\n        const input = (document.getElementById('slider') as HTMLInputElement)\n          .value;\n        this.map.setPaintProperty(\n          'enclave',\n          'raster-opacity',\n          parseInt('' + input + '', 10) / 100\n        );\n        // Value indicator\n        sliderValue.textContent = '' + input + '' + '%';\n      });\n    });\n \n  }\n}","<div id=\"map\" class=\"match-parent\">\r\n<div class=\"map-overlay top\">\r\n    <div class=\"map-overlay-inner\">\r\n      <label>Layer opacity: <span id=\"slider-value\">100%</span></label>\r\n      <input id=\"slider\" type=\"range\" min=\"0\" max=\"100\" step=\"0\" value=\"100\" />\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Component({\n  selector: 'app-newpass',\n  templateUrl: './newpass.component.html',\n  styleUrls: ['./newpass.component.css']\n})\nexport class NewpassComponent implements OnInit {\n\n  submitted = false;\n  email: string;\n  newpassForm: FormGroup;\n  constructor(\n    private authServ: AuthenticationService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(param => {\n      this.email = param.email;\n    });\n    this.initialize();\n  }\n  initialize() {\n    this.newpassForm = this.formBuilder.group({\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n  get f() { return this.newpassForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.newpassForm.invalid) {\n      return;\n    }\n    const user = {\n      email: this.email,\n      newpassword: this.newpassForm.value.password\n    };\n\n    this.authServ.newpassword(user).subscribe(data => {\n      console.log(\"server response: \");\n      console.log(data);\n      const status = data.success;\n      const msg = data.status;\n      if (status) {\n        alert(msg);\n        this.router.navigate(['login-component']);\n      } else {\n        alert(msg);\n      }\n    });\n  }\n}","<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n<link href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\n<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n\n\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-5 col-md-5 left\">\n            <div>\n\n                <img class=\"left-img\" src=\"assets/icons/asasa.gif\" />\n            </div>\n        </div>\n\n        <div class=\"col-1 v2\">\n            <div class=\"vl\"></div>\n            Password change\n            <div class=\"vl\"></div>\n        </div>\n\n        <div class=\"col-sm-6 col-md-6 right\">\n            <h2>Welcome to my asasa</h2>\n            <form class=\"form-register\" [formGroup]=\"newpassForm\" (ngSubmit)=\"onSubmit()\">\n                <div class=\"form-group\"  class='input-container'>\n                    <div class=\"input-group\">\n                        <i class=\"fa fa-lock icon\"></i>\n                        <input class=\"form-control\" class=\"input-field\" id=\"password\" type=\"password\" \n                        placeholder=\"Enter new password\"  formControlName=\"password\"\n                            required=\"\" autofocus=\"\" class=\"form-control rounded-pill border-0 shadow-sm px-4\"\n                            [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\">\n                        <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                            <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <div class=\"input-group\">\n                        <i class=\"fa fa-lock icon\"></i>\n                        <input class=\"input-field\" id=\"inputPass\" type=\"password\" placeholder=\"Confirm new password\"\n                            required=\"\" autofocus=\"\" class=\"form-control rounded-pill border-0 shadow-sm px-4\">\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <button type=\"submit\" class=\"btn btn-primary rounded-pill\">Change</button>\n                </div>\n                <button class=\"btn btn-primary rounded-pill\" routerLink=\"/login-component\">Login</button>\n\n                <!-- </div> -->\n            </form>\n        </div>\n\n    </div>\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { User } from '../login/User';\r\nimport { Router } from '@angular/router';\r\nimport { throwError } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\n// import { Users } from '../dashboard/users/Users';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n  // API_URL: string = 'http://localhost:4000';\r\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\r\n  private readonly url = 'https://shaisecommercestore.herokuapp.com/api'; // environment.url;\r\n\r\n\r\n\r\n  // currentUser = {};\r\n\r\n  constructor(private httpClient: HttpClient, public router: Router) {\r\n    // this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\r\n    // this.currentUser = this.currentUserSubject.asObservable();\r\n  }\r\n\r\n  //////////// Send data to inventory using inventory form /////////////\r\n  createInventory(user: any) {\r\n    console.log('Create user func')\r\n    return this.httpClient.post(`${this.url}/inventory/save`, user).pipe(\r\n      catchError(this.handleError)\r\n    )\r\n  }\r\n\r\n  /////////////// Get data from inventory to the inventory table ////////////\r\n  getInventory() {\r\n    return this.httpClient.get<any>(`${this.url}/inventory/get`);\r\n  }\r\n  ///////// Getting user table data //////////////\r\n  getUsers() {\r\n    return this.httpClient.get<any>(`${this.url}/users/find`);\r\n  }\r\n  ////////////// Send new row table data /////////////\r\n  createUsers(user: any) {\r\n    console.log('Create user func')\r\n    return this.httpClient.post(`${this.url}/users/save`, user).pipe(\r\n      catchError(this.handleError)\r\n    )\r\n  }\r\n\r\n  // public getAll(): Observable<any> {\r\n  //   return this.httpClient.get<User[]>(`${this.url}/user`);\r\n  // }\r\n\r\n  ///////// Function to Register the new user /////////////\r\n  register(user: User): Observable<any> {\r\n\r\n    return this.httpClient.post(`${this.url}/users/signup`, user).pipe(\r\n      catchError(this.handleError)\r\n    )\r\n  }\r\n  /* API Call to verify otp code */\r\n  ////// Verifying the email address while signing the user up ///////////////////\r\n  verifyOTPEmail(user: any): Observable<any> {\r\n\r\n    return this.httpClient.post(`${this.url}/users/verifyemail`, user).pipe(\r\n      catchError(this.handleError)\r\n    )\r\n  }\r\n  ///////// Verifying the user using otp code to his gmail to change his/her password /////////////\r\n  verifyOTPCode(user: any): Observable<any> {\r\n\r\n    return this.httpClient.post(`${this.url}/users/verifyotpcode`, user).pipe(\r\n      catchError(this.handleError)\r\n    )\r\n  }\r\n  ///////////// Adding new password after forgetting the old password ////////\r\n  newpassword(user: any): Observable<any> {\r\n\r\n    return this.httpClient.post(`${this.url}/users/newpassword`, user).pipe(\r\n      catchError(this.handleError)\r\n    )\r\n  }\r\n\r\n  /////////// Function to Login the already existed user /////////////\r\n  public login(user: any): Observable<any> {\r\n    console.log('Hello', user);\r\n    return this.httpClient.post(`${this.url}/users/login`, user);\r\n    // .subscribe((data: any) => {\r\n    //   localStorage.setItem('access_token', data.token)\r\n    //   this.getUserProfile(data._id).subscribe((data) => {\r\n    //     this.currentUser = data;\r\n    //     this.router.navigate(['users/profile/' + data.msg._id]);\r\n    //   })\r\n    // })\r\n  }\r\n\r\n  ///////////// Verify User Email ////////////////\r\n  verifyEmail(body: any): Observable<any> {\r\n    return this.httpClient.post(`${this.url}/users/verifyemail`, body);\r\n\r\n  }\r\n\r\n  /////////////// Get Users Token //////////////////////////\r\n  getAccessToken() {\r\n    return localStorage.getItem('access_token');\r\n  }\r\n\r\n  get isLoggedIn(): boolean {\r\n    let authToken = localStorage.getItem('access_token');\r\n    return (authToken !== null) ? true : false;\r\n  }\r\n  ////////// Logout Function ////////////////\r\n  logout() {\r\n    if (localStorage.removeItem('access_token') == null) {\r\n      this.router.navigate(['users/login']);\r\n    }\r\n  }\r\n  ///////////////////////////////////////////\r\n\r\n  ///////// Get Profile Function ////////////\r\n  getUserProfile(id): Observable<any> {\r\n    return this.httpClient.get(`${this.url}/user/profile/${id}`, { headers: this.headers }).pipe(\r\n      map((res: Response) => {\r\n        return res || {}\r\n      }),\r\n      catchError(this.handleError)\r\n    )\r\n  }\r\n  ///////////////////////////////////////////\r\n\r\n  ///////// Error Handling /////////////////\r\n  handleError(error: HttpErrorResponse) {\r\n    let msg = '';\r\n    if (error.error instanceof ErrorEvent) {\r\n      // client-side error\r\n      msg = error.error.message;\r\n    } else {\r\n      // server-side error\r\n      msg = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n    }\r\n    return throwError(msg);\r\n  }\r\n  // ////////////////////////////////////////\r\n}\r\n","// import { Observable, throwError } from 'rxjs';\n// import { catchError, retry } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,HttpEvent, HttpErrorResponse, HttpEventType  } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n// import { Map } from './map';\n@Injectable({\n  providedIn: 'root'\n})\nexport class MapserviceService {\n  constructor(private http: HttpClient) { \n}\n\nprivate  apiurl = \"https://asasa.com/api/property\";\nreadData(): Observable<any> {\n  return this.http.get(this.apiurl);\n}\n\n}","\nimport { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from \"../services/authentication.service\";\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  submitted = false;\n  registerForm: FormGroup;\n  mobileView: boolean;\n\n  constructor(\n    public formBuilder: FormBuilder,\n    public authService: AuthenticationService,\n    public router: Router) {\n  }\n\n  // registerresponse: RegisterResponse;\n  ngOnInit(): void {\n    this.initialize();\n    if (window.innerWidth < 600) {\n      this.mobileView = true;\n\n    } else if (window.innerWidth > 600) {\n      this.mobileView = false;\n    }\n  }\n\n  initialize() {\n    this.registerForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email, Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n  registerUser() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n      console.log('Erroneous')\n      return;\n    }\n\n    alert('SUCCESS!! :-)\\n' + JSON.stringify(this.registerForm.value))\n\n    console.log(this.registerForm.value);\n    this.authService.register(this.registerForm.value).subscribe((data) => {\n      console.log(data);\n      // this.registerresponse = data;\n      const email = this.registerForm.value.email;\n      const msg = data.msg;\n      const status = data.status;\n      // console.log('Status: ' + status);\n      if (status) {\n        this.registerForm.reset();\n\n        alert(msg);\n        this.router.navigate(['signupotp-component', email]);\n      }\n      else {\n        alert(msg);\n      }\n    })\n  }\n  // convenience getter for easy access to form fields\n  get f() { return this.registerForm.controls; }\n}\n","<!-- <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n<link href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\n<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script> -->\n\n<div class=\"container\">\n\t<div class=\"row\">\n\t\t<div class=\"col-sm-5 col-md-5 left\">\n\t\t\t<div>\n\n\t\t\t\t<img class=\"left-img\" src=\"assets/icons/asasa.gif\" />\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div class=\"col-1 v2\" *ngIf=\"mobileView ==false\">\n\t\t\t<div class=\"vl\"></div>\n\t\t\tRegister\n\t\t\t<div class=\"vl\"></div>\n\t\t</div>\n\n\t\t<div class=\"col-sm-6 col-md-6 right\">\n\t\t\t<h2 class=\"text-center\">Welcome to my asasa</h2>\n\t\t\t<form class=\"form-register\" [formGroup]=\"registerForm\" (ngSubmit)=\"registerUser()\">\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<div class=\"input-group\">\n\t\t\t\t\t\t<i class=\"fa fa-user fa\" aria-hidden=\"true\"></i>\n\t\t\t\t\t\t<input type=\"text\" class=\"form-control inputs\" formControlName=\"username\" id=\"username\"\n\t\t\t\t\t\t\tplaceholder=\"Username\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\n\t\t\t\t\t\t<div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n\t\t\t\t\t\t\t<div *ngIf=\"f.username.errors.required\">Name is required</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<div class=\"input-group\">\n\t\t\t\t\t\t<i class=\"fa fa-envelope\" aria-hidden=\"true\"></i>\n\t\t\t\t\t\t<input type=\"text\" class=\"form-control emailInput\" formControlName=\"email\" id=\"email\"\n\t\t\t\t\t\t\tplaceholder=\"Enter Email\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\n\t\t\t\t\t\t<div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n\t\t\t\t\t\t\t<div *ngIf=\"f.email.errors.required\">Email is required</div>\n\t\t\t\t\t\t\t<div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<div class=\"input-group\">\n\t\t\t\t\t\t<i class=\"fa fa-lock fa-lg\" aria-hidden=\"true\"></i>\n\t\t\t\t\t\t<input type=\"password\" #password class=\"form-control inputs\" formControlName=\"password\"\n\t\t\t\t\t\t\tname=\"password\" id=\"password\" placeholder=\"Password\"\n\t\t\t\t\t\t\t[ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n\t\t\t\t\t\t<div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n\t\t\t\t\t\t\t<div *ngIf=\"f.password.errors.required\">Password is required</div>\n\t\t\t\t\t\t\t<div *ngIf=\"f.password.errors.minlength\">Password must be at least 6\n\t\t\t\t\t\t\t\tcharacters</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<div class=\"input-group\">\n\t\t\t\t\t\t<i class=\"fa fa-lock fa-lg\" aria-hidden=\"true\"></i>\n\t\t\t\t\t\t<input type=\"password\" #confirm class=\"form-control inputs\" name=\"confirm\" id=\"confirm\"\n\t\t\t\t\t\t\tplaceholder=\"Confirm Password\" />\n\t\t\t\t\t\t<!-- <div *ngIf=\"password.value!=confirm.value\"> Password & Confirm Password does not match.</div> -->\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id='message'></div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<button type=\"submit\" class='btn' class=\"btn btn-primary rounded-pill\">Register</button>\n\t\t\t\t</div>\n\t\t\t\t<!-- &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -->\n\t\t\t\t<div class=\"lastdiv\">Already Registered!\n\t\t\t\t\t<a routerLink=\"/login-component\"> <b>Login!</b></a>\n\t\t\t\t</div>\n\t\t\t</form>\n\n\t\t</div>\n\t</div>\n\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Component({\n  selector: 'app-signupotp',\n  templateUrl: './signupotp.component.html',\n  styleUrls: ['./signupotp.component.css']\n})\nexport class SignupotpComponent implements OnInit {\n\n  submitted = false;\n  email: string;\n  signupotpForm: FormGroup;\n  constructor(\n    private authServ: AuthenticationService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(param => {\n      this.email = param.email;\n      // console.log(this.email);\n    });\n    this.initialize();\n  }\n  initialize() {\n    this.signupotpForm = this.formBuilder.group({\n      code: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(6), Validators.pattern('^[0-9]+$')]]\n    });\n  }\n  get f() { return this.signupotpForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.signupotpForm.invalid) {\n      return;\n    }\n    const user = {\n      email: this.email,\n      otpcode: this.signupotpForm.value.code\n    };\n\n    this.authServ.verifyOTPEmail(user).subscribe(data => {\n      console.log(data);\n      const status = data.status;\n      const msg = data.msg;\n      if (status) {\n\n        alert('\\nMessage: ' + msg + '\\n\\n Status: ' + status)\n        this.router.navigate(['profile', this.email]);\n      } else {\n        alert(msg);\n      }\n    });\n\n  }\n}\n","<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n<link href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\n<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n\n\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-5 col-md-5 left\">\n            <div>\n\n                <img class=\"left-img\" src=\"assets/icons/asasa.gif\" />\n            </div>\n        </div>\n\n        <div class=\"col-1 v2\">\n            <div class=\"vl\"></div>\n            Verification\n            <div class=\"vl\"></div>\n        </div>\n\n        <div class=\"col-sm-6 col-md-6 right\">\n            <h2>Welcome to my asasa</h2>\n\n            <form class=\"form-register\" [formGroup]=\"signupotpForm\" (ngSubmit)=\"onSubmit()\">\n\t\t\t\t<div class=\"form-group\">\n                <div class=\"input-group\">\n                    <i class=\"fa fa-user icon\"></i>\n                    <input type=\"text\" class=\"form-control inputs\" formControlName=\"code\" name=\"code\" id=\"code\"  \n                        placeholder=\"Enter 6-digit verify code\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.code.errors }\">\n                    <div *ngIf=\"submitted && f.code.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.code.errors.required\">Code is required</div>\n                        <div *ngIf=\"f.code.errors.minlength\">Code must be at least 6 characters</div>\n                        <div *ngIf=\"f.code.errors.maxlength\">Code should not be greater than 6 characters</div>\n                        <div *ngIf=\"f.code.errors.pattern\">Code must be a valid number sequence</div>\n                    </div>\n                </div>\n                </div>\n                <!-- <input id=\"customCheck1\" type=\"checkbox\" checked class=\"custom-control-input\"> -->\n                <div class=\"form-group\">\n\t\t\t\t\t<button type=\"submit\" class='btn'\n\t\t\t\t\t\tclass=\"btn btn-primary rounded-pill\">Verify</button>\n\t\t\t\t</div>\n                <button class=\"btn btn-primary rounded-pill\" routerLink=\"/register-component\">back</button>\n                <!-- <div class=\"form-group\">\n                    <button class=\"btn btn-primary\" routerLink=\"/newpass-component\">Verify</button>\n                </div>\n                <button class=\"btn1 btn-primary\" routerLink=\"/forgetpass-component\">back</button> -->\n\n                <!-- </div> -->\n            </form>\n        </div>\n    </div>\n\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  mapbox: {\n    accessToken: 'pk.eyJ1IjoiYmFiYXJic2NzMzI2MSIsImEiOiJja2N2dHR2MGUwN21iMnhydXlvcXA2MTlmIn0.gympgF_-zALE5J5MyZH3fQ'\n  },\n  url: 'https://shaisecommercestore.herokuapp.com/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}