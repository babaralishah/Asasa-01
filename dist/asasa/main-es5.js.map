{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/forgetpass/forgetpass.component.ts","webpack:///src/app/forgetpass/forgetpass.component.html","webpack:///src/app/forgetpassverify/forgetpassverify.component.ts","webpack:///src/app/forgetpassverify/forgetpassverify.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/map/map.component.ts","webpack:///src/app/map/map.component.html","webpack:///src/app/newpass/newpass.component.ts","webpack:///src/app/newpass/newpass.component.html","webpack:///src/app/services/authentication.service.ts","webpack:///src/app/services/mapservice.service.ts","webpack:///src/app/signup/signup.component.ts","webpack:///src/app/signup/signup.component.html","webpack:///src/app/signupotp/signupotp.component.ts","webpack:///src/app/signupotp/signupotp.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","formBuilder","authService","router","isShown","title","loading","submitted","loginForm","group","email","required","pattern","password","minLength","invalid","login","value","subscribe","data","console","log","status","msg","alert","get","controls","loginUser","selector","templateUrl","styleUrls","AppModule","provide","useValue","declarations","providers","bootstrap","ForgetpassComponent","authServ","forgetPassForm","body","verifyEmail","navigate","onSubmit","ForgetpassverifyComponent","route","params","param","initialize","forgetpassForm","maxLength","user","otpcode","verifyOTPCode","LoginComponent","MapComponent","mapservice","opacity","style","lat","lng","geojson","type","features","properties","message","iconSize","geometry","coordinates","mapArray","tag","size","initializemapbox","map","accessToken","container","center","zoom","forEach","marker","el","document","createElement","className","backgroundImage","innerHTML","fontStyle","textAlign","color","width","height","fontSize","fontWeight","fontFamily","setLngLat","setPopup","setHTML","addTo","mapboxOverlay","addControl","positionOptions","enableHighAccuracy","trackUserLocation","slider","getElementById","sliderValue","on","addSource","url","addLayer","source","paint","addEventListener","input","setPaintProperty","parseInt","textContent","NewpassComponent","newpassForm","newpassword","AuthenticationService","httpClient","headers","set","post","pipe","handleError","localStorage","getItem","removeItem","res","error","ErrorEvent","authToken","providedIn","MapserviceService","http","apiurl","SignupComponent","registerForm","username","JSON","stringify","register","reset","registerUser","SignupotpComponent","signupotpForm","verifyOTPEmail","environment","production","mapbox","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MapComponent } from './map/map.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { ForgetpassComponent } from './forgetpass/forgetpass.component';\nimport { ForgetpassverifyComponent } from './forgetpassverify/forgetpassverify.component';\nimport { NewpassComponent } from './newpass/newpass.component';\nimport { SignupotpComponent } from './signupotp/signupotp.component';\nconst routes: Routes = [\n  { path: 'map', component: MapComponent },\n  { path: 'login-component', component: LoginComponent },\n  { path: 'signup-component', component: SignupComponent },\n  { path: 'forgetpass-component', component: ForgetpassComponent },\n  { path: 'forgetpassverify-component/:email', component: ForgetpassverifyComponent },\n  { path: 'newpass-component/:email', component: NewpassComponent },\n  { path: 'signupotp-component/:email', component: SignupotpComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { MDBBootstrapModule } from 'angular-bootstrap-md';\nimport { Component } from '@angular/core';\nimport { AuthenticationService } from \"./services/authentication.service\";\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  isShown:boolean=false;\n  title = 'asasa';\n  loginForm: FormGroup; // Instance of Form group that will get form data from user end (i.e; login.html)\n  // registerForm: FormGroup;\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n  constructor(\n    public formBuilder: FormBuilder, // Creating an instance of Formbuilder\n    public authService: AuthenticationService, // Instance of Authentication services created in front end\n    public router: Router) {\n  }\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email, Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n  get email() {\n    return this.loginForm.get('email')\n  }\n  loginUser() {\n    this.submitted = true;\n    if (this.loginForm.invalid) {\n      return;\n    }\n    // console.log('user login data: ',this.loginForm.value);\n    this.authService.login(this.loginForm.value).subscribe(data => {\n\n      console.log(data);\n      const status = data.status;\n      const msg:string = data.msg;\n      console.log(\"Status: \" + status);\n      console.log(\"Message: \" + msg);\n      if (status) {\n\n      } else {\n        alert('Invalid email or password!');\n      }\n    });\n  }\n  // getting input labels values from user end (login.html)\n  get f() { return this.loginForm.controls; }\n}\n","<!-- NG-ZORRO -->\n<!-- <a href=\"https://github.com/NG-ZORRO/ng-zorro-antd\" target=\"_blank\" style=\"display: flex;align-items: center;justify-content: center;height: 100%;width: 100%;\">\n  <img height=\"300\" src=\"https://img.alicdn.com/tfs/TB1X.qJJgHqK1RjSZFgXXa7JXXa-89-131.svg\">\n</a> -->\n\n<nav class=\"navbar navbar-dark bg-dark navbar-expand-lg\">\n  <div class=\"container-fluid px-0\">\n    <div class=\"row w-100\">\n      <div class=\"col-5\">\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo03\" aria-controls=\"navbarTogglerDemo03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" (click)=\"isShown = !isShown\" >\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        <ul class=\"navbar-nav mt-2 mt-lg-0\">a\n\n\n          <li class=\"nav-item active pull-left\">\n            <a class=\"nav-link\" href=\"#\" (click)=\"isShown = false\" >Home</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"#\" (click)=\"isShown = false\" >About</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"#\" (click)=\"isShown = false\" >Portfolio</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"#\" (click)=\"isShown = false\" >Book Me</a>\n          </li>\n        </ul>\n      </div>\n<div class=\"col-md-3\">\n</div>\n      <div class=\"col-4 \" >\n        <div class=\"collapse justify-content-end navbar-collapse\" [ngClass]=\"{ 'show': isShown }\" id=\"navbarTogglerDemo03\">\n          <button  class = \"btn btn-info rounded-pill\" routerLink=\"/map\">Mapping</button>\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            <button  class = \"btn btn-info rounded-pill\" data-toggle=\"modal\" data-target=\"#exampleModal\">Login</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</nav>\n\n\n<!-- Modal -->\n<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n    \n       \n      \n      <div class=\"modal-body\">\n        \n        <button type=\"button\" class=\"close pull-right\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n          <div class=\"row\">\n            <div class=\"col-sm-6 col-md-6 left\">\n              <div>\n        \n                <img class=\"left-img\" src=\"assets/icons/asasa.gif\" />\n              </div>\n            </div>\n        \n            <div class=\"col-1 v2\">\n              <div class=\"vl\"></div>\n              Log  in\n              <div class=\"vl\"></div>\n            </div>\n        \n            <div class=\"col-sm-5 col-md-5 right\">\n              <h2>Welcome to my asasa</h2>\n                                    <form class=\"form-register\" [formGroup]=\"loginForm\" (ngSubmit)=\"loginUser()\">\n        \n                                        <div class=\"form-group\" class='input-container'>\n                                            <div class=\"input-group\">\n                                                <i class=\"fa fa-user icon\"></i>\n                                                <input class=\"form-control\" class=\"input-field\"\n                                                    [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" id=\"inputEmail\"\n                                                    type=\"email\" name=\"email\" formControlName=\"email\"\n                                                    placeholder=\"Email address\" required=\"\" autofocus=\"\"\n                                                    class=\"form-control rounded-pill border-0 shadow-sm px-4\">\n                                                <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                                                    <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                                                    <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"form-group\">\n                                            <div class=\"input-group\">\n                                                <i class=\"fa fa-lock icon\"></i>\n                                                <input id=\"password\" type=\"password\" formControlName=\"password\"\n                                                    placeholder=\"Password\" required=\"\"\n                                                    class=\"form-control rounded-pill border-0 shadow-sm px-4 text-primary\"\n                                                    [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\">\n                                                <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                                                    <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                                                    <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6\n                                                        characters\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"form-group\">\n                                            <br>\n                                            <button type=\"submit\" class='btn'\n                                                class=\"btn btn-primary rounded-pill\">Login</button>\n                                        </div>\n                                        <div class=\"custom-control custom-checkbox mb-3\">\n                                            <input id=\"customCheck1\" type=\"checkbox\" checked class=\"custom-control-input\">\n                                            <!-- <label for=\"customCheck1\" class=\"custom-control-label\">Remember password</label> -->\n                                            <a routerLink=\"/forgetpass-component\"> <b>Forget Password</b></a>\n                                            <br>\n                                            Not Registered?\n                                            <a routerLink=\"/register-component\"> <b>Sign up!</b></a>\n                                        </div>\n                                    </form>\n        \n                                </div>\n                            </div>\n                        \n                        \n                       \n                       \n\n\n      </div>\n     \n    </div>\n  </div>\n</div>\n\n<!-- <div> \n<button  class = \"button\" routerLink=\"/map-component\">Mapping</button>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n  <button  class = \"button\" routerLink=\"/login-component\">Login</button>\n  </div> -->\n<!-- The routed views render in the <router-outlet>-->\n  <router-outlet></router-outlet>","// import { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\n// import {MaterialModule} from '@angular/material';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MapComponent } from './map/map.component';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SignupComponent } from './signup/signup.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ForgetpassComponent } from './forgetpass/forgetpass.component';\nimport { ForgetpassverifyComponent } from './forgetpassverify/forgetpassverify.component';\nimport { NewpassComponent } from './newpass/newpass.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignupotpComponent } from './signupotp/signupotp.component';\nimport { NZ_I18N } from 'ng-zorro-antd/i18n';\nimport { en_US } from 'ng-zorro-antd/i18n';\nimport { registerLocaleData } from '@angular/common';\nimport en from '@angular/common/locales/en';\n\nregisterLocaleData(en);\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MapComponent,\n    LoginComponent,\n    SignupComponent,\n    ForgetpassComponent,\n    ForgetpassverifyComponent,\n    NewpassComponent,\n    SignupotpComponent\n  ],\n  imports: [\n    HttpClientModule,\n    MDBBootstrapModule.forRoot(),\n    BrowserModule,\n    AppRoutingModule,\n    FlexLayoutModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    MatToolbarModule,\n    MatButtonModule,\n    FormsModule\n    // MaterialModule\n  ],\n  providers: [{ provide: NZ_I18N, useValue: en_US }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Component({\n  selector: 'app-forgetpass',\n  templateUrl: './forgetpass.component.html',\n  styleUrls: ['./forgetpass.component.css']\n})\nexport class ForgetpassComponent implements OnInit {\n  forgetPassForm: FormGroup;\n  submitted = false;\n  constructor(\n    private authServ: AuthenticationService,\n    public formBuilder: FormBuilder,\n    public router: Router) { }\n\n  ngOnInit(): void {\n    this.forgetPassForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email, Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')]]\n    });\n  }\n  get f() { return this.forgetPassForm.controls; }\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.forgetPassForm.invalid) {\n      return;\n    }\n    console.log(\"Sending this email: \" + this.forgetPassForm.value.email);\n    const body = {\n      email: this.forgetPassForm.value.email\n    }\n    this.authServ.verifyEmail(body).subscribe(data => {\n      console.log(data);\n      const status = data.status;\n      const email = this.forgetPassForm.value.email;\n      if (status) {\n        alert('Check your Email and change your password!!')\n\n        this.router.navigate(['forgetpassverify-component', email]);\n      }\n    });\n\n\n  }\n}\n","<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n<link href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\n<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n\n\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-5 col-md-5 left\">\n            <div>\n\n                <img class=\"left-img\" src=\"assets/icons/asasa.gif\" />\n            </div>\n        </div>\n\n        <div class=\"col-1 v2\">\n            <div class=\"vl\"></div>\n            Forget password\n            <div class=\"vl\"></div>\n        </div>\n\n        <div class=\"col-sm-6 col-md-6 right\">\n            <h2>Welcome to my asasa</h2>\n            <form class=\"form-register\" [formGroup]=\"forgetPassForm\" (ngSubmit)=\"onSubmit()\">\n                <div class=\"form-group\" class='input-container'>\n                    <div class=\"input-group\">\n                        <i class=\"fa fa-user icon\"></i>\n                        <input class=\"form-control\" class=\"input-field\"\n                            [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" id=\"inputEmail\" type=\"text\"\n                            name=\"email\" formControlName=\"email\" placeholder=\"Email address\" required=\"\" autofocus=\"\"\n                            class=\"form-control rounded-pill border-0 shadow-sm px-4\">\n                        <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                            <div *ngIf=\"f.email.errors.email\">Email must be a valid email address\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <!-- <div class=\"custom-control custom-checkbox mb-3\"> -->\n                <input id=\"customCheck1\" type=\"checkbox\" checked class=\"custom-control-input\">\n                <div class=\"form-group\">\n                    <button type=\"submit\" class=\"btn btn-primary rounded-pill\">Get\n                        Code</button>\n                </div>\n                <button class=\"btn btn-primary rounded-pill\" routerLink=\"/login-component\">Back</button>\n                <!-- </div> -->\n\n            </form>\n        </div>\n\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Component({\n  selector: 'app-forgetpassverify',\n  templateUrl: './forgetpassverify.component.html',\n  styleUrls: ['./forgetpassverify.component.css']\n})\nexport class ForgetpassverifyComponent implements OnInit {\n\n  submitted = false;\n  email: string;\n  forgetpassForm: FormGroup;\n  constructor(\n    private authServ: AuthenticationService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(param => {\n      this.email = param.email;\n      // console.log(this.email);\n    });\n    this.initialize();\n  }\n  initialize() {\n    this.forgetpassForm = this.formBuilder.group({\n      code: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(6), Validators.pattern('^[0-9]+$')]]\n    });\n  }\n  get f() { return this.forgetpassForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.forgetpassForm.invalid) {\n      return;\n    }\n    const user = {\n      email: this.email,\n      otpcode: this.forgetpassForm.value.code\n    };\n\n    // this.authServ.verifyOTPEmail(user).subscribe(data => {\n    //   console.log(data);\n    // });\n    this.authServ.verifyOTPCode(user).subscribe(data => {\n      console.log(data);\n      const status = data.status;\n      const msg = data.msg;\n      if (status) {\n\n        alert('\\nMessage: ' + msg + '\\n\\n Status: ' + status)\n        this.router.navigate(['newpass-component',this.email]);\n      } else {\n        alert(msg);\n      }\n    });\n  }\n\n}\n","<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n<link href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\n<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n\n\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-5 col-md-5 left\">\n            <div>\n\n                <img class=\"left-img\" src=\"assets/icons/asasa.gif\" />\n            </div>\n        </div>\n\n        <div class=\"col-1 v2\">\n            <div class=\"vl\"></div>\n            Verification\n            <div class=\"vl\"></div>\n        </div>\n\n        <div class=\"col-sm-6 col-md-6 right\">\n            <h2>Welcome to my asasa</h2>\n\n            <form class=\"form-register\" [formGroup]=\"forgetpassForm\" (ngSubmit)=\"onSubmit()\">\n\t\t\t\t<div class=\"form-group\">\n                <div class=\"input-group\">\n                    <i class=\"fa fa-user icon\"></i>\n                    <input type=\"text\" class=\"form-control inputs\" formControlName=\"code\" name=\"code\" id=\"code\"  \n                        placeholder=\"Enter 6-digit verify code\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.code.errors }\">\n                    <div *ngIf=\"submitted && f.code.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.code.errors.required\">Code is required</div>\n                        <div *ngIf=\"f.code.errors.minlength\">Code must be at least 6 characters</div>\n                        <div *ngIf=\"f.code.errors.maxlength\">Code should not be greater than 6 characters</div>\n                        <div *ngIf=\"f.code.errors.pattern\">Code must be a valid number sequence</div>\n                    </div>\n                </div>\n                </div>\n                <!-- <input id=\"customCheck1\" type=\"checkbox\" checked class=\"custom-control-input\"> -->\n                <div class=\"form-group\">\n\t\t\t\t\t<button type=\"submit\" class='btn'\n\t\t\t\t\t\tclass=\"btn btn-primary rounded-pill\">Verify</button>\n\t\t\t\t</div>\n                <button class=\"btn btn-primary rounded-pill\" routerLink=\"/forgetpass-component\">back</button>\n                <!-- <div class=\"form-group\">\n                    <button class=\"btn btn-primary\" routerLink=\"/newpass-component\">Verify</button>\n                </div>\n                <button class=\"btn1 btn-primary\" routerLink=\"/forgetpass-component\">back</button> -->\n\n                <!-- </div> -->\n            </form>\n        </div>\n    </div>\n\n</div>","\n// import {MatDialog, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from \"../services/authentication.service\";\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup; // Instance of Form group that will get form data from user end (i.e; login.html)\n  // registerForm: FormGroup;\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n  constructor(\n    public formBuilder: FormBuilder, // Creating an instance of Formbuilder\n    public authService: AuthenticationService, // Instance of Authentication services created in front end\n    public router: Router) {\n  }\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email, Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n  // get email() {\n  //   return this.loginForm.get('email')\n  // }\n  loginUser() {\n    this.submitted = true;\n    if (this.loginForm.invalid) {\n      return;\n    }\n    // console.log('user login data: ',this.loginForm.value);\n    this.authService.login(this.loginForm.value).subscribe(data => {\n\n      console.log(data);\n      const status = data.status;\n      const msg: string = data.msg;\n      console.log(\"Status: \" + status);\n      // console.log(\"Message: \" + msg);\n      if (status) {\n\n        alert('SUCCESS!! :-)')\n      } else {\n        alert('Invalid email or password!');\n      }\n    });\n  }\n  // getting input labels values from user end (login.html)\n  get f() { return this.loginForm.controls; }\n}","<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js\"></script>\n\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n<link href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\n<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n\n\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-5 col-md-5 left\">\n            <div>\n\n                <img class=\"left-img\" src=\"assets/icons/asasa.gif\" />\n            </div>\n        </div>\n\n        <div class=\"col-1 v2\">\n            <div class=\"vl\"></div>\n            Log - in\n            <div class=\"vl\"></div>\n        </div>\n\n        <div class=\"col-sm-6 col-md-6 right\">\n            <h2>Welcome to my asasa</h2>\n            <form class=\"form-register\" [formGroup]=\"loginForm\" (ngSubmit)=\"loginUser()\">\n\n                <div class=\"form-group\" class='input-container'>\n                    <div class=\"input-group\">\n                        <i class=\"fa fa-user icon\"></i>\n                        <input class=\"form-control\" class=\"input-field\"\n                            [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" id=\"inputEmail\" type=\"email\"\n                            name=\"email\" formControlName=\"email\" placeholder=\"Email address\" required=\"\" autofocus=\"\"\n                            class=\"form-control rounded-pill border-0 shadow-sm px-4\">\n                        <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                            <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <div class=\"input-group\">\n                        <i class=\"fa fa-lock icon\"></i>\n                        <input class=\"input-field\" id=\"password\" type=\"password\" formControlName=\"password\"\n                            placeholder=\"Password\" required=\"\"\n                            class=\"form-control rounded-pill border-0 shadow-sm px-4 text-primary\"\n                            [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\">\n                        <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                            <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6\n                                characters\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <br>\n                    <button type=\"submit\" class=\"btn btn-info rounded-pill\" >\n                    <!-- [disabled]=\"!loginForm.valid\"> -->\n                    Login</button>\n                </div>\n                <div class=\"custom-control custom-checkbox mb-3\">\n                    <input id=\"customCheck1\" type=\"checkbox\" checked class=\"custom-control-input\">\n                    <!-- <label for=\"customCheck1\" class=\"custom-control-label\">Remember password</label> -->\n                    <a routerLink=\"/forgetpass-component\"> <b>Forget Password</b></a>\n                    <br>\n                    Not Registered?\n                    <a routerLink=\"/signup-component\"> <b>Sign up!</b></a>\n                </div>\n            </form>\n\n        </div>\n    </div>\n\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport * as mapboxgl from 'mapbox-gl';\nimport { MapserviceService } from \"../services/mapservice.service\";\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.css']\n})\nexport class MapComponent implements OnInit {\n  opacity = 1;\n  map: mapboxgl.Map;\n  style = 'mapbox://styles/mapbox/streets-v11';\n  lat = 33.628463;\n  lng = 73.087581;\n geojson = {\n    type: 'FeatureCollection',\n    features: [\n      {\n        type: 'Feature',\n        properties: {\n          message: 'Foo',\n          iconSize: [24, 24],\n        },\n        geometry: {\n          type: 'Point',\n          coordinates: { lat: 62.324462890625, lng: 33.024695711685304 },\n        },\n      },\n      {\n        type: 'Feature',\n        properties: {\n          message: 'Bar',\n          iconSize: [24, 24],\n        },\n        geometry: {\n          type: 'Point',\n          coordinates: { lat: 73.2158203125, lng: 33.97189158092897 },\n        },\n      },\n      {\n        type: 'Feature',\n        properties: {\n          message: 'Baz',\n          iconSize: [24, 24],\n        },\n        geometry: {\n          type: 'Point',\n          coordinates: { lat: 51.29223632812499, lng: 34.28151823530889 },\n        },\n      },\n    ],\n  };\n\n  mapArray = [\n    {\n      lat: 72.99641,\n      lng: 33.645992,\n      tag: 'Islamabad',\n      size: [51, 22],\n    },\n    {\n      lat: 73.0169,\n      lng: 33.5651,\n      tag: 'Rawalpindi',\n      size: [51, 22],\n    },\n    {\n      lat: 71.5249,\n      lng: 34.0151,\n      tag: 'Peshawar',\n      size: [51, 22],\n    },\n    {\n      lat: 67.0011,\n      lng: 24.8607,\n      tag: 'Karachi',\n      size: [51, 22],\n    },\n  ];\n  constructor(private mapservice: MapserviceService) { }\n\n  ngOnInit() {\n    this.initializemapbox();\n\n    ///////////////// This is the data coming from url into our frontend map //////////////////////\n    \n    // this.mapservice.readData()\n    // .subscribe\n    // (data=> {\n    //     data.property.forEach(( data ) => {\n    //       // create a DOM element for the marker\n    //       const el = document.createElement('div');\n    //       el.className = 'data';\n    //       el.style.backgroundImage = 'url(/assets/asasamarker.png)';\n    //       el.innerHTML = data.demand;\n    //       el.style.fontStyle = 'bold';\n    //       el.style.textAlign = 'center';\n    //       el.style.color = 'white';\n    //       el.style.width = '51px';\n    //       el.style.height = '22px';\n    //       el.style.fontSize = '10px';\n    //       el.style.fontWeight = '700';\n    //       el.style.fontFamily = 'Jersey M54';\n    //       // el.style.fontSizeAdjust = '5px';\n    //       new mapboxgl.Marker(el)\n    //         .setLngLat([\n    //           data.location_data.marker_data.mlongitude,\n    //           data.location_data.marker_data.mlatitide\n    //         ])\n    //         //.setPopup(new mapboxgl.Popup().setHTML(data.tag))\n    //         .addTo(this.map);\n    //     });\n    \n    // })\n\n  }\n  initializemapbox() {\n    this.map = new mapboxgl.Map({\n      accessToken:\n        'pk.eyJ1IjoibmFiZWVsc2FsZWVtIiwiYSI6ImNrY3p4MWhrZzBiNWwyd3FtOGx3aTZsbjEifQ.z6RLknl-YnJe2eKqMjPElg',\n      container: 'map',\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [73.024955 , 33.650753], // starting position [lng, lat]\n      zoom: 10, // starting zoom\n    });\n    this.mapArray.forEach((marker) => {\n      // create a DOM element for the marker\n      const el = document.createElement('div');\n      el.className = 'marker';\n      el.style.backgroundImage = 'url(/assets/icons/asasamarker.png)';\n      el.innerHTML = marker.tag;\n      el.style.fontStyle = 'bold';\n      el.style.textAlign = 'center';\n      el.style.color = 'white';\n      el.style.width = marker.size[0] + 'px';\n      el.style.height = marker.size[1] + 'px';\n      el.style.fontSize = '10px';\n      el.style.fontWeight = '700';\n      el.style.fontFamily = 'quartzo';\n      new mapboxgl.Marker(el)\n        .setLngLat([\n          marker.lat,\n          marker.lng,\n        ])\n        .setPopup(new mapboxgl.Popup().setHTML(marker.tag))\n        .addTo(this.map);\n    });\n    // this.map.addSource\n    this.mapboxOverlay();\n    this.map.addControl(new mapboxgl.FullscreenControl());\n    this.map.addControl(new mapboxgl.NavigationControl());\n    this.map.addControl(\n      new mapboxgl.GeolocateControl({\n        positionOptions: {\n          enableHighAccuracy: true,\n        },\n        trackUserLocation: true,\n      })\n    );\n  }\n\n  mapboxOverlay() {\n    const slider = document.getElementById('slider');\n    const sliderValue = document.getElementById('slider-value');\n    this.map.on('load', () => {\n      // tslint:disable-next-line: no-unused-expression\n      this.map.addSource('myImageSource', {\n        type: 'image',\n        url: 'assets/i-10-islamabad.jpg',\n        coordinates: [\n          [73.024955 , 33.650753], // cda kashmir highway\n          [73.041134, 33.659291 ], // rizvi road kashmir highway:\n          [73.051520, 33.645466], // Service Rd West I-10 Islamabad,\n          [73.035384, 33.636927], // I-10/3 I 10/3 I-10, Islamabad, Islamabad\n        ],\n      });\n      this.map.addLayer({\n        id: 'myImageSource',\n        source: 'myImageSource',\n        type: 'raster',\n        paint: {\n          'raster-opacity': this.opacity,\n        },\n      });\n\n      slider.addEventListener('input', (e) => {\n        // Adjust the layers opacity. layer here is arbitrary - this could\n        // be another layer name found in your style or a custom layer\n        // added on the fly using `addSource`.\n        // e.target;\n        const input = (document.getElementById('slider') as HTMLInputElement)\n          .value;\n        this.map.setPaintProperty(\n          'myImageSource',\n          'raster-opacity',\n          parseInt('' + input + '', 10) / 100\n        );\n        // Value indicator\n        sliderValue.textContent = '' + input + '' + '%';\n      });\n    });\n    \n    this.map.on('load', () => {\n      // tslint:disable-next-line: no-unused-expression\n      this.map.addSource('f-7', {\n        type: 'image',\n        url: 'assets/f-7.png',\n        coordinates: [\n          [73.042912, 33.722351 ],\n          [73.061492 , 33.731482],\n          [73.070957, 33.719287], \n          [73.052850, 33.709633], \n        ],\n      });\n      this.map.addLayer({\n        id: 'f-7',\n        source: 'f-7',\n        type: 'raster',\n        paint: {\n          'raster-opacity': this.opacity,\n        },\n      });\n\n      slider.addEventListener('input', (e) => {\n        const input = (document.getElementById('slider') as HTMLInputElement)\n          .value;\n        this.map.setPaintProperty(\n          'f-7',\n          'raster-opacity',\n          parseInt('' + input + '', 10) / 100\n        );\n        // Value indicator\n        sliderValue.textContent = '' + input + '' + '%';\n      });\n    });\n    this.map.on('load', () => {\n      // tslint:disable-next-line: no-unused-expression\n      this.map.addSource('phase-2', {\n        type: 'image',\n        url: 'assets/phase 2.png',\n        coordinates: [\n          [73.114200, 33.565860], // Phase 4 Gulrez Housing Scheme\n          [73.126250, 33.565800], // Police Foundation, Rawalpindi \n          [73.125652, 33.552467], // Bahria Town Phase V Phase 5 \n          [73.112955, 33.552230] // Bahria Town Phase III Phase 3  \n        ],\n      });\n      this.map.addLayer({\n        id: 'phase-2',\n        source: 'phase-2',\n        type: 'raster',\n        paint: {\n          'raster-opacity': this.opacity,\n        },\n      });\n\n      slider.addEventListener('input', (e) => {\n        const input = (document.getElementById('slider') as HTMLInputElement)\n          .value;\n        this.map.setPaintProperty(\n          'phase-2',\n          'raster-opacity',\n          parseInt('' + input + '', 10) / 100\n        );\n        // Value indicator\n        sliderValue.textContent = '' + input + '' + '%';\n      });\n    });\n \n    // this.map.on('load', () => {\n    //   // tslint:disable-next-line: no-unused-expression\n    //   this.map.addSource('phase-3', {\n    //     type: 'image',\n    //     url: 'assets/phase 3.png',\n    //     coordinates: [\n    //       [73.104769, 33.563229], // Phase 2 Gulrez Housing Scheme\n    //       [73.127969, 33.560081], // Phase 2 Bahria Town, Rawalpindi \n    //       [73.121127, 33.544900], // Soan River\n    //       [73.093428, 33.550266] // Golden Jubilee Residential CHS\n    //     ],\n    //   });\n    //   this.map.addLayer({\n    //     id: 'phase-3',\n    //     source: 'phase-3',\n    //     type: 'raster',\n    //     paint: {\n    //       'raster-opacity': this.opacity,\n    //     },\n    //   });\n\n    //   slider.addEventListener('input', (e) => {\n    //     const input = (document.getElementById('slider') as HTMLInputElement)\n    //       .value;\n    //     this.map.setPaintProperty(\n    //       'phase-3',\n    //       'raster-opacity',\n    //       parseInt('' + input + '', 10) / 100\n    //     );\n    //     // Value indicator\n    //     sliderValue.textContent = '' + input + '' + '%';\n    //   });\n    // });\n    this.map.on('load', () => {\n      // tslint:disable-next-line: no-unused-expression\n      this.map.addSource('e-16', {\n        type: 'image',\n        url: 'assets/maps_images/E-16-crop.png',\n        coordinates: [\n          [ 72.877392, 33.652982],\n          [ 72.898120, 33.652946],\n          [ 72.898034, 33.637977],\n          [ 72.877349, 33.638049]\n        ],\n      });\n      this.map.addLayer({\n        id: 'e-16',\n        source: 'e-16',\n        type: 'raster',\n        paint: {\n          'raster-opacity': this.opacity,\n        },\n      });\n\n      slider.addEventListener('input', (e) => {\n        const input = (document.getElementById('slider') as HTMLInputElement)\n          .value;\n        this.map.setPaintProperty(\n          'e-16',\n          'raster-opacity',\n          parseInt('' + input + '', 10) / 100\n        );\n        // Value indicator\n        sliderValue.textContent = '' + input + '' + '%';\n      });\n    });\n    this.map.on('load', () => {\n      // tslint:disable-next-line: no-unused-expression\n      this.map.addSource('e-18', {\n        type: 'image',\n        url: 'assets/maps_images/E-18-crop.png',\n        coordinates: [\n          [72.834467, 33.635597],\n          [72.858070, 33.647030],\n          [72.877725, 33.620232],\n          [72.854551, 33.609438]\n        ],\n      });\n      this.map.addLayer({\n        id: 'e-18',\n        source: 'e-18',\n        type: 'raster',\n        paint: {\n          'raster-opacity': this.opacity,\n        },\n      });\n\n      slider.addEventListener('input', (e) => {\n        const input = (document.getElementById('slider') as HTMLInputElement)\n          .value;\n        this.map.setPaintProperty(\n          'e-18',\n          'raster-opacity',\n          parseInt('' + input + '', 10) / 100\n        );\n        // Value indicator\n        sliderValue.textContent = '' + input + '' + '%';\n      });\n    });\n\n    this.map.on('load', () => {\n      // tslint:disable-next-line: no-unused-expression\n      this.map.addSource('enclave', {\n        type: 'image',\n        url: 'assets/enclave_map-crop.png',\n        coordinates: [\n          [33.701923, 73.200201],\n          [33.703352, 73.264891],\n          [33.674785, 73.264236],\n          [33.674999, 73.196210]\n        ],\n      });\n      this.map.addLayer({\n        id: 'enclave',\n        source: 'enclave',\n        type: 'raster',\n        paint: {\n          'raster-opacity': this.opacity,\n        },\n      });\n\n      slider.addEventListener('input', (e) => {\n        const input = (document.getElementById('slider') as HTMLInputElement)\n          .value;\n        this.map.setPaintProperty(\n          'enclave',\n          'raster-opacity',\n          parseInt('' + input + '', 10) / 100\n        );\n        // Value indicator\n        sliderValue.textContent = '' + input + '' + '%';\n      });\n    });\n \n  }\n}","<div id=\"map\" class=\"match-parent\">\r\n<div class=\"map-overlay top\">\r\n    <div class=\"map-overlay-inner\">\r\n      <label>Layer opacity: <span id=\"slider-value\">100%</span></label>\r\n      <input id=\"slider\" type=\"range\" min=\"0\" max=\"100\" step=\"0\" value=\"100\" />\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Component({\n  selector: 'app-newpass',\n  templateUrl: './newpass.component.html',\n  styleUrls: ['./newpass.component.css']\n})\nexport class NewpassComponent implements OnInit {\n\n  submitted = false;\n  email: string;\n  newpassForm: FormGroup;\n  constructor(\n    private authServ: AuthenticationService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(param => {\n      this.email = param.email;\n      // console.log(this.email);\n    });\n    this.initialize();\n  }\n  initialize() {\n    this.newpassForm = this.formBuilder.group({\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n  get f() { return this.newpassForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.newpassForm.invalid) {\n      return;\n    }\n    const user = {\n      email: this.email,\n      newpassword: this.newpassForm.value.password\n    };\n\n    // this.authServ.verifyOTPEmail(user).subscribe(data => {\n    //   console.log(data);\n    // });\n    this.authServ.newpassword(user).subscribe(data => {\n      console.log(\"server response: \");\n      console.log(data);\n      const status = data.status;\n      const msg = data.msg;\n      // console.log(this.newpassForm.value.password);\n      // const email = this.newpassForm.value.email;\n      // if (status) {\n        // console.log(this.newpassForm.value.password);\n        alert('\\nMessage: ' + msg + '\\n\\n Status: ' + status);\n        // this.router.navigate(['newpass-component',this.email]);\n      // } else {\n        // alert(msg);\n      // }\n    });\n  }\n}\n","<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n<link href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\n<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n\n\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-5 col-md-5 left\">\n            <div>\n\n                <img class=\"left-img\" src=\"assets/icons/asasa.gif\" />\n            </div>\n        </div>\n\n        <div class=\"col-1 v2\">\n            <div class=\"vl\"></div>\n            Password change\n            <div class=\"vl\"></div>\n        </div>\n\n        <div class=\"col-sm-6 col-md-6 right\">\n            <h2>Welcome to my asasa</h2>\n            <form class=\"form-register\" [formGroup]=\"newpassForm\" (ngSubmit)=\"onSubmit()\">\n                <div class=\"form-group\"  class='input-container'>\n                    <div class=\"input-group\">\n                        <i class=\"fa fa-lock icon\"></i>\n                        <input class=\"form-control\" class=\"input-field\" id=\"password\" type=\"password\" \n                        placeholder=\"Enter new password\"  formControlName=\"password\"\n                            required=\"\" autofocus=\"\" class=\"form-control rounded-pill border-0 shadow-sm px-4\"\n                            [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\">\n                        <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                            <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <div class=\"input-group\">\n                        <i class=\"fa fa-lock icon\"></i>\n                        <input class=\"input-field\" id=\"inputPass\" type=\"password\" placeholder=\"Confirm new password\"\n                            required=\"\" autofocus=\"\" class=\"form-control rounded-pill border-0 shadow-sm px-4\">\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <button type=\"submit\" class=\"btn btn-primary rounded-pill\">Change</button>\n                </div>\n                <button class=\"btn btn-primary rounded-pill\" routerLink=\"/login-component\">Login</button>\n\n                <!-- </div> -->\n            </form>\n        </div>\n\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { User } from '../login/User';\nimport { Router } from '@angular/router';\nimport { throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  // API_URL: string = 'http://localhost:4000';\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\n  private readonly url = 'https://shaisecommercestore.herokuapp.com/api'; // environment.url;\n\n\n\n  // currentUser = {};\n\n  constructor(private httpClient: HttpClient, public router: Router) {\n    // this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\n    // this.currentUser = this.currentUserSubject.asObservable();\n  }\n  public getAll(): Observable<any> {\n    return this.httpClient.get<User[]>(`${this.url}/user`);\n  }\n  // Function to Register the new user\n  register(user: User): Observable<any> {\n\n    return this.httpClient.post(`${this.url}/user/signup`, user).pipe(\n      catchError(this.handleError)\n    )\n  }\n  /////////////////////////////////////\n  /* API Call to verify otp code */\n  //Verifying the email address while signing the user up\n  verifyOTPEmail(user: any): Observable<any> {\n\n    return this.httpClient.post(`${this.url}/user/verifyemail`, user).pipe(\n      catchError(this.handleError)\n    )\n  }\n  //Verifying the user using otp code to his gmail to change his/her password\n  verifyOTPCode(user: any): Observable<any> {\n\n    return this.httpClient.post(`${this.url}/user/password/verifyotpcode`, user).pipe(\n      catchError(this.handleError)\n    )\n  }\n  //Adding new password after forgetting the old password\n  newpassword(user: any): Observable<any> {\n\n    return this.httpClient.post(`${this.url}/user/password/newpassword`, user).pipe(\n      catchError(this.handleError)\n    )\n  }\n\n  // Function to Login the already existed user\n  login(user: User): Observable<any> {\n    // console.log('Hello', user.email);\n    return this.httpClient.post(`${this.url}/user/login`, user);\n      // .subscribe((data: any) => {\n      //   localStorage.setItem('access_token', data.token)\n      //   this.getUserProfile(data._id).subscribe((data) => {\n      //     this.currentUser = data;\n      //     this.router.navigate(['users/profile/' + data.msg._id]);\n      //   })\n      // })\n  } \n  \n  verifyEmail (body:any): Observable<any>{\n    return this.httpClient.post(`${this.url}/user/password/verifyemail`, body);\n\n  }\n  \n  \n  getAccessToken() {\n    return localStorage.getItem('access_token');\n  }\n\n  get isLoggedIn(): boolean {\n    let authToken = localStorage.getItem('access_token');\n    return (authToken !== null) ? true : false;\n  }\n  ////////// Logout Function ////////////////\n  logout() {\n    if (localStorage.removeItem('access_token') == null) {\n      this.router.navigate(['users/login']);\n    }\n  }\n  ///////////////////////////////////////////\n\n  ///////// Get Profile Function ////////////\n  getUserProfile(id): Observable<any> {\n    return this.httpClient.get(`${this.url}/user/profile/${id}`, { headers: this.headers }).pipe(\n      map((res: Response) => {\n        return res || {}\n      }),\n      catchError(this.handleError)\n    )\n  }\n  ///////////////////////////////////////////\n\n  ///////// Error Handling /////////////////\n  handleError(error: HttpErrorResponse) {\n    let msg = '';\n    if (error.error instanceof ErrorEvent) {\n      // client-side error\n      msg = error.error.message;\n    } else {\n      // server-side error\n      msg = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    return throwError(msg);\n  }\n}\n","// import { Observable, throwError } from 'rxjs';\n// import { catchError, retry } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,HttpEvent, HttpErrorResponse, HttpEventType  } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n// import { Map } from './map';\n@Injectable({\n  providedIn: 'root'\n})\nexport class MapserviceService {\n  constructor(private http: HttpClient) { \n}\n\nprivate  apiurl = \"https://asasa.com/api/property\";\nreadData(): Observable<any> {\n  return this.http.get(this.apiurl);\n}\n\n}","\nimport { RegisterResponse } from './RegisterResponse';\nimport { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from \"../services/authentication.service\";\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  submitted = false;\n  registerForm: FormGroup;\n\n  constructor(\n    public formBuilder: FormBuilder,\n    public authService: AuthenticationService,\n    public router: Router) {\n  }\n\n  // registerresponse: RegisterResponse;\n  ngOnInit(): void {\n    this.initialize();\n  }\n\n  initialize() {\n    this.registerForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email, Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n  // check() {\n  //   if (document.getElementById('password') ==\n  //     document.getElementById('confirm')) {\n  //     document.getElementById('message').style.color = 'green';\n  //     document.getElementById('message').innerHTML = 'matching';\n  //     console.log('check function 01');\n  //   } else {\n  //     document.getElementById('message').style.color = 'red';\n  //     document.getElementById('message').innerHTML = 'password not matching';\n  //     console.log('check function 02');\n  //   }\n  // }\n  registerUser() {\n    // this.check();\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n      return;\n    }\n\n    alert('SUCCESS!! :-)\\n' + JSON.stringify(this.registerForm.value))\n\n    // this.authService.getAll().subscribe((data) => {\n    //   console.log(data);\n    // })\n    console.log(this.registerForm.value);\n    this.authService.register(this.registerForm.value).subscribe((data) => {\n      console.log(data);\n      // this.registerresponse = data;\n      const email = this.registerForm.value.email;\n      const msg = data.msg;\n      const status = data.status;\n      // console.log('Status: ' + status);\n      if (status) {\n        this.registerForm.reset();\n\n        alert(msg);\n        this.router.navigate(['signupotp-component', email]);\n      }\n      else {\n        alert(msg);\n      }\n    })\n  }\n  // convenience getter for easy access to form fields\n  get f() { return this.registerForm.controls; }\n\n  // onSubmit() {\n  //   this.submitted = true;\n\n  //   // stop here if form is invalid\n  //   if (this.registerForm.invalid) {\n  //     return;\n  //   }\n\n  //   alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(this.registerForm.value))\n  // }\n}\n","<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n<link href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\n<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n\n\n\n\n<div class=\"container\">\n\t<div class=\"row\">\n\t\t<div class=\"col-sm-5 col-md-5 left\">\n\t\t\t<div>\n\n\t\t\t\t<img class=\"left-img\" src=\"assets/icons/asasa.gif\" />\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div class=\"col-1 v2\">\n\t\t\t<div class=\"vl\"></div>\n\t\t\tRegister\n\t\t\t<div class=\"vl\"></div>\n\t\t</div>\n\n\t\t<div class=\"col-sm-6 col-md-6 right\">\n\t\t\t<h2>Welcome to my asasa</h2>\n\t\t\t<form class=\"form-register\" [formGroup]=\"registerForm\" (ngSubmit)=\"registerUser()\">\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<div class=\"input-group\">\n\t\t\t\t\t\t<i class=\"fa fa-user fa\" aria-hidden=\"true\"></i>\n\t\t\t\t\t\t<input type=\"text\" class=\"form-control inputs\" formControlName=\"username\" id=\"username\"\n\t\t\t\t\t\t\tplaceholder=\"Username\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\n\t\t\t\t\t\t<div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n\t\t\t\t\t\t\t<div *ngIf=\"f.username.errors.required\">Name is required</div>\n\t\t\t\t\t\t\t<!-- <div *ngIf=\"f.username.errors.username\">Name must be at least 6 characters</div> -->\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<div class=\"input-group\">\n\t\t\t\t\t\t<i class=\"fa fa-envelope\" aria-hidden=\"true\"></i>\n\t\t\t\t\t\t<input type=\"text\" class=\"form-control emailInput\" formControlName=\"email\" id=\"email\"\n\t\t\t\t\t\t\tplaceholder=\"Enter Email\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\n\t\t\t\t\t\t<div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n\t\t\t\t\t\t\t<div *ngIf=\"f.email.errors.required\">Email is required</div>\n\t\t\t\t\t\t\t<div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<div class=\"input-group\">\n\t\t\t\t\t\t<i class=\"fa fa-lock fa-lg\" aria-hidden=\"true\"></i>\n\t\t\t\t\t\t<input type=\"password\" #password class=\"form-control inputs\" formControlName=\"password\"\n\t\t\t\t\t\t\tname=\"password\" id=\"password\" placeholder=\"Password\"\n\t\t\t\t\t\t\t[ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n\t\t\t\t\t\t<div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n\t\t\t\t\t\t\t<div *ngIf=\"f.password.errors.required\">Password is required</div>\n\t\t\t\t\t\t\t<div *ngIf=\"f.password.errors.minlength\">Password must be at least 6\n\t\t\t\t\t\t\t\tcharacters</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<div class=\"input-group\">\n\t\t\t\t\t\t<i class=\"fa fa-lock fa-lg\" aria-hidden=\"true\"></i>\n\t\t\t\t\t\t<input type=\"password\" #confirm class=\"form-control inputs\" name=\"confirm\" id=\"confirm\"\n\t\t\t\t\t\t\tplaceholder=\"Confirm Password\" />\n\t\t\t\t\t\t<!-- <div *ngIf=\"password.value!=confirm.value\"> Password & Confirm Password does not match.</div> -->\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id='message'></div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<button type=\"submit\" class='btn' class=\"btn btn-primary rounded-pill\">Register</button>\n\t\t\t\t</div>\n\t\t\t\t<br>\n\t\t\t\tAlready Registered!\n\t\t\t\t<a routerLink=\"/login-component\"> <b>Login!</b></a>\n\t\t\t\t<!-- <div class=\"form-group\">\n\t\t\t\t\t<input type=\"password\" [(ngModel)]=\"userdata.password\" name=\"password\" placeholder=\"Password\" class=\"form-control\" required #password=\"ngModel\" pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\" />\n\t\t\t\t\t<div *ngIf=\"password.invalid && (myform.submitted || password.touched)\" class=\"alert alert-danger\">\n\t\t\t\t\t  <div *ngIf=\"password.errors.required\"> Password is required. </div>\n\t\t\t\t\t  <div *ngIf=\"password.errors.pattern\"> Must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters.</div>\n\t\t\t\t\t</div>\n\t\t\t\t   </div>\n\t\t\t\t   \n\t\t\t\t   <div class=\"form-group\">\n\t\t\t\t\t<input type=\"password\" [(ngModel)]=\"userdata.confirmpassword\" name=\"confirmpassword\" placeholder=\"Confirm Password\" class=\"form-control\" required #confirmpassword=\"ngModel\" pattern=\"{{ password.value }}\" />\n\t\t\t\t\t<div *ngIf=\" confirmpassword.invalid && (myform.submitted || confirmpassword.touched)\" class=\"alert alert-danger\">\n\t\t\t\t\t  <div *ngIf=\"confirmpassword.errors.required\"> Confirm password is required. </div>\n\t\t\t\t\t  <div *ngIf=\"confirmpassword.errors.pattern\"> Password & Confirm Password does not match.</div>\n\t\t\t\t\t</div>\n\t\t\t\t   </div> -->\n\t\t\t\t<!-- Form Ended -->\n\t\t\t</form>\n\n\t\t</div>\n\t</div>\n\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Component({\n  selector: 'app-signupotp',\n  templateUrl: './signupotp.component.html',\n  styleUrls: ['./signupotp.component.css']\n})\nexport class SignupotpComponent implements OnInit {\n\n  submitted = false;\n  email: string;\n  signupotpForm: FormGroup;\n  constructor(\n    private authServ: AuthenticationService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(param => {\n      this.email = param.email;\n      // console.log(this.email);\n    });\n    this.initialize();\n  }\n  initialize() {\n    this.signupotpForm = this.formBuilder.group({\n      code: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(6), Validators.pattern('^[0-9]+$')]]\n    });\n  }\n  get f() { return this.signupotpForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.signupotpForm.invalid) {\n      return;\n    }\n    const user = {\n      email: this.email,\n      otpcode: this.signupotpForm.value.code\n    };\n\n    this.authServ.verifyOTPEmail(user).subscribe(data => {\n      console.log(data);\n      const status = data.status;\n      const msg = data.msg;\n      if (status) {\n\n        alert('\\nMessage: ' + msg + '\\n\\n Status: ' + status)\n        this.router.navigate(['']);\n      } else {\n        alert(msg);\n      }\n    });\n\n  }\n}\n","<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n<link href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\n<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n\n\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-5 col-md-5 left\">\n            <div>\n\n                <img class=\"left-img\" src=\"assets/icons/asasa.gif\" />\n            </div>\n        </div>\n\n        <div class=\"col-1 v2\">\n            <div class=\"vl\"></div>\n            Verification\n            <div class=\"vl\"></div>\n        </div>\n\n        <div class=\"col-sm-6 col-md-6 right\">\n            <h2>Welcome to my asasa</h2>\n\n            <form class=\"form-register\" [formGroup]=\"signupotpForm\" (ngSubmit)=\"onSubmit()\">\n\t\t\t\t<div class=\"form-group\">\n                <div class=\"input-group\">\n                    <i class=\"fa fa-user icon\"></i>\n                    <input type=\"text\" class=\"form-control inputs\" formControlName=\"code\" name=\"code\" id=\"code\"  \n                        placeholder=\"Enter 6-digit verify code\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.code.errors }\">\n                    <div *ngIf=\"submitted && f.code.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.code.errors.required\">Code is required</div>\n                        <div *ngIf=\"f.code.errors.minlength\">Code must be at least 6 characters</div>\n                        <div *ngIf=\"f.code.errors.maxlength\">Code should not be greater than 6 characters</div>\n                        <div *ngIf=\"f.code.errors.pattern\">Code must be a valid number sequence</div>\n                    </div>\n                </div>\n                </div>\n                <!-- <input id=\"customCheck1\" type=\"checkbox\" checked class=\"custom-control-input\"> -->\n                <div class=\"form-group\">\n\t\t\t\t\t<button type=\"submit\" class='btn'\n\t\t\t\t\t\tclass=\"btn btn-primary rounded-pill\">Verify</button>\n\t\t\t\t</div>\n                <button class=\"btn btn-primary rounded-pill\" routerLink=\"/register-component\">back</button>\n                <!-- <div class=\"form-group\">\n                    <button class=\"btn btn-primary\" routerLink=\"/newpass-component\">Verify</button>\n                </div>\n                <button class=\"btn1 btn-primary\" routerLink=\"/forgetpass-component\">back</button> -->\n\n                <!-- </div> -->\n            </form>\n        </div>\n    </div>\n\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  mapbox: {\n    accessToken: 'pk.eyJ1IjoiYmFiYXJic2NzMzI2MSIsImEiOiJja2N2dHR2MGUwN21iMnhydXlvcXA2MTlmIn0.gympgF_-zALE5J5MyZH3fQ'\n  },\n  url: 'https://shaisecommercestore.herokuapp.com/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}